<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFrostMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>4</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>sprFrostMsk</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
event_inherited();

healthpointsStart = 28;
healthpoints = healthpointsStart;

if(!instance_exists(objFrostMegaMan))
{
    instance_create(x + 24 * image_xscale, y + 16 * image_yscale, objFrostMegaMan);
}
if(!instance_exists(objFrostMegaMan2))
{
    instance_create(x + 6 * image_xscale, y + 16 * image_yscale, objFrostMegaMan2);
}
if(!instance_exists(objFrostMegaMan3))
{
    instance_create(x + 15 * image_xscale, y + 16 * image_yscale, objFrostMegaMan3);
}

if(!instance_exists(objFrostRailContorol))
{
    instance_create(view_xview + 16, view_yview, objFrostRailContorol);
}

customPose = true;
hasTriggeredFall = false;
introType = 0;
contactDamage = 5;
ground = false;
attackTimer = 0;
timescale = 1;

mm8Music = 0;

// rather than using game maker's image offset features, this time round we're building a more accurate animation system.
imageTimer = 0;
imageTimerMax = 99;

// this is the minmum image_indexs of chill man for any given animation. imageNoMin is what the image_index is set to when plant man has finished an animation.
imageNoMin = 0;
attackTimerMax = 999;
phase = 0;
oldPhase = 2;
delay = 0;
hasFired = false;
pauseGravity = false;
shotsFired = 0;
frostTimer = 0;
phasetime = 0;
xOff = 0;

//Frost Code
maxFrostBlock = 0;

// chill man has a bit of randomised shenangians going on. this variable sets it.
randomiser = -1;

manualColors = true;

// Health Bar
healthBarPrimaryColor[1] = global.nesPalette[27];
healthBarSecondaryColor[1] = global.nesPalette[40];

music = "Rockman8intro.ogg";
musicType = "OGG";
musicTrackNumber = 0;
musicLoop = true;
musicLoopSecondsStart = 2.930;
musicLoopSecondsEnd = 36.000;

enemyDamageValue(objBlackHoleBomb, 4);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (randomiser == -1)
{
    randomiser = choose(1, 1);
}
if (entityCanStep())
{
    
    if(startIntro == true)
    {
        attackTimer += 1
    }
    
    // Fire Man's custom intro
    if (startIntro &amp;&amp; attackTimer == 40)
    {
        y -= view_hview;
        canFillHealthBar = false;
        startIntro = false;
        isIntro = true;
        visible = true;
        grav = gravStart;
        attackTimer = 0
        calibrateDirection();
    }
    else if (isIntro)
    {
        // custom intro:
        if (attackTimer == 0) &amp;&amp; (introType == 0)
        {
            image_index = 11;
        }
        if (y &gt;= ystart || hasTriggeredFall)
        {
            hasTriggeredFall = true;
            y = ystart;
            attackTimer++;
            if (attackTimer &lt; 8)
            {
                image_index = 9;
            }
            if (attackTimer == 8)
            {
                playSFX(sfxFrostLand)
                screenShake(64, 0, 2);
            }
            if (attackTimer == 15)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 20)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 25)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 30)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 40)
            {
                image_index = 0;
            }
            if (attackTimer == 50)
            {
                image_index = 1;
            }
            if (attackTimer == 55)
            {
                image_index = 2;
            }
            if (attackTimer == 60)
            {
                image_index = 3;
                screenShake(34, 0, 2);
                playSFX(sfxFrostShake)
                with(objFrostMegaMan)
                {
                breakfrost = 1
                }
            }
            if (attackTimer == 75)
            {
                image_index = 4;
            }
            if (attackTimer == 80)
            {
                image_index = 5;
                screenShake(34, 0, 2);
                playSFX(sfxFrostShake)
                with(objFrostMegaMan2)
                {
                breakfrost = 1
                }
            }
            if (attackTimer == 95)
            {
                image_index = 6;
            }
            if (attackTimer == 100)
            {
                image_index = 7;
            }
            if (attackTimer == 105)
            {
                image_index = 17;
            }
            if (attackTimer == 120)
            {
                image_index = 18;
            }
            if (attackTimer == 125)
            {
                image_index = 19;
                screenShake(34, 0, 2);
                playSFX(sfxFrostShake)
                with(objFrostMegaMan3)
                {
                breakfrost = 1
                }
            }
            if (attackTimer == 130)
            {
                image_index = 20;
            }
            if (attackTimer == 155)
            {
                image_index = 6;
            }
            if (attackTimer == 160)
            {
                image_index = 7;
            }
            if (attackTimer == 165)
            {
                image_index = 8;
            }
            if (attackTimer == 185)
            {
                image_index = 7;
            }
            if (attackTimer == 190)
            {
                image_index = 0;
            }
            
            if (attackTimer == 195)
            {
                image_speed = 0;
                isIntro = false;
                attackTimer = 0;
                blockCollision = blockCollisionStart;
                canFillHealthBar = true;
            }
        }
    }
    if (isFight)
    {
        if(mm8Music == 0){
            mm8Music = 1;
            playMusic("MM8Boss.ogg", "OGG",0, 5.800, 26.000, 1, 0.8);
        }
        // this sets up chill man's movement variables.
        image_speed = 0;
        if (pauseGravity)
        {
            grav = 0;
            yspeed = 0;
        }
        else
        {
            grav = 0.17;
        }
        
        
        // these control various timers crash man uses - attackTimer and delay.
        // attackTimer can trigger an attack to occur after a certain amount of ticks. (around 145)
        // Delay - Delay is useful to use to stop code from firing too quickly.
        attackTimer += 1;
        if (delay &gt; 0)
        {
            delay -= 1;
        }
        
        // this prevents chill man from randomly choosing the same attack twice in a row
        if (randomiser == oldPhase)
        {
            if ((bbox_left &lt;= view_xview + 32 &amp;&amp; /* image_xscale */ image_xscale == -1)
                    || (bbox_right &gt;= view_xview + view_wview - 32 &amp;&amp; /* image_xscale */ image_xscale == 1)
                    || (checkSolid(/* image_xscale */ image_xscale * 16, 0) || (xcoll * image_xscale &gt; 0)))
            {
            randomiser = 1
            }
            else
            {
            if(maxFrostBlock)
            {
            randomiser = choose(1, 1.5, 3.5, 6);
            }
            else
            {
            randomiser = choose(1, 1.5, 3.5);
            }
            }
        }
        if (phase &gt; 0 &amp;&amp; phase != oldPhase)
        {
            oldPhase = phase;
        }
        
        switch (phase)
        {
            case 0: // idle 
                calibrateDirection();
                image_index = 0
                
                if (attackTimer &gt;= 15)
                {
                    phase = randomiser;
                    attackTimer = 0;
                }
                break;
                
           // IceWave
            case 1: 
           
            if (attackTimer &lt; 1)
            
            
            if (attackTimer == 1)
            {
            image_index = 6
            }
            if (attackTimer == 5)
            {            
            image_index = 7
            }
            if (attackTimer == 10)
            {            
            image_index = 17
            }
            if (attackTimer == 30)
            {            
            image_index = 18
            playSFX(sfxIceWave1);
            }
            if (attackTimer == 35)
            {            
            image_index = 19
            }
            if (attackTimer == 40)
            {            
            image_index = 20
            playSFX(sfxFrostShake);
            screenShake(30, 1, 1);
                                
            // Create ground wave
            var i = instance_create(x + 32 * image_xscale, y + 28, objIceWave);
            i.image_xscale = image_xscale;
            }
            if (attackTimer == 90)
            {
            phase = 0;
            attackTimer = 0
            
                       
            }
            break;
            
            case 1.5: // Jump in            
           
            if (attackTimer &lt; 1)
            
            if (attackTimer == 1)
            { 
            image_index = 9
            }
            if (ground &amp;&amp; delay == 0 &amp;&amp; attackTimer &gt; 10)
            {
                    phase = 2;
                    attackTimer = 0
            }
            break;
                
            
                
                case 2: // Jump 
                if ((bbox_left &lt;= view_xview + 16 &amp;&amp; /* image_xscale */ image_xscale == -1)
                    || (bbox_right &gt;= view_xview + view_wview - 16 &amp;&amp; /* image_xscale */ image_xscale == 1)
                    || (checkSolid(/* image_xscale */ image_xscale * 16, 0) || (xcoll * image_xscale &gt; 0)))
                {
                xspeed = 0
                
                }
                
                
                if (attackTimer &lt; 1)
                {
                    
                }
                if (attackTimer == 1)
                {
                delay = 3;
                image_index = 10             
                yspeed = choose(-4.3, -4.5, -5, -6)
                xspeed = choose(1.9, 2, 2.4) * image_xscale;
                ground = false;
                hasFired = true;                            
                }
                if (attackTimer == 20)
                {
                image_index = 11                                       
                }                                                                   
            
                if (ground &amp;&amp; delay == 0 &amp;&amp; attackTimer &gt; 30)
                {
                    if(maxFrostBlock == 1)
                    {
                    phase = 5;
                    }
                    else
                    {
                    phase = 3;
                    }
                    attackTimer = 0
                    image_index = 9
                    xspeed = 0
                }
                break;
                
            case 3: // Land
           
            if (attackTimer &lt; 0)
            
            if (attackTimer == 1)//Dammy
            {
        
            }
            if (attackTimer == 1)
            {
                playSFX(sfxFrostLand)
                screenShake(64, 0, 2);
                // Stun Mega Man
              if (instance_exists(objMegaman))
                {
                with (objMegaman)
                {
                 playerGetShocked(false, 0, true, 20);
                }
              }
            }
            if (attackTimer == 5)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 10)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 15)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 20)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 25)
            {
                playSFX(sfxFrostLand)
            }
                if (ground &amp;&amp; delay == 0 &amp;&amp; attackTimer &gt; 30)
                {
                    attackTimer = 0;
                    phase = 0;
                    
                }
                break;
            
            case 3.5: // Rush in            
           
            if (attackTimer &lt; 1)
            
            if (attackTimer == 1)
            { 
            
            }
            if (attackTimer == 1)
            { 
            image_index = 12
            }
            if (attackTimer == 5)
            { 
            image_index = 13
            }
            if (attackTimer == 10)
            { 
            image_index = 14
            }
            if (attackTimer == 15)
            { 
            image_index = 15
            }
            if (ground &amp;&amp; delay == 0 &amp;&amp; attackTimer &gt; 30)
            {
                    phase = 4;
                    attackTimer = 0
            }
            break; 
            
            case 4: // Rush  
            if ((bbox_left &lt;= view_xview + 16 &amp;&amp; /* image_xscale */ image_xscale == -1)
                    || (bbox_right &gt;= view_xview + view_wview - 16 &amp;&amp; /* image_xscale */ image_xscale == 1)
                    || (checkSolid(/* image_xscale */ image_xscale * 16, 0) || (xcoll * image_xscale &gt; 0)))
                {
                xspeed = 0
                
                }        
           
            if (attackTimer &lt; 1)
            
            if (attackTimer == 1)
            { 
            }
            if (attackTimer == 2)
            { 
            xspeed = 3 * image_xscale;
            image_index = 16
            }
            if (attackTimer == 20)
            { 
            xspeed = 2 * image_xscale;
            }
            if (attackTimer == 35)
            { 
            xspeed = 1 * image_xscale;
            }
            if (attackTimer == 40)
            { 
            xspeed = 0.8 * image_xscale;
            }
            if (attackTimer == 45)
            { 
            xspeed = 0.5 * image_xscale;
            }
            if (ground &amp;&amp; delay == 0 &amp;&amp; attackTimer &gt; 60)
            {
                    phase = 4.5;
                    xspeed = 0
                    attackTimer = 0
            }
            break;
            
            case 4.5: // Rush        
           
            if (attackTimer &lt; 1)
            
            if (attackTimer == 1)
            { 
            }
            if (attackTimer == 2)
            { 
            image_index = 15
            }
            if (attackTimer == 10)
            { 
            image_index = 12
            for (b = 0; b &lt; 4; b += 1)
    {
        if (b == 0)
        {
            xx = -12;
            yy = 0;
            xs = -0.5;
            ys = -2;
        }
        if (b == 1)
        {
            xx = 0;
            yy = 10;
            xs = -0.5;
            ys = -3;
        }
        if (b == 2)
        {
            xx = 5;
            yy = -7;
            xs = 0.5;
            ys = -3;
        }
        if (b == 3)
        {
            xx = 12;
            yy = 14;
            xs = 0.5;
            ys = -2;
        }
        i = instance_create(bboxGetXCenter() + xx, bboxGetYCenter() + yy, objEnemyBullet);
        i.sprite_index = sprFrostShards;
        i.image_index = b;
        i.grav = 0.2;
        i.xspeed = xs;
        i.yspeed = ys;
        i.contactDamage = 0;
        i.reflectable = 0;
        }
        playSFX(sfxFrostPunchEnd);
            }
            if (ground &amp;&amp; delay == 0 &amp;&amp; attackTimer &gt; 15)
            {
                    phase = 0;
                    xspeed = 0
                    attackTimer = 0
            }
            break;
            
            case 5: // Land inFrost Block Fall
           
            if (attackTimer &lt; 0)
            
            if (attackTimer == 1)//Dammy
            {
        
            }
            if (attackTimer == 1)
            {
                maxFrostBlock = 0       //MAX FROST
                playSFX(sfxFrostLand)
                screenShake(64, 0, 2);
                // Stun Mega Man
              if (instance_exists(objMegaman))
                {
                with (objMegaman)
                {
                 playerGetShocked(false, 0, true, 20);
                }
              }
            }
            if (attackTimer == 5)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 10)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 15)
            {
                playSFX(sfxFrostLand)
                with(objFrostBlockRail3)
                fallfrost = 1
                with(objFrostBlockRail4)
                fallfrost = 1
            }
            if (attackTimer == 20)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 25)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 30)
            {
                playSFX(sfxFrostLand)
            }
            if (attackTimer == 45)
            {
                with(objFrostBlockRail2)
                fallfrost = 1
                with(objFrostBlockRail5)
                fallfrost = 1
            }
            if (attackTimer == 75)
            {
                with(objFrostBlockRail1)
                fallfrost = 1
                with(objFrostBlockRail6)
                fallfrost = 1
            }
            
                if (ground &amp;&amp; delay == 0 &amp;&amp; attackTimer &gt; 80)
                {
                    attackTimer = 0;
                    phase = 0;
                    with(objFrostRailContorol)
                    {
                    phase = 2
                    }
                    
                }
                break;
                
                case 6: // Frost Fall    
           
            if (attackTimer &lt; 1)
            
            if (attackTimer == 1)
            { 
            }
            if (attackTimer == 20)
            {
                image_index = 1;
            }
            if (attackTimer == 25)
            {
                image_index = 2;
            }
            if (attackTimer == 30)
            {
                image_index = 3;
                screenShake(34, 0, 2);
                playSFX(sfxFrostShake)
                with(objFrostBlockRail3)
                fallfrost = 1
                with(objFrostBlockRail4)
                fallfrost = 1
            }
            if (attackTimer == 45)
            {
                image_index = 4;
            }
            if (attackTimer == 50)
            {
                image_index = 5;
                screenShake(34, 0, 2);
                playSFX(sfxFrostShake)                
            }
            if (attackTimer == 65)
            {
                image_index = 6;
                with(objFrostBlockRail2)
                fallfrost = 1
                with(objFrostBlockRail5)
                fallfrost = 1
            }
            if (attackTimer == 70)
            {
                image_index = 7;
            }
            if (attackTimer == 75)
            {
                image_index = 17;
            }
            if (attackTimer == 90)
            {
                image_index = 18;
            }
            if (attackTimer == 95)
            {
                image_index = 19;
                screenShake(34, 0, 2);
                playSFX(sfxFrostShake)
                
                var i = instance_create(x + 32 * image_xscale, y + 28, objIceWave);
                i.image_xscale = image_xscale;
            }
            if (attackTimer == 100)
            {
                image_index = 20;                
            }
            if (attackTimer == 140)
            {
                with(objFrostBlockRail1)
                fallfrost = 1
                with(objFrostBlockRail6)
                fallfrost = 1
            }
            if (ground &amp;&amp; delay == 0 &amp;&amp; attackTimer &gt; 150)
            {
                    maxFrostBlock = 0
                    phase = 0;
                    xspeed = 0
                    attackTimer = 0
                    with(objFrostRailContorol)
                    {
                    phase = 2
                    }
            }
            break;
        }   
      
      
    }
}
else
{ }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// if image_index is shield up, and you're not shooting sniper joe in the back or whatever, reflect bullets
if (image_index == 12 || image_index == 13 || image_index == 14 || image_index == 15 || image_index == 16 || image_index == 18 || image_index == 19)
{
    
        other.guardCancel = 3;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

with(objFrostRailContorol)
{
    a = instance_create(x + 112, y + 16, objExplosion);
    a.sprite_index = sprBigExplosion;
}
with (objEnemyBullet)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
with (objFrostBlock)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
with (objIceWave)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
