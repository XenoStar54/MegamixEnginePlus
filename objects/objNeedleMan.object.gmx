<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNeedleMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>mskNeedleMan</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 28;
healthpoints = healthpointsStart;
pose = sprNeedleManPose;
poseImgSpeed = 5 / 60;
contactDamage = 4;
ground = false;
phase = 0;
timer = 0;
animTimer = 0;

stopOnFlash = true;

myGrav = 0.25;
spriteNormal = sprNeedleMan;
barrageAmount = 1; // this is dumb

initBarrageOf3 = 1;
init = 0;

// Health Bar
healthBarPrimaryColor[1] = 14;
healthBarSecondaryColor[1] = 40;

// Music
music = "Mega_Man_3.nsf";
musicType = "VGM";
musicTrackNumber = 12;

// Damage Table
enemyDamageValue(objBusterShot, 1);
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);

// MM1
enemyDamageValue(objSuperArmBlockProjectile, 1);
enemyDamageValue(objSuperArmDebris, 1);
enemyDamageValue(objIceSlasher, 1);
enemyDamageValue(objThunderBeam, 1);

// MM2
enemyDamageValue(objMetalBlade, 0);

// MM3
enemyDamageValue(objNeedleCannon, 4);
enemyDamageValue(objMagnetMissile, 2);
enemyDamageValue(objGeminiLaser, 4);
enemyDamageValue(objHardKnuckle, 2);
enemyDamageValue(objTopSpin, 1);
enemyDamageValue(objSearchSnake, 0);
enemyDamageValue(objSparkShock, 0);
enemyDamageValue(objShadowBlade, 2);

// MM4
enemyDamageValue(objRainFlush, 1);
enemyDamageValue(objPharaohShot, 1); //Charge shot = 6

// MM5
enemyDamageValue(objPowerStone, 0);

// MM6
enemyDamageValue(objPlantBarrier, 0);

// MM7
enemyDamageValue(objSlashClaw, 2);

// MM8
enemyDamageValue(objHomingSniper, 1);

// MM9
enemyDamageValue(objConcreteShot, 1);
enemyDamageValue(objTornadoBlow, 1);
enemyDamageValue(objLaserTrident, 1);
enemyDamageValue(objJewelSatellite, 4);
enemyDamageValue(objHornetChaser, 1);
enemyDamageValue(objBlackHoleBomb, 0);

// MM10
enemyDamageValue(objTripleBlade, 0);
enemyDamageValue(objWaterShield, 1);
enemyDamageValue(objChillShot, 2);
enemyDamageValue(objChillSpikeLanded, 4);
enemyDamageValue(objThunderWool, 1);
enemyDamageValue(objWheelCutter, 1);
enemyDamageValue(objSolarBlaze, 0);

// MM11
enemyDamageValue(objBlockDropper, 0);

// MMI

// MMII
enemyDamageValue(objSakugarne, 2);

// MMIII

// MMIV

// MMV
enemyDamageValue(objSparkChaser, 4);
enemyDamageValue(objGrabBuster, 1);
enemyDamageValue(objBreakDash, 1);
enemyDamageValue(objSaltWater, 2);

// MM&amp;B
enemyDamageValue(objTenguBlade, 1);
enemyDamageValue(objTenguDash, 1);
enemyDamageValue(objTenguDisk, 1);
enemyDamageValue(objIceWall, 4);
enemyDamageValue(objMagicCard, 2);

// MM&amp;B2
enemyDamageValue(objFlameMixer, 1);

// Other
enemyDamageValue(objMagneticShockwave, 1);

// Utilities
enemyDamageValue(objWireAdapter, 4);
enemyDamageValue(objSuperArrow, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    if (isIntro)
    {
        init = initBarrageOf3;
        timer = 0;
        animTimer = 0;
        phase = 0;
    }
    else if (isFight)
    {
        if(!instance_exists(objMegaman)) phase = 0;
        if(phase == 0) // idle
        {
            grav = myGrav;
            sprite_index = spriteNormal;
            if(ground)
            {
                image_index = 0;
                xspeed = 0;
            }
            else image_index = 3;
            
            if(instance_exists(objMegaman))
            {
                calibrateDirection();
                timer++;
                if(timer &gt; 120 || instance_exists(prtPlayerProjectile) || abs(x - objMegaman.x) &lt; 36)
                {
                    timer = 0;
                    barrageAmount = 1;
                    animTimer = 0;
                    phase = 1;
                }
            }
        }
        else if(phase == 1) // needle cannon
        {
            xspeed = 0;
            calibrateDirection();
            if(true)
            {
                if(ground)
                {
                    if(animTimer)
                    {
                        animTimer--;
                        image_index = 0;
                    }
                    else
                    {
                        image_index = 0;
                        if(barrageAmount)
                        {
                            barrageAmount--;
                            timer = -1;
                            yspeed = choose(6,8)*-sign(myGrav);
                            image_index = 3;
                            animTimer = 9;
                        }
                        else
                        {
                            var rng = choose(0,1); // this is fucking stupid
                            if(rng)
                            {
                                timer = -1;
                                yspeed = choose(6,8)*-sign(myGrav);
                                image_index = 3;
                                animTimer = 9;
                            }
                            else
                            {
                                timer = 0;
                                phase = 2;
                            }
                        }
                    }
                }
                else
                {
                    if(timer == -1)
                    {
                        if(sign(yspeed) != -sign(myGrav))
                        {
                            timer = 0;
                            grav = 0;
                            yspeed = 0;
                        }
                    }
                    else
                    {
                        timer++;
                        if(timer == 4)
                        {
                            image_index = 4;
                            if(init)
                            {
                                init = 0;
                            }
                            else
                            {
                                var needle = instance_create(x+13*image_xscale,y+2*image_yscale,objNeedleManBullet);
                            }
                        }
                        else if(timer == 10)
                        {
                            image_index = 3;
                        }
                        else if(timer == 14)
                        {
                            image_index = 5;
                            var needle = instance_create(x+3*image_xscale,y+6*image_yscale,objNeedleManBullet);
                        }
                        else if(timer == 15)
                        {
                            image_index = 0;
                            grav = myGrav;
                        }
                        else if(timer == 23)
                        {
                            image_index = 3;
                        }
                        else if(timer == 32)
                        {
                            grav = 0;
                            yspeed = 0;
                        }
                        else if(timer == 36)
                        {
                            image_index = 4;
                            var needle = instance_create(x+13*image_xscale,y+2*image_yscale,objNeedleManBullet);
                        }
                        else if(timer == 42)
                        {
                            image_index = 3;
                        }
                        else if(timer == 46)
                        {
                            image_index = 5;
                            var needle = instance_create(x+3*image_xscale,y+6*image_yscale,objNeedleManBullet);
                        }
                        else if(timer == 47)
                        {
                            image_index = 0;
                            grav = myGrav;
                        }
                        else if(timer &gt;= 55)
                        {
                            image_index = 3;
                        }
                    }
                }
            }
        }
        else if(phase == 2) // needle strike
        {
            xspeed = 0;
            if(ground)
            { 
                if(timer &lt; 8)
                {
                    timer++;
                    image_index = 0;
                }
                else if(timer == 8)
                {
                    timer++;
                    image_index = 6;
                    var strike = instance_create(x+14*image_xscale,y-9*image_yscale,objNeedleManStrike);
                    strike.motherObject = self;
                    strike.image_xscale = image_xscale;
                    strike.image_yscale = image_yscale;
                }
                else
                {
                    var moveOn = true;
                    for(var i = 0; i &lt; instance_number(objNeedleManStrike); i++)
                    {
                        var strike = instance_find(objNeedleManStrike,i);
                        if(strike.motherObject == self)
                        {
                            moveOn = false;
                            i = instance_number(objNeedleManStrike);
                        }
                    }
                    if(moveOn)
                    {
                        timer++;
                        if(timer &gt;= 10)
                        {
                            phase = 3;
                            timer = -1;
                        }
                    }
                }
            }
            else
            {
                image_index = 3;
            }
        }
        else if(phase == 3) // jump
        {
            calibrateDirection();
            if(ground)
            {
                xspeed = 0;
                if(timer &lt; 0)
                {
                    timer = 0;
                    yspeed = -6*sign(myGrav);
                    grav = myGrav;
                    var distance = irandom_range(0,6)*32;
                    xspeed = xSpeedAim(x,y,x+distance*image_xscale,y,yspeed,grav);
                    barrageAmount = choose(0,1);
                    animTimer = 9;
                    image_index = 3;
                }
                else
                {
                    image_index = 0;
                    phase = 1;
                }
            }
        }
        // flash stopper drains Needle Man's health:
        if (global.timeStopped)
        {
            healthpoints -= 1 / 30;
            if (healthpoints &lt;= 0)
                event_user(EV_DEATH);
            
            // flash stopper drains extra fast:
            with (objFlashStopper)
                phase -= 3;
        }
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objNeedleManBullet)
    instance_destroy();
with (objNeedleManStrike)
    instance_destroy();
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
