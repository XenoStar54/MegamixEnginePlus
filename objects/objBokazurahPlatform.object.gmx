<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBokazurahPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// These can only be destroyed by objBokazurahBall

// NEW: now can be destroyed by "heavy" enemies landing on it with certain velocity
// and charged power adaptor punch

event_inherited();

isSolid = 1;

grav = 0;
blockCollision = 1;
canHit = false;
bubbleTimer = -1;

itemDrop = -1;

// super arm interaction
category = "superArmTarget";
superArmFlashTimer = 0;
superArmFlashInterval = 1;
superArmFlashOwner = noone;
superArmHoldOwner = noone;
superArmDeathOnDrop = true;
superArmThrown = false;

// Bowser SMB3 moment
crushable = true;
crushMinYvel = 5;

var index = 0;
breaksMe[index++] = objBigEye;
breaksMe[index++] = objMM2Mech;
breaksMe[index++] = objMole;
breaksMe[index++] = objBikky;
breaksMe[index++] = objGiantSpringer;
breaksMe[index++] = objJumbig;
breaksMe[index++] = objPowerMuscler;
breaksMe[index++] = objBenK;
breaksMe[index++] = objDachone;
breaksMe[index++] = objDachoneLtdEd;
breaksMe[index++] = objPowerSlam;
breaksMe[index++] = objStegorus;
breaksMe[index++] = objBigStomper;
breaksMe[index++] = objBokazurahBall;
breaksMe[index++] = objMolmole;
breaksMe[index++] = objNitroTruck;
breaksMe[index++] = objOshitsuOsarettsu;
breaksMe[index++] = objTsurareStamp;
breaksMe[index++] = objDrillun;
breaksMe[index++] = objPickelmanDada;
breaksMe[index++] = objPressn;
breaksMe[index++] = objTamp;
breaksMe[index++] = objFatool;
breaksMe[index++] = objHammerfall;
breaksMe[index++] = objHotDog;
breaksMe[index++] = objLanternFish;
breaksMe[index++] = objBigSnakey;
breaksMe[index++] = objPenPenMaker;
breaksMe[index++] = objTama;
breaksMe[index++] = objEscaroo;
breaksMe[index++] = objKabatoncue;
breaksMe[index++] = objMoby;
breaksMe[index++] = objDachone;
breaksMe[index++] = objOctoboss;
breaksMe[index++] = objGamarnAndGamadayu;
breaksMe[index++] = objGorillaTank;
breaksMe[index++] = objSquidon;
breaksMe[index++] = objMadGrinder;
breaksMe[index++] = objTruckJoe;
breaksMe[index++] = objShirokumachineGTV;
breaksMe[index++] = objStoneHead;
breaksMe[index++] = objPaozo;
breaksMe[index++] = objSHFallingBoulder;
breaksMe[index++] = objPaozoBall;
breaksMe[index++] = objGiantMetCannon;
breaksMe[index++] = objGundrill;
breaksMe[index++] = objTyhorn;
breaksMe[index++] = objTKhamenDropRock;
breaksMe[index++] = objDocKumo;
breaksMe[index++] = objKnuckleDuster;
breaksMe[index++] = objStompy;
breaksMe[index++] = objProtoEye;
breaksMe[index++] = objGutsMan;
breaksMe[index++] = objWoodMan;
breaksMe[index++] = objAirMan;
breaksMe[index++] = objGutsDozer;
breaksMe[index++] = objHardMan;
breaksMe[index++] = objToadMan;
breaksMe[index++] = objMetallDaddy;
breaksMe[index++] = objStoneMan;
breaksMe[index++] = objNapalmMan;
breaksMe[index++] = objBlizzardMan;
breaksMe[index++] = objKnightMan;
breaksMe[index++] = objTurboMan;
breaksMe[index++] = objFrostMan;
breaksMe[index++] = objGrenadeMan;
breaksMe[index++] = objConcreteMan;
breaksMe[index++] = objCommandoMan;
breaksMe[index++] = objQuint;
breaksMe[index++] = objPunk;
breaksMe[index++] = objGiantSuzy;
breaksMe[index++] = objUranus;
breaksMe[index++] = objHyperStormH;
breaksMe[index++] = objIronBall;
breaksMe[index++] = objDanganMan;
breaksMe[index++] = objKonroMan;
breaksMe[index++] = objXBlock;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    if(instance_exists(objPowerAdaptorPunch))
    {
        var punch = instance_place(x,y,objPowerAdaptorPunch);
        if(punch &amp;&amp; punch.type &gt;= 2)
        {
            event_user(10);
        }
    }
    
    if(instance_exists(objBokazurahBall))
    {
        var ball = instance_place(x,y,objBokazurahBall);
        if(ball)
        {
            event_user(10);
            with(ball) event_user(10);
        }
    }
    
    if(crushable) for(var i = 0; i &lt; array_length_1d(breaksMe); i++)
    {
        if(instance_exists(breaksMe[i]) &amp;&amp; breaksMe[i] != noone &amp;&amp; !breaksMe[i].dead)
        {
            with(breaksMe[i])
            {
                if(place_meeting(x,y+sign(grav),other) &amp;&amp; !place_meeting(x,y,other))
                {
                    if(ground &amp;&amp; abs(yspeed_prev) &gt;= other.crushMinYvel)
                    {
                        with(other)
                        {
                            event_user(10);
                            playSFX(sfxExplosion);
                        }
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// super arm flash
if (superArmFlashTimer mod (2 * superArmFlashInterval) &gt;= superArmFlashInterval || superArmThrown || superArmHoldOwner != noone)
{
    draw_set_blend_mode(bm_add);
    drawSelf();
    draw_set_blend_mode(bm_normal);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
