<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKamegoro</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;
blockCollision = 0;
contactDamage = 2;

canHit = false;
healthpointsStart = 8;
healthpoints = healthpointsStart;

xspeed = 0;
yspeed = 0;
grav = 0;

image_speed = 0;
saveDespawnRange = despawnRange;
despawnRange = -1;

type = 0;
timer = 0;
angle = 0;
period = 60;
radius = 20;
spd = 4;
bigSpd = 6;

penetrate = 2;
pierces = 2;

ignoreProjectiles[0] = objGloop;
ignoreProjectiles[1] = objGloopBall;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(parent) || parent == noone)
{
    instance_destroy();
    exit;
}

event_inherited();

if (entityCanStep())
{
    if(type &gt; 0) timer++;
    var distX = bboxGetXCenterObject(parent) + image_xscale*cos(degtorad(angle) + 2*pi*timer/period)*radius;
    var distY = bboxGetYCenterObject(parent) - image_yscale*sin(degtorad(angle) + 2*pi*timer/period)*radius;
    if(type == 0) // prepare
    {
        canHit = true;
        visible = true;
        x = distX;
        y = distY;
        image_index = 0;
        image_xscale = parent.image_xscale;
        image_yscale = parent.image_yscale;
        type = 1;
    }
    else if(type == 1) // be shield
    {
        x = distX;
        y = distY;
        image_index = 0;
        image_xscale = parent.image_xscale;
        image_yscale = parent.image_yscale;
        var projectile = instance_place(x,y,prtEnemyProjectile);
        if(projectile &amp;&amp; projectile.isSolid == 0)
        {
            var compatibilityCheck = 1;
            for(var i = 0; i &lt; array_length_1d(ignoreProjectiles); i++)
            {
                if(instance_exists(ignoreProjectiles[i]) &amp;&amp; projectile.object_index == ignoreProjectiles[i].object_index)
                {
                    compatibilityCheck = 0;
                    i = array_length_1d(ignoreProjectiles);
                }
            }
            if(compatibilityCheck)
            {
                with(projectile) event_user(EV_DEATH);
                event_user(0);
            }
        }
    }
    else if(type == 2) // be projectile
    {
        if(image_index == 0)
        {
            instance_create(x,y,objExplosion);
            pierces = 1;
            penetrate = 0;
            canHit = false;
            despawnRange = saveDespawnRange;
            if(!inWater)
            {
                yspeed = -6*image_yscale;
            }
            playSFX(sfxMM3Explode);
            image_index = 3;
        }
        if(inWater)
        {
            grav = 0;
            blockCollision = 0;
            if(target)
            {
                var moveAngle = point_direction(x,y,bboxGetXCenterObject(target),bboxGetYCenterObject(target));
                xspeed = cos(degtorad(moveAngle))*bigSpd;
                yspeed = -sin(degtorad(moveAngle))*bigSpd;
                if(sign(yspeed) == image_yscale) image_index = 3;
                else image_index = 2;
                image_xscale = sign(xspeed) + (xspeed == 0);
            }
            else
            {
                if(point_distance(x,y,distX,distY) &lt;= spd)
                {
                    x = distX;
                    y = distY;
                    image_index = 2;
                    image_xscale = parent.image_xscale;
                    image_yscale = parent.image_yscale;
                }
                else
                {
                    var moveAngle = point_direction(x,y,distX,distY);
                    xspeed = cos(degtorad(moveAngle))*spd;
                    yspeed = -sin(degtorad(moveAngle))*spd;
                    if(sign(yspeed) == image_yscale) image_index = 3;
                    else image_index = 2;
                    image_xscale = sign(xspeed) + (xspeed == 0);
                }
            }
        }
        else
        {
            if(!blockCollision)
            {
                if(checkSolid(0,0))
                {
                    if(place_meeting(x,y,parent))
                    {
                        x = bboxGetXCenterObject(parent);
                        y = bboxGetYCenterObject(parent);
                    }
                }
                else blockCollision = 1;
            }
            else
            {
                grav = 0.25*image_yscale;
                if(ground) yspeed = -6;
                if(target) calibrateDirection();
                else
                {
                    if(sign(xcoll) == -image_xscale) image_xscale *= -1;
                }
                xspeed = image_xscale*2;
                image_index = 3;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var canShoot = 1;
with(objKamegoroSquad)
{
    if(parent == other) canShoot = 0;
}

if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    if(canShoot)
    {
        var i = fireWeapon(0, 0, objKamegoroSquad, 4, 3, 2, 1);
        if (i)
        {
            i.x = bboxGetXCenter();
            i.y = bboxGetYCenter();
            for(var j = 1; j &lt;= 3; j++)
            {
                var k = fireWeapon(0, 0, objKamegoroSquad, 4, 0, 2, 1);
                if(k)
                {
                    k.x = bboxGetXCenter();
                    k.y = bboxGetYCenter();
                    k.angle = 90*j;
                }
            }
            playSFX(sfxCrashBombArm);
        }
    }
    else
    {
        with(objKamegoroSquad)
        {
            if(parent == other &amp;&amp; type == 1)
            {
                type = 2;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("KAMEGORO SQUAD", make_color_rgb(128,208,16), global.nesPalette[26], sprWeaponIconsKamegoroSquad);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

instance_create(x,y,objExplosion);
playSFX(sfxMM3Explode);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(type &gt;= 2) event_user(EV_DEATH);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>healthpoints--;
if(healthpoints &lt;= 0) event_user(EV_DEATH);
else event_user(EV_HURT);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
