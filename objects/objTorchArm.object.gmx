<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTorchArm</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 0;

contactDamage = 2;
blockCollision = 0;
attackDelay = 0;

image_speed = 0;

penetrate = 3;
pierces = 2;

timer = 0;

init = true;

grav = 0;
xspeed = 0;
yspeed = 0;

spreadControl = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    if(timer)
    {
        if(parent)
        {
            x = parent.x+16*parent.image_xscale;
            y = parent.y;
            canDamage = false;
            with(parent)
            {
                var i = fireWeapon(16, 0, objTorchArm, 99, 0, 1, 0);
                if(i)
                {
                    i.image_xscale = image_xscale;
                    i.image_yscale = image_yscale;
                    i.spreadControl = other.spreadControl;
                }
            }
        }
        timer--;
    }
    else
    {
        if(!visible)
        {
            visible = true;
            canDamage = true;
            init = true;
        }
        if(init)
        {
            grav = -image_yscale*0.1*random_range(1,3);
            xspeed = image_xscale*random_range(1,5);
            yspeed = image_yscale*random_range(1,3);
            init = false;
            if(spreadControl == image_yscale) // am holding down
            {
                yspeed /= 2;
                grav /= 2;
            }
            else if(spreadControl == -image_yscale) // am holding up
            {
                xspeed /= 2;
            }
        }
        image_speed = 0.3;
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// EV_WEAPON_CONTROL

if (!playerIsLocked(PL_LOCK_SHOOT))
{
    if(true)
    {
        if(global.keyShootPressed[playerID])
        {
            i = fireWeapon(16, 0, objTorchArm, 16, 2, 1, 0);
            if (i)
            {
                i.image_xscale = image_xscale;
                i.image_yscale = image_yscale;
                i.timer = 8;
                i.visible = false;
                i.canDamage = false;
                i.init = false;
                i.spreadControl = yDir;
                playSFX(sfxChangkeyDragonBreath);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("TORCH ARM", global.nesPalette[19], global.nesPalette[33], sprWeaponIconsTorchArm);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
