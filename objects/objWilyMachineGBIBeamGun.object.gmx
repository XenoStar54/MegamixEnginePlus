<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWilyMachineGBIBeamGun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 256;
healthpoints = healthpointsStart;
canHit = false;
canDamage = false;

image_speed = 0;

blockCollision = 0;
respawn = 0;
itemDrop = -1;
despawnRange = -1;
grav = 0;

beamTimer = -120;
beamPhase = 0;
beamWait = 120;
beamPosX = 5;
beamPosY = 39;
beamPosYinit = 39;
beamPosYmin = 7;
beamSpd = 32/8;

motherObject = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    if(!instance_exists(motherObject) || motherObject.dead || motherObject == noone)
    {
        instance_destroy();
    }
    else
    {
        image_xscale = motherObject.image_xscale;
        image_yscale = motherObject.image_yscale;
        
        if(beamPhase == 0) // wait then shoot
        {
            beamTimer++;
            if(beamTimer &gt; beamWait)
            {
                image_index = 0;
                image_speed = 0;
                beamPhase++;
                with(instance_create(x,y,objEnemyBullet))
                {
                    sprite_index = sprWilyMachineGBIBeam;
                    blockCollision = 0;
                    image_speed = 0.25;
                    image_xscale = other.image_xscale;
                    xspeed = image_xscale*6;
                    reflectable = 1;
                    playSFX(sfxEnemyShootClassic);
                }
            }
            else if(beamTimer &gt; beamWait - 24)
            {
                image_speed = 0.3
            }
        }
        else if(beamPhase == 1) // move up
        {
            image_speed = 0;
            if(beamPosY &gt; beamPosYmin) beamPosY -= beamSpd;
            else
            {
                beamPosY = beamPosYmin;
                beamPhase++;
                beamTimer = 0;
            }
        }
        else if(beamPhase == 2) // wait then shoot, again
        {
            beamTimer++;
            if(beamTimer &gt; beamWait)
            {
                image_index = 0;
                image_speed = 0;
                beamPhase++;
                with(instance_create(x,y,objEnemyBullet))
                {
                    sprite_index = sprWilyMachineGBIBeam;
                    blockCollision = 0;
                    image_speed = 0.25;
                    image_xscale = other.image_xscale;
                    xspeed = image_xscale*6;
                    reflectable = 1;
                    playSFX(sfxEnemyShootClassic);
                }
            }
            else if(beamTimer &gt; beamWait - 24)
            {
                image_speed = 0.3
            }
        }
        else if(beamPhase == 3) // move down
        {
            image_speed = 0;
            if(beamPosY &lt; beamPosYinit) beamPosY += beamSpd;
            else
            {
                beamPosY = beamPosYinit;
                beamPhase = 0;
                beamTimer = 0;
            }
        }
        
        x = motherObject.x + image_xscale*beamPosX;
        y = motherObject.y + image_yscale*beamPosY;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
