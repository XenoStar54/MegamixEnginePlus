<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBuildingPlatform</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
canHit = false;

grav = 0;
blockCollision = 0;
bubbleTimer = -1;

timer = 0;

for (i = 1; i &lt;= 4; i += 1)
{
    block[i - 1] = noone;
    blockDataMoveAngle[i - 1] = 90;
    blockDataSpd[i - 1] = 2;
}

wait = 600;
waitMax = 600;

reappear = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    timer += 1;
    for (i = 1; i &lt;= 4; i += 1)
    {
        if (timer == 30 * i)
        {
            block[i - 1] = instance_create(x + ((((i - 1) mod 2)) * 16),
                y + floor((i - 1) / 2) * 16, objBuildingPlatformPiece);
            block[i - 1].image_index = i - 1;
            block[i - 1].moveAngle = blockDataMoveAngle[i - 1];
            block[i - 1].spd = blockDataSpd[i - 1];
            var dist = view_wview+16;
            if(wrapAngle(block[i - 1].moveAngle+180) == 0)
            {
                dist = abs(block[i - 1].x - (view_xview+view_wview+16));
            }
            else if(wrapAngle(block[i - 1].moveAngle+180) &lt; 90)
            {
                dist = max(abs(block[i - 1].x - (view_xview+view_wview+16)),abs(block[i - 1].y - (view_yview-32)));
            }
            else if(wrapAngle(block[i - 1].moveAngle+180) == 90)
            {
                dist = abs(block[i - 1].y - (view_yview-32));
            }
            else if(wrapAngle(block[i - 1].moveAngle+180) &lt; 180)
            {
                dist = max(abs(block[i - 1].x - (view_xview-32)),abs(block[i - 1].y - (view_yview-32)));
            }
            else if(wrapAngle(block[i - 1].moveAngle+180) == 180)
            {
                dist = abs(block[i - 1].x - (view_xview-32));
            }
            else if(wrapAngle(block[i - 1].moveAngle+180) &lt; 270)
            {
                dist = max(abs(block[i - 1].x - (view_xview-32)),abs(block[i - 1].y - (view_yview+view_hview+16)));
            }
            else if(wrapAngle(block[i - 1].moveAngle+180) == 270)
            {
                dist = abs(block[i - 1].y - (view_yview+view_hview+16));
            }
            else if(wrapAngle(block[i - 1].moveAngle+180) &lt; 360)
            {
                dist = max(abs(block[i - 1].x - (view_xview+view_wview+16)),abs(block[i - 1].y - (view_yview+view_hview+16)));
            }
            block[i - 1].x += cos(degtorad(block[i - 1].moveAngle+180))*(dist);
            block[i - 1].y -= sin(degtorad(block[i - 1].moveAngle+180))*(dist);
        }
    }
    
    if (wait &gt; 0)
    {
        visible = true;
    }
    
    for (i = 1; i &lt;= 4; i += 1)
    {
        if (instance_exists(block[i - 1]))
        {
            if (block[i - 1].x != block[i - 1].xstart || block[i - 1].y != block[i - 1].ystart)
            {
                visible = false;
            }
        }
        else
        {
            visible = false;
        }
    }
    if (visible &amp;&amp; wait &gt;= 0)
    {
        if (image_index &lt;= 7 &amp;&amp; wait &gt; 0)
        {
            image_index += 0.2;
        }
        if (wait &gt; 0)
        {
            wait -= 1;
        }
        if (wait &lt;= 0)
        {
            if (image_index &gt; 3)
            {
                image_index = 3;
            }
            else if (image_index &gt; 0.2)
            {
                image_index -= 0.2;
            }
            else
            {
                wait = -1;
            }
        }
    }
    else if (wait &lt;= 0)
    {
        wait -= 1;
        for (i = 1; i &lt;= 4; i += 1)
        {
            if (abs(wait) &gt;= 30 * i &amp;&amp; instance_exists(block[4 - i]))
            {
                block[4 - i].setoff = 1;
                visible = false;
            }
        }
        if(reappear &amp;&amp; wait &lt;= -waitMax)
        {
            wait = waitMax;
            timer = 0;
            image_index = 0;
            for (i = 1; i &lt;= 4; i += 1)
            {
                if (instance_exists(block[i - 1]))
                {
                    with (block[i - 1])
                        instance_destroy();
                }
            }
        }
    }
}
else if (dead)
{
    timer = 0;
    image_index = 0;
    wait = waitMax;
    for (i = 1; i &lt;= 4; i += 1)
    {
        if (instance_exists(block[i - 1]))
        {
            with (block[i - 1])
                instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
