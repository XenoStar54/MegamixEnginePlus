<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBusterShot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 0;

contactDamage = 0;
inWater = -1;

canHit = false;

persists = true;

phase = 400;
global.timeStopped = true;
playSFX(sfxTimeSlow);

x = view_xview + 128;
y = view_yview + 112;
k = 3;
circleTimer = 0;
if instance_exists(parent)
{
    origin_x = parent.x;
    origin_y = parent.y;
}
else
{
    origin_x = 0;
    origin_y = 0;
}
pauseLock = lockPoolLock(PL_LOCK_PAUSE);
queuePause();
animFrame = 0;
pauseTimer = 30;
shiftVisible = 1;
animTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

global.timeStopped = false;

with (prtEntity)
{
    if (!stopOnFlash)
        continue;
    if (global.factionStance[other.faction, faction])
    {
        if (frozen)
        {
            hspeed = pre_hsp;
            vspeed = pre_vsp;
            speed = pre_spe;
            image_speed = pre_isp;
            frozen = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview[0] + 128;
y = view_yview[0] + 112;


if pauseTimer &gt; 0 
{
    pauseTimer -= 1;
    parent.drawHitspark = false;
    parent.visible = true;
    exit;
}
else if pauseTimer == 0 
{
    pauseTimer = -1;
    queueUnpause();
    lockPoolRelease(pauseLock);
}
if (!global.frozen)
{
    phase -= 1;
    k = 3
    if phase &lt; 60
        k = 2;
    global.timeStopped = phase mod k;
    if (phase &lt;= 0)
    {
        playSFX(sfxMenuSelect);
        instance_destroy();
    }
    with (prtEntity)
    {
        if (!stopOnFlash)
            continue;
        if (global.factionStance[other.faction, faction])
        {
        
            if (!frozen &amp;&amp; global.timeStopped)
            {
                // Start Freeze
                pre_hsp = hspeed;
                pre_vsp = vspeed;
                pre_spe = speed;
                pre_isp = image_speed;
                hspeed = 0;
                vspeed = 0;
                speed = 0;
                image_speed = 0;
                frozen = 1;
            }
            else if frozen &amp;&amp; !global.timeStopped
            {
                hspeed = pre_hsp;
                vspeed = pre_vsp;
                speed = pre_spe;
                image_speed = pre_isp;
                frozen = 0;
            }
            
            if global.timeStopped
            {
                for (i = 0; i &lt;= 10; i += 1)
                {
                    if (object_get_parent(object_index) != prtBoss)
                    {
                        if (alarm[i] &gt; 0)
                        {
                            alarm[i] += 1;
                        }
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen || pauseTimer &gt; 0)
{
    circleTimer += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _canSpawn = !instance_exists(objTimeSlow);
if (_canSpawn)
{
    if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
    {
        var i = fireWeapon(0, 0, objTimeSlow, 1, 4, 2 - (ground == false) * 2, 1 - 1 * (ground == false));
        if (instance_exists(i))
        {
            i.origin_x = x;
            i.origin_y = y;
        }
    }
}

// fire buster shots when timeslow is active
scrBusterControl(false, true, !_canSpawn);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("TIME SLOW", make_color_rgb(219, 0, 207), make_color_rgb(251, 186, 251), sprWeaponIconsTimeSlow);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var p,q,i;

    p = 1;

    if phase &lt; 60
        p = phase/60;
    if circleTimer &lt; 14
        p = circleTimer/14;

    draw_set_alpha(1);

    draw_set_blend_mode_ext(bm_zero,bm_src_color);

    draw_set_color(make_color_rgb(235* p + 255*(1-p),40 * p + 255 * (1 - p),230* p + 255 * (1 - p)));

    draw_set_circle_precision(64)

    if circleTimer*3 &gt; 2*view_wview[0]
        draw_rectangle(view_xview[0],view_yview[0],view_xview[0] + view_wview[0],view_yview[0] + view_hview[0],false);
    else    {
        draw_circle(origin_x,origin_y,circleTimer*8,false)
    }

    draw_set_blend_mode(bm_add)

    draw_set_alpha(p);
    draw_set_color(make_color_rgb(25,10,30));

    draw_rectangle(view_xview[0],view_yview[0],view_xview[0] + view_wview[0],view_yview[0] + view_hview[0],false);

    draw_set_alpha(0.2)
    draw_set_color(make_color_rgb(200,60,250))
    if circleTimer*3 &lt; 2*view_wview[0]
        for (j=1; j&lt; 8; j += 1)
            for (i=0; i&lt; 12; i+=1)
                draw_circle(origin_x,origin_y,(circleTimer+circleTimer*circleTimer/60/60)*3*j + i/4,true);

    draw_set_blend_mode(bm_normal);
    draw_set_color(c_white);

/*q = max(0,1 - circleTimer / 30)
if q &gt; 0 {
    draw_set_alpha(q);
    for (i=0;i&lt;3;i+=1) {
        dir = 90 + 35*(i-1)
        rad = circleTimer*4.5 + 20 - circleTimer*circleTimer/20
        draw_sprite_ext(sprTimeSlowLightning,i,origin_x + rad*cos(degtorad(dir)), origin_y - 8 - rad*sin(degtorad(dir)),1,1,0,c_white,q);
    }
}*/
    draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
