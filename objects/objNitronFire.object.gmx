<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNitronFireOrange</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

ogContactDamage = 2;
contactDamage = ogContactDamage;

phase = 0;
imgSpd = 0.3;
image_speed = 0;
imgIndex = 0;
peakTimer = 40;
sprites = noone;
explosion = noone;

col = 0;

reflectable = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // set sprite
        case 0: // Set the correct color 
            switch (col)
            {
                case 0:
                    sprites = sprNitronFireOrange;
                    break;
                case 1:
                    sprites = sprNitronFireBlue;
                    break;
                default:
                    sprites = sprNitronFireOrange;
                    break;
            }
            sprite_index = sprites;
            phase++;
            break;
        
        // dropping through the air
        case 1:
            grav = 0.25;
            if (ground)
            {
                y -= yspeed;
                grav = 0;
                phase++;
                imgIndex = 0;
                explosion = instance_create(x, y, objExplosion);
                image_alpha = 0;
                contactDamage = 0;
                playSFX(sfxNitronFire);
            }
            break;
        
        // explosion animation
        case 2:
            if (!instance_exists(explosion))
            {
                contactDamage = ogContactDamage;
                image_alpha = 1;
                
                imgIndex = 1;
                phase++;
            }
            break;
        
        // rising
        case 3:
            imgIndex += imgSpd;
            if (imgIndex &gt;= 5)
            {
                phase++;
            }
            break;
        
        // stay suspended at peak for a bit
        case 4:
            imgIndex += imgSpd;
            if (imgIndex &gt;= image_number)
            {
                imgIndex = 5 + (imgIndex mod image_number);
            }
            peakTimer -= 1;
            if (peakTimer &lt;= 0)
            {
                phase++;
                imgIndex = 5;
            }
            break;
        
        // go back down
        case 5:
            imgIndex -= imgSpd;
            if (imgIndex &lt;= 0)
            {
                instance_destroy();
                exit;
            }
            break;
    }
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
