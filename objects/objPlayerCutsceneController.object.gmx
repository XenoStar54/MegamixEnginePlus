<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

playerObj = noone;

// behavior variables
xTarget = 0;
yTarget = 0;

busy = false;

// input variables
keyLeft = false;
keyRight = false;
keyUp = false;
keyDown = false;
keyJump = false;
keyShoot = false;
keySlide = false;
keyPause = false;
keyWeaponSwitchLeft = false;
keyWeaponSwitchRight = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(objDebugMenu))
{
    exit;
}

// delete this if the player doesn't exist
if (!instance_exists(playerObj))
{
    instance_destroy();
    exit;
}

// artificial button inputs (inputs get disabled in objGlobalControl's code)
playerID = playerObj.playerID;

keyLeftHold = global.keyLeft[playerID];
keyRightHold = global.keyRight[playerID];
keyUpHold = global.keyUp[playerID];
keyDownHold = global.keyDown[playerID];
keyJumpHold = global.keyJump[playerID];
keyShootHold = global.keyShoot[playerID];
keySlideHold = global.keySlide[playerID];
keyPauseHold = global.keyPause[playerID];
keyWeaponSwitchLeftHold = global.keyWeaponSwitchLeft[playerID];
keyWeaponSwitchRightHold = global.keyWeaponSwitchRight[playerID];

global.keyLeft[playerID] = keyLeft;
global.keyRight[playerID] = keyRight;
global.keyUp[playerID] = keyUp;
global.keyDown[playerID] = keyDown;
global.keyJump[playerID] = keyJump;
global.keyShoot[playerID] = keyShoot;
global.keySlide[playerID] = keySlide;
global.keyPause[playerID] = keyPause;
global.keyWeaponSwitchLeft[playerID] = keyWeaponSwitchLeft;
global.keyWeaponSwitchRight[playerID] = keyWeaponSwitchRight;

global.keyLeftPressed[playerID] = keyLeft &amp;&amp; !keyLeftHold;
global.keyRightPressed[playerID] = keyRight &amp;&amp; !keyRightHold;
global.keyUpPressed[playerID] = keyUp &amp;&amp; !keyUpHold;
global.keyDownPressed[playerID] = keyDown &amp;&amp; !keyDownHold;
global.keyJumpPressed[playerID] = keyJump &amp;&amp; !keyJumpHold;
global.keyShootPressed[playerID] = keyShoot &amp;&amp; !keyShootHold;
global.keySlidePressed[playerID] = keySlide &amp;&amp; !keySlideHold;
global.keyPausePressed[playerID] = keyPause &amp;&amp; !keyPauseHold;
global.keyWeaponSwitchLeftPressed[playerID] = keyWeaponSwitchLeft &amp;&amp; !keyWeaponSwitchLeftHold;
global.keyWeaponSwitchRightPressed[playerID] = keyWeaponSwitchRight &amp;&amp; !keyWeaponSwitchRightHold;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(objDebugMenu))
{
    exit;
}

if (!instance_exists(playerObj))
{
    instance_destroy();
    exit;
}

// move to target position
if (xTarget != 0)
{
    if ((playerObj.x &gt;= xTarget &amp;&amp; keyRight)
        || playerObj.x &lt;= xTarget &amp;&amp; keyLeft
        || playerObj.x == xTarget)
    {
        // reached target
        playerObj.x = xTarget;
        
        keyRight = false;
        keyLeft = false;
        keyJump = false;
        
        xTarget = 0;
    }
    else
    {
        if (xTarget &gt; playerObj.x)
        {
            keyRight = true;
            keyLeft = false;
        }
        else
        {
            keyRight = false;
            keyLeft = true;
        }
        
        // jump over walls
        if (playerObj.ground &amp;&amp; !global.keyJumpPressed[playerObj.playerID])
        {
            with (playerObj)
            {
                if (checkSolid(xspeed + (other.keyRight - other.keyLeft), yspeed))
                {
                    if (other.keyJump)
                    {
                        // have to let go of jump to do consecutive jumps
                        other.keyJump = false;
                    }
                    else
                    {
                        other.keyJump = true;
                    }
                }
            }
        }
    }
}

// busy check
busy = xTarget != 0 || yTarget != 0;

// reset any remaining inputs if not busy
if (!busy &amp;&amp; !instance_exists(objDebugMenu))
{
    keyLeft = false;
    keyRight = false;
    keyUp = false;
    keyDown = false;
    keyJump = false;
    keyShoot = false;
    keySlide = false;
    keyWeapon = false;
    keyPause = false;
    keyWeaponSwitchLeft = false;
    keyWeaponSwitchRight = false;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
