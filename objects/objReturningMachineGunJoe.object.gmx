<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprReturningMachinegunJoe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
contactDamage = 3;
healthpointsStart = 6;
facePlayerOnSpawn = true;
category = "joes,shielded";

// Empty mech mechanic
joeLock = false;

// enemy specific code
phase = 0;
shotCount = 0;
timer = 0;
shieldDamageCount = 0;
shieldDPS = 5;
dpsTimer = 0;
isBouncy = false;
color = 0;
hasShield = true;
grav = 0.25 * image_yscale;

animFrame = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (dpsTimer &gt; 0)
{
    dpsTimer -= 1;
    if (dpsTimer == 0)
        shieldDamageCount = 0;
}
if (entityCanStep())
{
    if (phase != 1 &amp;&amp; floor(animFrame != 2) &amp;&amp; (phase != 0 || (phase == 0 &amp;&amp; timer &lt; 90 &amp;&amp; timer != -1)))
    {
        if (ground &amp;&amp; yspeed == 0 &amp;&amp; instance_exists(target) &amp;&amp; abs(target.x - x) &lt; 16)
        {
            yspeed = -5.5 * image_yscale;
        }
    }
    if (!ground &amp;&amp; sign(yspeed) != image_yscale)
    {
        calibrateDirection();
    }
    if (phase == 0) // wait before shooting
    {
        if (timer &gt;= 0)
            timer += 1;
        if (timer &gt; 120 &amp;&amp; ground)
        {
            timer = -1;
            yspeed = 0;
        }
        else if (timer == -1)
        {
            if (floor(animFrame) &lt; 2)
            {
                animFrame += 0.15;
                if (floor(animFrame) &gt;= 2)
                {
                    shotCount = 0;
                    phase = 1;
                    timer = 10;
                }
            }
        }
    }
    else if (phase == 1) // Shoot 6 bullets, waiting every three bullets
    {
        calibrateDirection();
        if (timer &gt; 0)
            timer -= 1;
        if (timer == 0)
        {
            playSFX(sfxEnemyShootClassic);
            var i = instance_create(x + image_xscale * 16, y - image_yscale * 10, objEnemyBullet);
            i.sprite_index = sprReturningMachinegunJoeBullet;
            i.image_index = min(1, color);
            i.image_xscale = image_xscale;
            i.xspeed = 3 * image_xscale;
            timer = 10;
            shotCount += 1;
            if ((shotCount mod 3) == 0)
            {
                timer = 30;
            }
            if ((shotCount mod 6) == 0)
            {
                timer = -1;
            }
        }
        else if (timer == -1)
        {
            animFrame -= 0.15;
            if (floor(animFrame) &lt;= 0)
            {
                animFrame = 0;
                timer = 0;
                phase = 2;
            }
        }
    }
    else if (phase == 2) // Cool down after 6 shots
    {
        timer += 1;
        if (timer &gt; 60)
        {
            if (shotCount == 6)
            {
                if (floor(animFrame) &lt; 2)
                {
                    animFrame += 0.15;
                    if (floor(animFrame) &gt;= 2)
                    {
                        animFrame = 2;
                    }
                }
                if (floor(animFrame) == 2 &amp;&amp; ground)
                {
                    phase = 1;
                    timer = 10;
                }
            }
            else
            {
                if (sign(ycoll) == image_yscale)
                {
                    phase = 0;
                    timer = 0;
                    shotCount = 0;
                }
                else if (ground)
                {
                    yspeed = -5.5 * image_yscale;
                }
            }
        }
    }
    else if (phase == 3)
    {
        animFrame = 3;
        timer += 1;
        if (timer &gt; 24)
        {
            phase = 0;
            phase = 0;
            shotCount = 0;
            timer = 0;
            shieldDamageCount = 0;
            dpsTimer = 0;
            animFrame = 0;
        }
    }
    
    
    if (floor(animFrame) &gt;= 3)
    {
        image_index = 12 + 13 * color;
    }
    else
    {
        image_index = 3 * (!ground) + floor(animFrame) + 13 * color + 6 * !hasShield;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
phase = 0;
shotCount = 0;
timer = 0;
shieldDamageCount = 0;
dpsTimer = 0;
hasShield = true;
grav = 0.25 * image_yscale;

animFrame = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (floor(animFrame) &gt; 0)
    exit;
if (!hasShield)
    exit;
var front = bbox_right;
if (image_xscale == -1)
    front = bbox_left;
if (collision_rectangle(x + 8 * image_xscale, bbox_top, front, bbox_bottom, other, true, true))
{
    other.guardCancel = 1;
    if (dpsTimer == 0)
        dpsTimer = 60;
    shieldDamageCount += 1;
    if (shieldDamageCount &gt;= shieldDPS)
    {
        phase = 3;
        hasShield = false;
        var i = instance_create(x, y, objReturningMachinegunJoeShield);
        i.image_xscale = image_xscale;
        i.image_index = min(1, color);
        i.xspeed = -1 * image_xscale;
        i.yspeed = -4;
        timer = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
