<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBladeLauncherBoomerang</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 0;

contactDamage = 1;
blockCollision = 0;
attackDelay = 0;

image_speed = 0;

penetrate = 0;
pierces = 2;

state = 0;
timer = 0;

grav = 0;
xspeed = 0;
yspeed = 0;
spd = 4;

angle = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    image_speed = 0.5;
    if(state == 0) // fly
    {
        xspeed = image_xscale*spd;
        if(spd &gt; 0) spd -= 0.1;
        else spd = 0;
    }
    else if(state == 1) // get called back
    {
        if(spd &lt; 4) spd += 0.1;
        if(parent)
        {
            angle = point_direction(x,y,parent.x,parent.y);
            if(place_meeting(x,y,parent)) instance_destroy();
        }
        else if(angle == -1) angle = 90+90*image_xscale;
        xspeed = cos(degtorad(angle))*spd;
        yspeed = -sin(degtorad(angle))*spd;
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playSFX(sfxReflect);
var i = 0;
repeat(3)
{
    with(instance_create(x,y,objBladeLauncher))
    {
        image_xscale = other.image_xscale;
        image_yscale = other.image_yscale;
        sprite_index = sprBladeLauncherBoomerangGibs;
        image_speed = 0;
        image_index = other.image_index+4*i;
        grav = 0.25*image_yscale;
        yspeed = -sign(grav)*2+grav*(i != 1);
        xspeed = (i-1);
        canHit = false;
        canDamage = false;
        state = -1;
        timer = 2*i;
    }
    i++;
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
