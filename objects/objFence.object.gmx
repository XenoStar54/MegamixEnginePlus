<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWaterReverse</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>climbingLock = 0;
combineObjects(object_index);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objMegaman) &amp;&amp; !global.frozen
{
    if collision_rectangle(bbox_left + 1, bbox_top + 1, bbox_right - 1, bbox_bottom - 1, objMegaman, false, false) || climbingLock != 0
    {
        with (objMegaman)
        {   
            if other.climbingLock &lt;= 0
            {
                if yDir == -gravDir &amp;&amp; collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, other, false, false) &amp;&amp; !climbing &amp;&amp; !playerIsLocked(PL_LOCK_CLIMB)
                {
                    if bbox_left &gt; other.bbox_left + 1 &amp;&amp; bbox_right &lt; other.bbox_right - 1 &amp;&amp; bbox_top &gt; other.bbox_top + 1 &amp;&amp; bbox_bottom &lt; other.bbox_bottom - 1
                    {
                        var lock = lockPoolLock(PL_LOCK_MOVE,
                            PL_LOCK_SLIDE,
                            PL_LOCK_GRAVITY,
                            PL_LOCK_CLIMB,
                            PL_LOCK_TURN
                        );
                        lock.targetInstance = id
                        other.climbingLock = lock
                        ground = false;
                        clamp(x, other.bbox_left + 1, other.bbox_right - 1);
                        clamp(y, other.bbox_top + 1, other.bbox_bottom - 1);
                        if jumpCounter == 0
                        {
                            jumpCounter += 1;
                        }
                        yspeed = 0;
                        ladderXScale = image_xscale;
                        climbShootXscale = ladderXScale;
                        /*// if there is no status effect object for current player, create one.
                        if (!instance_exists(statusObject))
                        {
                            statusObject = instance_create(x, y, objStatusEffect);
                            statusObject.statusCanClimb = false;
                        }*/
                    }
                }
            }
            else if other.climbingLock != 0
            {
                    clamp(x, other.bbox_left + 1, other.bbox_right - 1);
                    clamp(y, other.bbox_top + 1, other.bbox_bottom - 1);
                    if bbox_top &lt; other.bbox_top + 1
                    {
                        y = yprevious;
                    }
                    if bbox_bottom &gt; other.bbox_bottom - 1
                    {
                        y = yprevious;
                    }
                    if bbox_right &gt; other.bbox_right - 1
                    {
                        x = xprevious;
                    }
                    if bbox_left &lt; other.bbox_left + 1
                    {
                        x = xprevious;
                    }
                    climbing = true;
                    spriteX = 15;
                    if xDir == 0
                    {
                        xspeed = 0;
                    }
                    else if xDir &lt; 0
                    {
                        if bbox_left &gt; other.bbox_left + 1 &amp;&amp; !isShoot
                        {
                            xspeed = climbSpeed*xDir;
                        }
                        else if xDir &lt; 0
                        {
                            xspeed = 0;
                        }
                    }
                    else if xDir &gt; 0
                    {
                        if bbox_right &lt; other.bbox_right - 1 &amp;&amp; !isShoot
                        {
                            xspeed = climbSpeed*xDir;
                        }
                        else if xDir &gt; 0
                        {
                            xspeed = 0;
                        }
                    }
                    
                    if yDir == 0
                    {
                        yspeed = 0;
                    }
                    else if yDir &lt; 0
                    {
                        if bbox_top &gt; other.bbox_top + 1 &amp;&amp; !isShoot
                        {
                            yspeed = climbSpeed*yDir;
                        }
                        else if yDir &lt; 0
                        {
                            yspeed = 0;
                        }
                    }
                    else if yDir &gt; 0
                    { 
                        if bbox_bottom &lt; other.bbox_bottom - 1 &amp;&amp; !isShoot
                        {
                            yspeed = climbSpeed*yDir;

                        }
                        else if yDir &gt; 0
                        {
                            yspeed = 0;
                        }
                    }
                    
                if (yDir != 0 || xDir != 0) &amp;&amp; !isShoot
                {
                    climbSpriteTimer += 1;
                    if (!(climbSpriteTimer mod 8))
                    {
                       image_xscale = -image_xscale;
                    }
                }
                
                if (xDir != 0) // Left/right
                {
                    climbShootXscale = xDir;
                }
                if global.keyJumpPressed[playerID]
                {
                    other.climbingLock = lockPoolRelease(other.climbingLock);
                    if (climbing)
                    {
                        climbing = false;
                        climbLock = lockPoolRelease(climbLock);
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
