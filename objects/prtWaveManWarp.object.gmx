<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWaveManWarpGeneric</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set up vars

//@cc: speed with which Mega moves while warping
spd = 4;

//@cc: dir which Mega goes
dir = "useAngleDir";
// valid dirs: useAngleDir, Left, Right, Up, Down, Select

//@cc: when dir is useAngleDir, this angle is used to send Mega instead
angleDir = -1;
// 0 - right
// 90 - up
// 225 - diagonal down left
// etc.

//@cc: variation in speed
spdVar = 1;
// when warping, Mega can hold slide to go faster or jump to go slower
// set spdVar to 0 to disable that

//@cc: when true, turning and shooting when warping will be unlocked
allowShoot = 1;

// only used for Select dir
allowLeft = 0;
allowRight = 0;
allowUp = 0;
allowDown = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check if touching player has their warp, and if no, make one
with(objMegaman)
{
    var myWarp = noone;
    with(objWaveManWarp)
    {
        if(affectedPlayer == other) myWarp = self;
    }
    if(!myWarp &amp;&amp; place_meeting(x,y,other))
    {
        var myWarper = noone;
        with(other)
        {
            var ID = instance_create(bboxGetXCenter(), bboxGetYCenter(), objWaveManWarp);
            ID.dir = dir;
            ID.angleDir = angleDir;
            ID.spd = spd;
            ID.spdVar = spdVar;
            ID.affectedPlayer = other;
            ID.allowLeft = allowLeft;
            ID.allowRight = allowRight;
            ID.allowUp = allowUp;
            ID.allowDown = allowDown;
            myWarper = ID;
        }
        myWarper.waveLock = lockPoolLock(PL_LOCK_MOVE,PL_LOCK_JUMP,PL_LOCK_GRAVITY);
        if(!other.allowShoot) myWarper.waveShootLock = lockPoolLock(PL_LOCK_TURN,PL_LOCK_SHOOT);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
