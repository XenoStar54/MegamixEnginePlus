<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHardKnuckle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 2;

image_speed = 0;

megamanXVel = 0;
megamanYVel = 0;
megamanGrav = 0;
megamanXPos = 0;
megamanYPos = 0;
megamanXScale = 0;

penetrate = 0;
pierces = 2;

timer = 0;
knuckleLock = -1;

playSFX(sfxBuster);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    if (canDamage)
    {
        timer++;
     
        // all of this controls the animation of Hard Knuckle at the beginning      
        if (timer &lt; 3)
        {
            image_index = 0;
        }
        if (timer == 3)
        {
            image_index = 1;
        }    
        if (timer == 6)
        {
            image_index = 2;   
        }
        if (timer == 9)
        {
            image_index = 3;
        } 
        if (timer == 12)
        {
            image_index = 4;
        }
        if (timer &gt;= 15)
        {
            image_index = 5;
        }
        
        // if Hard Knuckle hasn't started moving, pause Mega Man
        if (timer &lt; 15)
        {
            if instance_exists(objMegaman)
            {
                objMegaman.xspeed = 0; 
                objMegaman.yspeed = 0;
                objMegaman.grav = 0;
                // these two lines are critical to keeping MM in the exact same spot
                objMegaman.x = megamanXPos;
                objMegaman.y = megamanYPos;
                objMegaman.image_xscale = megamanXScale;
            }
        }
        if (timer == 15)
        {
            if instance_exists(objMegaman)
            {
                // reset the speeds so that MM continues upwards if jumping and downwards if falling
                objMegaman.xspeed = megamanXVel; 
                objMegaman.yspeed = megamanYVel;
                objMegaman.grav = megamanGrav;
            }  
        }
        
        // if Hard Knuckle isn't in its final sprite, it should not move
        if (image_index != 5)
        {
            xspeed = 0;
            yspeed = 0;
        }
           
        if (abs(xspeed) &lt; 3)
        {
            xspeed += image_xscale * 0.3;
        }
        
        // move the weapon if down or up is held
        if global.keyDown[0] and timer &gt;= 15 
        {
            yspeed = 0.5;
        }
        else if global.keyUp[0] and timer &gt;= 15
        {
            yspeed = -0.5;   
        }
        else
        {
            yspeed = 0;
        }
    }
    else
    {
        timer++;
        
        if (instance_exists(entity) &amp;&amp; timer &lt; 180)
        {
            shiftObject((entity.x - entityx) - x, (entity.y - entityy) - y, blockCollision);
        }
        else
        {
            grav = 0.15 * image_yscale;
            if (timer mod 2)
            {
                visible = !visible;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// EV_WEAPON_CONTROL

if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    i = fireWeapon(22, 0, objHardKnuckle, 1, 2, 1, 1);
    if (i) // set starting speed
    {
        // for Hard Knuckle to pause Megaman briefly as in MM3, we must track his previous speeds here to restore after the pause is over
        if instance_exists(objMegaman)
        {
            i.megamanXScale = objMegaman.image_xscale;
            i.megamanXVel = objMegaman.xspeed;
            i.megamanYVel = objMegaman.yspeed;
            i.megamanGrav = objMegaman.grav;
            i.megamanXPos = objMegaman.x;
            i.megamanYPos = objMegaman.y;
        }
        
        i.xspeed = image_xscale * 0;
        i.yspeed = 0; // set a yspeed of 0 for the vertical controlling functionality 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// special damage

specialDamageValue("bulky", 5);
specialDamageValue("semi bulky", 4);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("HARD KNUCKLE", global.nesPalette[2], global.nesPalette[13], sprWeaponIconsHardKnuckle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

xspeed = -2 * image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canHit = false;
canDamage = 0;

entity = other.id;
entityx = other.x - x;
entityy = other.y - y;

playSFX(sfxReflect);
xspeed = -0.5 * image_xscale;
image_index = 5;

repeat (2)
{
    image_yscale *= -1;
    with (instance_create(x + 8 * image_xscale, y + 5 * image_yscale, objMegamanSweat))
    {
        image_xscale = other.image_xscale;
        image_yscale = other.image_yscale;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
