<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWilyMachine2B</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

blockCollision = 0;
healthpointsStart = 28;
healthpoints = healthpointsStart;
contactDamage = 4;
ground = false;
hasTriggeredFall = false;
introType = 0;
bossTriggered = true;
delayUse = false;
storeSpeed = 0;
hasFired = false;
grav = 0;
hitInvul = 0;

phase = 0;
timer = 0;
distance = 64;
backDistance = 64;
attackInterval = 64;
dir = 0;
spd = 3/4;

dropItemAnyway = 0;

spriteNormal = sprWilyMachine2B;
spriteHurt = sprWilyMachine2BHurt;
spriteRunaway = sprWilySaucerMM2;

nextForm = noone;
nextFormScript = scrNoEffect;
nextFormArgs = makeArray(0);
nextFormCode = "";

// Health Bars
healthBarPrimaryColor[1] = 18;
healthBarSecondaryColor[1] = 31;

// Music
music = "Mega_Man_2.nsf";
musicType = "VGM";
musicTrackNumber = 17;

// Damage Table
enemyDamageValue(objBusterShot, 1);
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);

// MM1
enemyDamageValue(objSuperArmBlockProjectile, 1);
enemyDamageValue(objSuperArmDebris, 1);
enemyDamageValue(objIceSlasher, 0);
enemyDamageValue(objThunderBeam, 1);

// MM2
enemyDamageValue(objMetalBlade, 4);

// MM3
enemyDamageValue(objNeedleCannon, 0);
enemyDamageValue(objMagnetMissile, 1);
enemyDamageValue(objGeminiLaser, 0);
enemyDamageValue(objHardKnuckle, 1);
enemyDamageValue(objTopSpin, 1);
enemyDamageValue(objSearchSnake, 1);
enemyDamageValue(objSparkShock, 0);
enemyDamageValue(objShadowBlade, 4);

// MM4
enemyDamageValue(objRainFlush, 1);
enemyDamageValue(objPharaohShot, 1); //Charge shot = 6

// MM5
enemyDamageValue(objPowerStone, 1);

// MM6
enemyDamageValue(objPlantBarrier, 0);

// MM7
enemyDamageValue(objSlashClaw, 4);

// MM8
enemyDamageValue(objHomingSniper, 1);

// MM9
enemyDamageValue(objConcreteShot, 1);
enemyDamageValue(objTornadoBlow, 1);
enemyDamageValue(objLaserTrident, 4);
enemyDamageValue(objJewelSatellite, 0);
enemyDamageValue(objHornetChaser, 1);
enemyDamageValue(objBlackHoleBomb, 1);

// MM10
enemyDamageValue(objTripleBlade, 4);
enemyDamageValue(objWaterShield, 0);
enemyDamageValue(objChillShot, 0);
enemyDamageValue(objChillSpikeLanded, 0);
enemyDamageValue(objThunderWool, 0);
enemyDamageValue(objWheelCutter, 4);
enemyDamageValue(objSolarBlaze, 1);

// MM11
enemyDamageValue(objBlockDropper, 1);

// MMI

// MMII
enemyDamageValue(objSakugarne, 2);

// MMIII

// MMIV

// MMV
enemyDamageValue(objSparkChaser, 1);
enemyDamageValue(objGrabBuster, 1);
enemyDamageValue(objBreakDash, 1);
enemyDamageValue(objSaltWater, 1);

// MM&amp;B
enemyDamageValue(objTenguBlade, 4);
enemyDamageValue(objTenguDash, 4);
enemyDamageValue(objTenguDisk, 4);
enemyDamageValue(objIceWall, 1);
enemyDamageValue(objMagicCard, 2);

// MM&amp;B2
enemyDamageValue(objFlameMixer, 1);

// Other
enemyDamageValue(objMagneticShockwave, 1);

// Utilities
enemyDamageValue(objWireAdapter, 1);
enemyDamageValue(objSuperArrow, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (!global.frozen)
{
    if (startIntro)
    {
        calibrateDirection();
        sprite_index = spriteNormal;
        image_index = 0;
        image_speed = 0.15;
        canFillHealthBar = false;
        startIntro = false;
        isIntro = true;
        visible = true;
        grav = gravStart;
        timer = 0;
        canDamage = false;
    }
    else if (isIntro)
    {
        // custom intro:
        timer++;
        if(timer &lt; 44)
        {
            if(timer mod 6 == 0)
            {
                var rng = 8*choose(-2,-1,0,1,2);
                with(instance_create(x+40*image_xscale,y+rng-5*image_yscale,prtEntity))
                {
                    sprite_index = sprWilyMachine2Debris;
                    respawn = false;
                    image_xscale = other.image_xscale;
                    image_yscale = other.image_yscale;
                    grav = 0;
                    xspeed = other.image_xscale*4;
                    blockCollision = false;
                    canHit = false;
                    canDamage = false;
                    stopOnFlash = false;
                    reflectable = false;
                }
            }
        }
        else 
        {
            timer = 0;
            phase = 0;
            sprite_index = spriteNormal;
            canFillHealthBar = true;
            isIntro = false;
            blockCollision = blockCollisionStart;
            dir = image_xscale;
            canDamage = true;
        }
    }
}
if (entityCanStep())
{
    if(isFight)
    {
        // move
        var leftEdge = min(initPos-backDistance*image_xscale,initPos+distance*image_xscale);
        var rightEdge = max(initPos-backDistance*image_xscale,initPos+distance*image_xscale);
        if(x &lt;= leftEdge) dir = 1;
        else if(x &gt;= rightEdge) dir = -1;
        xspeed = spd*dir;
        // attack
        timer++;
        if(timer &gt;= attackInterval)
        {
            timer = 0;
            with(instance_create(x+20*image_xscale,y+50*image_yscale,objWilyMachine2Projectile))
            {
                blockCollision = 1;
                grav = 0.25*other.image_yscale;
                xspeed = other.image_xscale*1.5;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!(collision_rectangle(x + 48 * image_xscale, y - 33 * image_yscale, x + 60 * image_xscale, y + 17 * image_yscale, other.id, false, false)))
{
    other.guardCancel = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(objWilyMachine2Projectile) instance_destroy();
if(nextForm != noone)
{
    useEndStageBehavior = false;
    musicStore = "";
    with(instance_create(x,y,nextForm))
    {
        image_xscale = other.image_xscale;
        image_yscale = other.image_yscale;
        distance = other.distance;
        backDistance = other.backDistance;
        initPos = other.initPos;
        dir = other.dir;
        spd = other.spd;
        respawn = false;
        music = "";
        itemDrop = other.itemDrop;
        if(other.nextFormScript != scrNoEffect) scriptExecuteNargs(other.nextFormScript,other.nextFormArgs);
        if(other.nextFormCode != "") stringExecutePartial(other.nextFormCode);
    }
    if(!dropItemAnyway) itemDrop = -1;
}

event_inherited();

with(instance_create(x,y,objEnemyBullet))
{
    sprite_index = other.spriteRunaway;
    image_xscale = other.image_xscale;
    image_yscale = other.image_yscale;
    image_speed = 0.15;
    yspeed = -2*image_yscale;
    blockCollision = 0;
    contactDamage = 0;
    canDamage = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

iFrames = 4;

flashTimer = iFrames;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead)
{
    if (drawBoss) // actually draw itself
    {
        if(isFight)
        {
            if ((iFrames mod 4 &lt; 2) || !iFrames) // itsa me
            {
                sprite_index = spriteNormal;
            }
            else // im hit
            {
                sprite_index = spriteHurt;
            }
        }
        drawSelf();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
