<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSpingArmProjectile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
contactDamage = 3
reflectProjectiles = 0
stopAtSolid = 0
cntr = 0
returnTrip = 0
angle = 0
grav = 0
image_speed = 0
depth = -200
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if entityCanStep()
{
    if (cntr == 0 &amp;&amp; returnTrip == 0)
    {
        if instance_exists(objMegaman)
            angle = point_direction(sprite_get_xcenter(), sprite_get_ycenter(), sprite_get_xcenter_object(objMegaman), sprite_get_ycenter_object(objMegaman))
        else
            angle = 90
        if (angle &gt;= 0 &amp;&amp; angle &lt; 60)
        {
            image_index = 2
            image_yscale = -1
        }
        else if (angle &gt;= 60 &amp;&amp; angle &lt; 120)
        {
            image_index = 1
            image_yscale = -1
        }
        else if (angle &gt;= 120 &amp;&amp; angle &lt; 180)
        {
            image_index = 0
            image_yscale = -1
        }
        else if (angle &gt;= 180 &amp;&amp; angle &lt; 240)
            image_index = 0
        else if (angle &gt;= 240 &amp;&amp; angle &lt; 300)
            image_index = 1
        else if (angle &gt;= 300 &amp;&amp; angle &lt; 360)
            image_index = 2
        if instance_exists(objMegaman)
        {
            if (image_yscale == 1)
                yDistMax = (objMegaman.y + 16)
            else
                yDistMax = (objMegaman.y - 16)
        }
        else if (image_yscale == 1)
            yDistMax = (objSpringMan.y + 128)
        else
            yDistMax = (objSpringMan.y - 128)
        for (var i = 1; i &lt;= 6; i++)
        {
            var ID = instance_create(x, y, objSpringArmLink);
            ID.num = i
            ID.maxNum = 6
            ID.parentID = id
        }
    }
    else if (cntr == -1 &amp;&amp; returnTrip == 1)
        instance_destroy()
    else if (angle &gt;= 0 &amp;&amp; angle &lt; 180 &amp;&amp; returnTrip == 0)
    {
        if (y &lt; yDistMax)
        {
            angle += 180
            returnTrip = 1
        }
    }
    else if (angle &gt;= 180 &amp;&amp; angle &lt; 360 &amp;&amp; returnTrip == 0)
    {
        if (y &gt; yDistMax)
        {
            angle += 180
            returnTrip = 1
        }
    }
    if (returnTrip == 0)
        cntr++
    else
        cntr--
    xspeed = (cos(degtorad(angle)) * 8)
    yspeed = ((-sin(degtorad(angle))) * 8)
    x += xspeed
    y += yspeed
}
else
    image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
