<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprChargeStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>sprChargeMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
pose = sprChargePose
poseImgSpeed = 0.2
contactDamage = 5
ground = 0
phase = 1
timer = 0
turnTimer = 0
shouldResetTimer = 1
destX = 0
coalID = 1203
guard = 0
manualColors = true;

// Music
music = "Mega_Man_5.nsf";
musicType = "VGM";
musicTrackNumber = 10;

// Health Bar
healthBarPrimaryColor[1] = global.nesPalette[32];
healthBarSecondaryColor[1] = global.nesPalette[40];

// Damage Table
enemyDamageValue(objBusterShot, 1);
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);

// MM1
enemyDamageValue(objSuperArmBlockProjectile, 4);
enemyDamageValue(objSuperArmDebris, 4);
enemyDamageValue(objIceSlasher, 0);
enemyDamageValue(objThunderBeam, 1);

// MM2
enemyDamageValue(objMetalBlade, 0);

// MM3
enemyDamageValue(objNeedleCannon, 4);
enemyDamageValue(objMagnetMissile, 1);
enemyDamageValue(objGeminiLaser, 1);
enemyDamageValue(objHardKnuckle, 2);
enemyDamageValue(objTopSpin, 1);
enemyDamageValue(objSearchSnake, 0);
enemyDamageValue(objSparkShock, 1);
enemyDamageValue(objShadowBlade, 0);

// MM4
enemyDamageValue(objRainFlush, 1);
enemyDamageValue(objPharaohShot, 1); //Charge shot = 6

// MM5
enemyDamageValue(objPowerStone, 4);

// MM6
enemyDamageValue(objPlantBarrier, 0);

// MM7
enemyDamageValue(objSlashClaw, 1);

// MM8
enemyDamageValue(objHomingSniper, 1);

// MM9
enemyDamageValue(objConcreteShot, 4);
enemyDamageValue(objTornadoBlow, 1);
enemyDamageValue(objLaserTrident, 1);
enemyDamageValue(objJewelSatellite, 0);
enemyDamageValue(objHornetChaser, 1);
enemyDamageValue(objBlackHoleBomb, 0);

// MM10
enemyDamageValue(objTripleBlade, 1);
enemyDamageValue(objWaterShield, 0);
enemyDamageValue(objChillShot, 2);
enemyDamageValue(objChillSpikeLanded, 4);
enemyDamageValue(objThunderWool, 1);
enemyDamageValue(objWheelCutter, 0);
enemyDamageValue(objSolarBlaze, 0);

// MM11
enemyDamageValue(objBlockDropper, 4);

// MMI

// MMII
enemyDamageValue(objSakugarne, 1);

// MMIII

// MMIV

// MMV
enemyDamageValue(objSparkChaser, 1);
enemyDamageValue(objGrabBuster, 4);
enemyDamageValue(objBreakDash, 2);
enemyDamageValue(objSaltWater, 1);

// MM&amp;B
enemyDamageValue(objTenguBlade, 1);
enemyDamageValue(objTenguDash, 2);
enemyDamageValue(objTenguDisk, 1);
enemyDamageValue(objIceWall, 4);
enemyDamageValue(objMagicCard, 1);

// MM&amp;B2
enemyDamageValue(objFlameMixer, 1);

// Other
enemyDamageValue(objMagneticShockwave, 4);

// Utilities
enemyDamageValue(objWireAdapter, 1);
enemyDamageValue(objSuperArrow, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if entityCanStep()
{
    if (isFight == 1)
    {
        if (shouldResetTimer == 1)
        {
            timer = 0
            shouldResetTimer = 0
        }
        grav = 0.25
        switch phase
        {
            case 0:
                sprite_index = sprChargeWalk
                image_speed = 0.133333333333333
                turnTimer -= 1
                if (turnTimer &lt;= 0)
                {
                    calibrateDirection();
                    turnTimer = 45
                }
                if instance_exists(objMegaman)
                {
                    if (((image_xscale == 1 &amp;&amp; objMegaman.x &gt; x) || (image_xscale == -1 &amp;&amp; objMegaman.x &lt; x)) &amp;&amp; turnTimer &lt;= 15)
                        turnTimer = 45
                }
                xspeed = (image_xscale * 1.25)
                if (place_meeting((x + xspeed), y, objSolid))
                {
                    xspeed *= -1
                    image_xscale *= -1
                }
                timer += 1
                if (timer &gt;= 180)
                {
                    randomize()
                    phase = choose(1, 4)
                    if (phase == 1)
                        timer = 5
                    else
                        timer = 0
                }
                break
            case 1:
                sprite_index = sprChargeStand
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &gt;= 20)
                {
                    timer = 0
                    phase = 2
                }
                break
            case 2:
                sprite_index = sprChargeCharge
                image_speed = 0.2
                if (timer == 0)
                {
                    if instance_exists(objMegaman)
                        destX = sprite_get_xcenter_object(objMegaman)
                    else
                        destX = (x + (image_xscale * 128))
                }
                timer += 1
                xspeed = (image_xscale * 3)
                if ((timer % 15) == 0)
                {
                    var ID = instance_create((x + (image_xscale * ((-sprite_get_xoffset(sprite_index)) + 17))), ((y - sprite_get_yoffset(sprite_index)) - 1), objChargeSteam);
                    ID.image_xscale = image_xscale
                }
                if ((image_xscale == 1 &amp;&amp; x &gt;= destX) || (image_xscale == -1 &amp;&amp; x &lt;= destX) || place_meeting((x + xspeed), y, objSolid) || place_meeting((x + xspeed), y, objBossDoor))
                {
                    xspeed = 0
                    phase = 3
                    timer = 0
                }
                break
            case 3:
                sprite_index = sprChargeStand
                xspeed = 0
                timer += 1
                if (timer &gt;= 20)
                {
                    timer = 0
                    phase = 0
                    calibrateDirection();
                }
                break
            case 4:
                sprite_index = sprChargeShake
                image_speed = 0.333333333333333
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &gt;= 22)
                {
                    timer = 0
                    phase = 5
                }
                break
            case 5:
                sprite_index = sprChargeAttack
                image_index = 0
                image_speed = 0
                xspeed = 0
                if (timer == 0)
                {
                    playSFX(sfxChargeMan)
                    ID = instance_create((x + (image_xscale * ((-sprite_get_xoffset(sprite_index)) + 17))), ((y - sprite_get_yoffset(sprite_index)) + 2), objChargeCoalInit)
                    ID.image_xscale = image_xscale
                    coalID = ID
                }
                timer += 1
                if (timer &gt;= 92)
                {
                    timer = 0
                    phase = 6
                }
                break
            case 6:
                sprite_index = sprChargeAttack
                image_speed = 0.166666666666667
                xspeed = 0
                if (image_index &gt;= (image_number - image_speed))
                {
                    timer = 0
                    randomize()
                    phase = choose(0, 1)
                    if (phase == 0)
                    {
                        sprite_index = sprChargeWalk
                        calibrateDirection();
                    }
                    else
                        sprite_index = sprChargeStand
                }
                break
        }
        
    }
    else
    {
        timer += 1
        if (timer == 90)
        {
            ID = instance_create((x + (image_xscale * ((-sprite_get_xoffset(sprite_index)) + 14))), ((y - sprite_get_yoffset(sprite_index)) - 3), objChargeSteam)
            ID.image_xscale = image_xscale
        }
    }
    guard = (sprite_index == sprChargeCharge || sprite_index == sprChargeShake || sprite_index == sprChargeAttack)
    
}
else
    image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// guard if guarding (!!)
if (guard)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(objMegaman))
{
    i = instance_create(objMegaman.x - 8, objMegaman.y - 8, objGravityFlipDown);
    with (i)
    {
        event_perform(ev_step, ev_step_normal);
        instance_destroy();
    }
}

with (objChargeCoal)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
       
with (objChargeCoalInit)
    instance_destroy();
    
with (objChargeSteam)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
