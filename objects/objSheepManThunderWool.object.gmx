<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSheepThunderWool</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

realHitpoints = 2;
grav = 0;
blockCollision = 0;
parent = noone;
dx = x;
dy = y;
numInd = 0;
phase = 0;
moveTimer = 0;
animTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // Animation handling
    animTimer++;
    if (phase &lt; 2 || (phase == 2 &amp;&amp; moveTimer &lt; ((70 + (15 * numInd)) - 30)))
        image_index = (animTimer &gt; 6) + (animTimer / 10) mod 2;
    if (phase == 2)
    {
        if (moveTimer &gt;= (70 + (15 * numInd)))
        {
            if (moveTimer mod 4 == 0) image_xscale *= -1;
            image_index = 7 + (animTimer / 8) mod 2;
        }
        else if (moveTimer &gt;= ((70 + (15 * numInd)) - 30))
        {
            animTimer-= .75;
            image_index = 3 + (animTimer mod 4);
        }
    }
    
    // Carry Sheep Man
    if (parent != noone &amp;&amp; instance_exists(parent) &amp;&amp; numInd == 3)
    {
        if ((phase == 0 &amp;&amp; moveTimer &gt;= 20) || phase &gt; 0)
        {
            parent.visible = 0;
            parent.x = x;
            parent.y = y;
            parent.mask_index = sprite_index;
        }
    }
    
    moveTimer++;
    switch (phase)
    {
        // Coming out
        case 0:
            if (moveTimer &lt; 14)
                speed = 0.75;
            else if (moveTimer &gt;= 24)
                speed = 0.5;
            else
                speed = 0;
            if (moveTimer &gt;= 35)
            {
                speed = 0;
                moveTimer = 0;
                phase = 1;
            }
            break;
        // Move onto position
        case 1:
            if (moveTimer == (20 + (20 * numInd)))
            {
                xspeed = (dX - x)/40;
                yspeed = (dY - y)/40;
            }
            if (moveTimer == (60 + (20 * numInd)))
            {
                moveTimer = 0;
                xspeed = 0;
                yspeed = 0;
                x = dX;
                y = dY;
                phase = 2;
            }
            break;
        // Thunder
        case 2:
            // Wait untill all clouds stopped before counting
            if (moveTimer == 70 + (15 * numInd))
            {
                animTimer = 10;
                playSFX(sfxThunderWoolThunder);
                m = instance_create(x, y, objSheepThunderWoolThunder);
                m.parent = id;
                m.shootSpark = numInd;
            }
            if (moveTimer == 105 + (15 * numInd))
            {
                event_user(EV_DEATH);
            }
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (numInd == 3)
{ 
    with (parent)
    {
        for (m = 0; m &lt; 4; m++)
        {
            l = instance_create(
            x + round(cos(degtorad(m * 90)) * 16), 
            y + round(sin(degtorad(m * 90)) * 16),
            objSingleLoopEffect);
            l.sprite_index = sprThunderWoolDisappear;
            l.image_speed = .3;
            l.depth = depth - 1 - m;
        }
        attackTimer = 0;
        shotsFired = 3;
    }
}
l = instance_create(x, y, objSingleLoopEffect);
l.sprite_index = sprThunderWoolDisappear;
l.image_speed = .2;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>iFrames = 4;
if (numInd == 3 &amp;&amp; phase &gt; 1)
{
    realHitpoints-=global.damage;
    if (!realHitpoints)
        event_user(EV_DEATH);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
