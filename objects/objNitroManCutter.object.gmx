<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWheelCutter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
stopOnFlash = false;
xspeed = 0;
yspeed = 0;
grav = gravAccel;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

itemDrop = -1;

inWater = 0;
ground = 0;

image_speed = 0.6;

attackDelay = 16;

bounceTimes = 0;
wallwait = 0;

jumpSpeed = 7;
accel = 0.25;
stepend = 0;
maxVspeed = 7;
blockCollision = 1;
fall = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    if (abs(xspeed) &lt; 5)
    {
        xspeed += 0.05 * image_xscale;
    }
    
    if (!bounceTimes)
    {
        if (ground)
        {
            xspeed = 0;
            bounceTimes += 1;
        }
    }
    
    if (ycoll != 0) // bounce from ground
    {
        if ((ycoll &gt; 0 &amp;&amp; image_yscale &gt; 0) || (ycoll &lt; 0 &amp;&amp; image_yscale &lt; 0))
        {
            ground = false;
            yspeed = -ycoll * 0.5;
            if (fall)
            {
                instance_destroy();
                instance_create(x, y, objExplosion);
            }
            if ((yspeed &gt; -0.5 &amp;&amp; sign(image_yscale) == 1) || (yspeed &lt; 0.5 &amp;&amp; sign(image_yscale) == -1))
            {
                yspeed = 0;
                ground = true;
            }
            bounceTimes += 1;
        }
        else
        {
            fall = true;
            yspeed = 0;
            xspeed = -image_xscale*3;
//            instance_destroy();
//            instance_create(x, y, objExplosion);
        }
    }
    
    if (checkSolid(image_xscale, 0))
    {
        wallwait += 1;
        if (wallwait &gt; 10)
        {
            if (yspeed == 0)
            {
                playSFX(sfxWheelCutter2);
            }
            /*if ((yspeed &gt; -jumpSpeed &amp;&amp; sign(image_yscale) == 1) || (yspeed &lt; jumpSpeed &amp;&amp; sign(image_yscale) == -1))
            {
                yspeed = max(yspeed - (accel), -jumpSpeed);
            }*/
            yspeed -= gravAccel * 2 * sign(image_yscale);
        }
        /*else
        {
            yspeed = 0;
        }*/
    }
    else
    {
        wallwait = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.object_index != objBreakDash) &amp;&amp; (other.object_index != objTenguDash)
&amp;&amp; (other.object_index != objChargeKick) &amp;&amp; (other.object_index != objIceSlasher)
&amp;&amp; (other.object_index != objWeaponBlizzardAttack) &amp;&amp; (other.object_index != objChillShot)
&amp;&amp; (other.object_index != objChillShot) &amp;&amp; (other.object_index != objChillSpikeLanded)
&amp;&amp; (other.object_index != objFreezeCracker)
{
    with (other)
    {
        guardCancel = 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
