<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDocRobotShellIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>sprDocRobotShellIdle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This variant of Doc Robot is designed as a shell to emulate most bosses in a Doc Robot form.







didCreate = false;//Must delay creation event until we get our instance CC.
event_inherited();
ystart -= 1;
y -= 1;//Offset the sprite slightly from the map.

useEndStageBehavior = true;

// @cc the boss object that Doc Robot will emulate.
myDoc = noone;
// @cc Use a new set of music? False will inherit the old Robot Master's music, while true will use MM3's boss theme by default, but can be changed with creation code.
useNewMusic = true;

music = "Mega_Man_3.nsf";
musicType = "VGM";
musicTrackNumber = 12;
musicVolume = 0.8;
musicLoop = true;
musicLoopSecondsStart = 8.825;
musicLoopSecondsEnd = 61.575;

docObject = noone;
docAlpha = 1;

myItem = objLifeEnergyBig;


despawnRange = -1;
respawnRange = -1;
canHit = false;
canDamage = false;
contactDamage = 0;

doesTransition = false;

introType = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_destroy,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_step,ev_step_end);
with (docObject)
{
    other.docAlpha = image_alpha;
    image_alpha = 0;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (!didCreate)
{
    sprite_index = object_get_sprite(myDoc);
    var oldItem = itemDrop;
    
    
    var sMusic = music;
    var sMusicType = musicType;
    var sMusicTrackNumber = musicTrackNumber;
    var sMusicVolume = musicVolume;
    var sMusicLoop = musicLoop;
    var sMusicLoopSecondsStart = musicLoopSecondsStart;
    var sMusicLoopSecondsEnd = musicLoopSecondsEnd;
    
    assert(myDoc != object_index,"Do not use Doc Robot as the insertion boss! This would cause infinite recursion!");
    
    
    
    //event_perform_object(myDoc,ev_create,0);
    if (useNewMusic)
    {
        //printErr("OVERRIDE");
        music = sMusic;
        musicType = sMusicType;
        musicTrackNumber = sMusicTrackNumber;
        musicVolume = sMusicVolume;
        musicLoop = sMusicLoop;
        musicLoopSecondsStart = sMusicLoopSecondsStart;
        musicLoopSecondsEnd = sMusicLoopSecondsEnd;
        
    }
    didCreate = true;
    itemDrop = oldItem;
    didCreate = true;
    
}*/

//event_perform_object(myDoc,ev_step,ev_step_begin);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_step,ev_step_normal);

with (docObject)
{
    if (isIntro &amp;&amp; yspeed &gt; 1)
        yspeed = 1
    //other.docAlpha = image_alpha;
    //image_alpha = 0;
    if (other.mask_index != mask_index)
    {
        mask_index = other.mask_index
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_other,ev_user15);
docObject = instance_create(x,y,myDoc);
//printErr
with (docObject)
{
    //other.docAlpha = image_alpha;
    visible = false;
    mask_index = other.mask_index;
    myItem = other.myItem;
    itemDrop = other.myItem;
    useEndStageBehavior = other.useEndStageBehavior;
    other.depth = depth;//Below the boss's depth to run just before them. -10 because sprite flicker shenanigans.
    if (other.useNewMusic)
    {
        music = other.music;
        musicType = other.musicType;
        musicTrackNumber = other.musicTrackNumber;
        musicLoopSecondsStart = other.musicLoopSecondsStart;
        musicLoopSecondsEnd = other.musicLoopSecondsEnd;
        musicVolume = other.musicVolume;
    }
    introType = other.introType;
}
/*if (useNewMusic)
{
    playMusic(music,musicType,musicTrackNumber,musicLoopSecondsStart,musicLoopSecondsEnd,musicLoop,musicVolume);
    
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_other,ev_user14);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_other,ev_user13);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blanked out: Only actually used by weapon setup.

////event_perform_object(myDoc,ev_other,ev_user12);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_other,ev_user11);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_other,ev_user10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_other,ev_user9);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_other,ev_user8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_perform_object(myDoc,ev_other,ev_user7);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
var tempSong = global.levelSong;
var tempType = global.levelSongType;
var tempTrack = global.levelTrackNumber;

//event_perform_object(myDoc,ev_other,ev_user6);

if useNewMusic &amp;&amp; (tempSong != global.levelSong || tempType != global.levelSongType || tempTrack != global.levelTrackNumber)
{
    playMusic(music,musicType,musicTrackNumber,musicLoopSecondsStart,musicLoopSecondsEnd,musicLoop,musicVolume);
    printErr("PLAY");
}*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (docObject)
{
    image_alpha = other.docAlpha;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (docObject)
{
    
    //image_alpha = 0;
    if ((!isFight) &amp;&amp; y &lt; (ystart - 8))
    {
        //event_perform_object(myDoc, ev_draw, 0)
        draw_sprite_ext(sprDocRobotShellIdle, 0, xstart, ystart, image_xscale, image_yscale, image_angle, image_blend, other.docAlpha)
        var tempA = image_alpha;
        image_alpha = other.docAlpha;
        draw_self();
        image_alpha = tempA;
    }
    else if (!isFight)
        draw_sprite_ext(sprDocRobotShellIdle, 0, xstart, ystart, image_xscale, image_yscale, image_angle, image_blend, other.docAlpha)
    else
    {
        //var tempSprite,docSprite,sprName,tIndex;
        //tempSprite = other.sprite_index
        var docSprite = other.sprite_index
        var sprName = string_lower(sprite_get_name(sprite_index))
        if (string_pos("jump", sprName) || (!ground))
        {
            if (string_pos("shoot", sprName) || string_pos("throw", sprName))
                docSprite = sprDocRobotShellShootJump
            else
                docSprite = sprDocRobotShellJump
        }
        else if (string_pos("shoot", sprName) || string_pos("throw", sprName))
            docSprite = sprDocRobotShellShoot;
        else if (ground &amp;&amp; (xspeed != 0 || string_pos("run", sprName) || string_pos("walk", sprName)))
            docSprite = sprDocRobotShellWalk;
        else if (xspeed == 0)
            docSprite = sprDocRobotShellIdle;
        else
            docSprite = sprDocRobotShellJump;
        //tIndex = image_index
        
        draw_sprite_ext(docSprite,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,other.docAlpha);
        
        //sprite_index = docSprite
        //image_index = tIndex
        //event_perform_object(myDoc, ev_draw, 0)
        //sprite_index = tempSprite
        //image_index = tIndex
        //printErr("DRAW");
    }
    //image_alpha = 0;//other.docAlpha;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
