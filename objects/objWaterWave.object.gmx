<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWaterWave</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

playSFX(sfxWaterWave);
bulletLimitCost = 1;
contactDamage = 2;
grounded = false;
inWater = -1;
blockCollision = true;
insideRoom = true;

image_speed = 0;

penetrate = 0;
pierces = 1;
attackDelay = 8;

dir = 1;
grav = 0;

// can be 0, 1, or 2, for position in the wave
phase = 2;

spd = 3;
fizzle = false; // true when it hits a wall

has_spawned = false; // has created next section of wave

animInterval = 4;
animLength = 0;
animTimer = 0;

anim [animLength,0] = 1;
anim [animLength,1] = 0;
anim [animLength,2] = 0;

animLength += 1;

anim [animLength,0] = 1;
anim [animLength,1] = 0;
anim [animLength,2] = 1;

animLength += 1;

anim [animLength,0] = 1;
anim [animLength,1] = 2;
anim [animLength,2] = 2;

animLength += 1;

anim [animLength,0] = 1;
anim [animLength,1] = 2;
anim [animLength,2] = 3;

animLength += 1;

anim [animLength,0] = 2;
anim [animLength,1] = 3;
anim [animLength,2] = 3;

animLength += 1;

anim [animLength,0] = 2;
anim [animLength,1] = 3;
anim [animLength,2] = 2;

animLength += 1;

anim [animLength,0] = 3;
anim [animLength,1] = 2;
anim [animLength,2] = 1;

animLength += 1;

anim [animLength,0] = 2;
anim [animLength,1] = 1;
anim [animLength,2] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
var parentID;
if instance_exists(parent)
{
    parentID = parent.playerID;
}
else
{
    parentID = 0;
}
if insideView() &amp;&amp; insideRoom &amp;&amp; !instance_exists(objSectionSwitcher) &amp;&amp; global.weapon[parentID] == objWaterWave
{
    event_user(5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen 
{
    if animTimer &gt;= 3*(2-phase) &amp;&amp; phase &gt; 0 
    {
        event_user(5);
    }
    
    image_index = anim[(animTimer div animInterval) mod animLength,phase] - (phase == 0 &amp;&amp; fizzle)
    if image_index == 0 &amp;&amp; fizzle 
    {
        doEvent = false;
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen 
{
    sprite_index = mskWaterWave;   
    grounded = false;
    if !fizzle
    {
        for (i=0;i&lt;spd;i+=1)
        {
            checkGround();
            // smaller collision mask
            if xcoll != 0
            {
                fizzle = true;
            }
            if fizzle
                break;
            if ground
            {
                shiftObject(dir, 0, 1);
                grounded = true;
            }
            else
            {
                shiftObject(0, image_yscale, 1);
                grounded = false;
            }
            checkGround();
        }
    }
    sprite_index = sprWaterWave; 
    animTimer += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>insideRoom = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// EV_WEAPON_CONTROL

if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    i = fireWeapon(18, 15, objWaterWave, 1, 1, 1, 0);
    if (i) // set starting speed
    {
        i.dir = image_xscale;
        i.image_yscale = gravDir;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// special damage

specialDamageValue("fire", 4);
specialDamageValue("aquatic", 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("WATER WAVE", make_color_rgb(0, 120, 248), make_color_rgb(248, 248, 248), sprWeaponIconsWaterWave);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other)
{
    iFrames = 0; //simulates 24h multihit
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playSFX(sfxReflect);
insideRoom = false;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !has_spawned &amp;&amp; phase &gt; 0
{
    has_spawned = true;
    
    x_offset = -6*(1 + (phase == 1))
    y_offset = 0;
    
    if !grounded 
    {
        y_offset = x_offset;
        x_offset = 0;
    }
    
    with instance_create(x + x_offset*dir,y + y_offset,objWaterWave) 
    {
        phase = other.phase - 1;
        animTimer = other.animTimer
        dir = other.dir
        image_yscale = other.image_yscale
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
