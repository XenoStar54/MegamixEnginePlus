<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPUSwitchBlockRed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// this block swaps solidity based on switch state
event_inherited();

canHit = false;
canDamage = false;
contactDamage = 0;
isSolid = 1;

shiftVisible = 1;

blockCollision = 0;
grav = 0;
bubbleTimer = -1;

myFlag = 999;

setSolid = 1;
setLadder = 0;
setSpike = 0;
setSlippery = 0;
setOil = 0;

blockSwitchStateFaction = 0;
blockSprite[0] = sprPUSwitchBlockRed;
blockSprite[1] = sprPUSwitchBlockBlue;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    sprite_index = blockSprite[blockSwitchStateFaction];
    var activity = (global.flagParent[myFlag].active xor blockSwitchStateFaction);
    isSolid = activity * setSolid;
    entityLadder = activity * setLadder;
    entitySpike = activity * setSpike;
    canDamage = activity * setSpike;
    entityIce = activity * setSlippery;
    entityOil = activity * setOil;
    image_index = !activity;
    
    if(setSolid == 2 &amp;&amp; setLadder == 0)
    {
        y = bbox_top;
        image_yscale = sign(image_yscale);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!dead)
{
    for(var i = 0; i &lt; abs(image_xscale); i++) for(var j = 0; j &lt; abs(image_yscale); j++)
    {
        if(setSolid == 2 &amp;&amp; setLadder == 0) // if it's a topsolid only draw the topmost piece
        {
            draw_sprite(sprite_index,image_index,bbox_left+i*abs(sprite_width/image_xscale),bbox_top);
            j = abs(image_yscale);
        }
        else draw_sprite(sprite_index,image_index,bbox_left+i*abs(sprite_width/image_xscale),bbox_top+j*abs(sprite_height/image_yscale));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
