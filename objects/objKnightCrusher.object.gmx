<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKnightCrusher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 2;
attackDelay = 8;

penetrate = 0;
pierces = 1;

image_speed = 1/4;

knightTimer = 0;
cutterTimer = 0;

blockCollision = 0;
grav = 0;
xspeed = 0;
yspeed = 0;

spd = 4;
turnSpd = 1.75;
initDir = 15; //goes to -15 i guess?
dir = 0;
phase = 0;
initialDir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    
    if (phase == 0)
    {   
        xspeed = cos(degtorad(dir))*spd;
        yspeed = -sin(degtorad(dir))*spd;
        knightTimer++;
        if(knightTimer == 20)
        {
            knightTimer = 0;
            phase = 1;
        }
    }
    else if (phase == 1)
    {
        xspeed = cos(degtorad(dir))*spd;
        yspeed = -sin(degtorad(dir))*spd;
        dir += 15;
        if(dir == initialDir + 180)
        {
            phase = 2;
        }
    }
    else if (phase == 2)
    {   
        xspeed = cos(degtorad(dir))*spd;
        yspeed = -sin(degtorad(dir))*spd;
        if (instance_exists(parent))
        {
            if (place_meeting(x, y, parent))
            {
                event_user(EV_DEATH);
            }
            dir = point_direction(spriteGetXCenter(), spriteGetYCenter(),
            spriteGetXCenterObject(parent),
            spriteGetYCenterObject(parent));
        }
        else
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    i = fireWeapon(28, 0, objKnightCrusher, 2, 1, 1, 0);
    if (i)
    {
        playSFX(sfxBuster);
        i.dir = 0;
        
        if (image_xscale &lt; 0)
        {
            i.dir += 180;
        }
        
        if (yDir != 0)
        {
            i.dir -= (yDir * 90) * image_xscale;
            if (xDir != 0)
            {
                i.dir += (yDir * 45) * image_xscale;
            }
        }
        if i.dir == 90
        {
            i.dir -= 45 * image_xscale;   
        }
        if i.dir == 270 &amp;&amp; image_xscale &lt; 0
        {
            i.dir += 45 * image_xscale;
        }
        // there's a bizarre glitch with downwards aiming when facing right, here's a fix
        if i.dir == -90 &amp;&amp; image_xscale &gt; 0
        {
            i.dir = -45;
        }
        i.initialDir = i.dir;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("KNIGHT CRUSHER", global.nesPalette[14], global.nesPalette[13], sprWeaponIconsKnightCrusher);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Some MM6 Weapons have special reflection effects for some reason
phase = 2;
contactDamage = 0;
playSFX(sfxReflect);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _cor = 0;
var _dir = point_direction(x, y, spriteGetXCenterObject(parent), spriteGetYCenterObject(parent));
if (_dir &gt;= dir)
{
    if (abs(_dir - dir) &gt;= abs((360 - _dir) + dir))
    {
        _cor = -1;
    }
    else
    {
        _cor = 1;
    }
}
else
{
    if (abs(dir - _dir) &gt;= abs((360 - dir) + _dir))
    {
        _cor = 1;
    }
    else
    {
        _cor = -1;
    }
}

repeat (spd)
{
    if (_dir != dir)
    {
        dir += _cor;
    }
    else
    {
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
