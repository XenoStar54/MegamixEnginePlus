<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCrabbyPunch</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 0;
blockCollision = 0;
grav = 0;
despawnRange = -1;
penetrate = 3;
pierces = 2;

phase = 0;
timer = 0;
timerMax = 10;
distance = 96;
angle = 0;

image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(instance_exists(parent))
{
    if(phase == 0) parent.spriteY = 6;
    else parent.spriteY = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(parent))
{
    instance_destroy();
    exit;
}

event_inherited();

if(entityCanStep())
{
    if(phase == 0) // shield
    {
        visible = 1;
        image_xscale = parent.image_xscale;
        image_yscale = parent.image_yscale;
        image_angle = 180+90*image_xscale;
        x = parent.x + image_xscale*24;
        y = parent.y - image_yscale*8;
        if(!global.keyShoot[playerID])
        {
            timer = 0;
            phase = 1;
            image_angle = 0;
            x = parent.x;
            y = parent.y;
            angle = point_direction(0,0,image_xscale,0);
            //angle = point_direction(0,0,parent.xDir+image_xscale*(parent.xDir == 0 &amp;&amp; parent.yDir == 0),parent.yDir)
            playSFX(sfxWanaan);
        }
    }
    else if(phase == 1) // extend
    {
        timer++;
        image_yscale = parent.image_yscale;
        x = parent.x + cos(degtorad(angle))*distance*timer/timerMax;
        y = parent.y - sin(degtorad(angle))*distance*timer/timerMax;
        if(timer &gt;= timerMax)
        {
            phase = 2;
        }
    }
    else if(phase == 2) // retract
    {
        timer--;
        image_yscale = parent.image_yscale;
        x = parent.x + cos(degtorad(angle))*distance*timer/timerMax;
        y = parent.y - sin(degtorad(angle))*distance*timer/timerMax;
        if(timer &lt;= 0)
        {
            instance_destroy();
        }
    }
    
    if(instance_exists(prtEnemyProjectile))
    {
        var enemyProjectile = instance_place(x,y,prtEnemyProjectile);
        with(enemyProjectile)
        {
            if(canDamage*contactDamage &amp;&amp; reflectable != 0)
            {
                instance_create(bboxGetXCenter(),bboxGetYCenter(),objExplosion);
                event_user(10);
                playSFX(sfxEnemyHit);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    var a = fireWeapon(0, -8, objCrabbyPunch, 1, 2, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("CRABBY PUNCH",global.nesPalette[5],global.nesPalette[34],sprWeaponIconsCrabbyPunch);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phase == 0) draw_sprite(sprite_index,1,x-12*image_xscale,y);
else draw_sprite(sprite_index,1,x-cos(degtorad(angle))*0.5*distance*timer/timerMax,y+sin(degtorad(angle))*0.5*distance*timer/timerMax);

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
