<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprOilSlider</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 1;
extraDamage = 0;

image_speed = 0;

xspeed = 0;
yspeed = 0;
blockCollision = 1;

gravNormal = 0.25;
grav = gravNormal;

sliding = false;
time = 180;
timer = time;
spd = 3;
damp = 0.25;

oilSliderLock = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//get rid of lock here
if (instance_exists(parent)){
    with(parent){
        if (other.oilSliderLock){
            other.oilSliderLock = lockPoolRelease(other.oilSliderLock);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if ((entityCanStep() || instance_exists(objSectionSwitcher)) &amp;&amp; canDamage){

    if (sliding){
        if (instance_exists(parent)){
            if (parent.ground){
                parent.spriteX = 12;
                parent.spriteY = 9;
            }
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if ((entityCanStep() || instance_exists(objSectionSwitcher)) &amp;&amp; canDamage){
    shiftVisible = 3*(sliding);
    if (!sliding){
    
        if (instance_place(x, y, parent)){
            if (!parent.vehicle &amp;&amp; !parent.climbing){
                depth = parent.depth - 1;
                sliding = true;
                x = spriteGetXCenterObject(parent);
                sprite_index = sprOilSliderSkateboard;
                image_xscale = parent.image_xscale;
                penetrate = 3;
                pierces = 1;
                extraDamage = 3;
                with(parent){
                    xspeed = 0;
                    climbing = false;
                    if (isSlide)
                    {
                        slideLock = lockPoolRelease(slideLock);
                        isSlide = false;
                        mask_index = mskMegaman;
                        slideTimer = 0;
                        shiftObject(0, -gravDir, 1);
                    }
                    if (!other.oilSliderLock){
                        other.oilSliderLock = lockPoolLock(
                        PL_LOCK_MOVE,
                        PL_LOCK_SHOOT,
                        PL_LOCK_TURN,
                        PL_LOCK_SLIDE);
                    }
                    other.oilSliderLock.targetInstance = id;
                }
            }
        }
    
        if (!ground){
            image_index = 0;
            
            if (instance_place(x, y, objWater)){
                grav = 0;
                yspeed = 0;
                xspeed /= 1 + damp;
                
                if (instance_place(x, y - image_yscale*8, objWater)){
                    shiftObject(0, -image_yscale, true);
                    timer = time;
                }
                else{
                    if (timer &gt; 0) timer--;
                    else{
                        event_user(EV_DEATH);
                    }
                }
            }
            else{
                grav = image_yscale*gravNormal;
            }
        }
        else{
            image_index = 1;
            xspeed = 0;
            
            if (timer &gt; 0) timer--;
            else
            {
                instance_create(x, y, objExplosion);
                event_user(EV_DEATH);
            }
        }
    }
    else{
        if (instance_exists(parent)){
        
            with(parent)
            {
                if (sign(yDir) == sign(-image_yscale) &amp;&amp; !ground &amp;&amp; global.keyJumpPressed[playerID])
                {
                    playerJump();
                    with(other)
                        instance_destroy();
                    exit;
                }
            }
        
            if (parent.isHit || parent.climbing || parent.xcoll != 0 || instance_place(x, y, prtBossDoor)
                // collide with the left and right sides of the screen when there's no screen transition
                || (!(bbox_right &lt; view_xview[0] + view_wview[0] &amp;&amp; bbox_left &gt; view_xview[0])
                    &amp;&amp; (!instance_place(parent.x, parent.y, objSectionArrowRight)
                        &amp;&amp; !instance_place(parent.x, parent.y, objSectionArrowLeft))))
            {
                parent.xspeed = 0;
                instance_destroy();
                exit;
            }
            
            image_index = !parent.ground;
            x = spriteGetXCenterObject(parent);
            y = parent.bbox_bottom * (image_yscale &gt; 0) + parent.bbox_top * (image_yscale &lt; 0) - image_yscale*5*(parent.ground);
            
            parent.xspeed = lerp(parent.xspeed, spd*parent.image_xscale, damp);
            
            if (instance_place(x, y, objWater)){// &amp;&amp; !instance_place(x, y, objOilSliderTopSolid)){
                with(parent){
                    if (instance_place(x, y, objWater)){
                        yspeed = 0;
                        shiftObject(0, -(grav + image_yscale), true);
                    }
                }
            }
            if (!parent.inWater &amp;&amp; instance_place(x, y + image_yscale*4, objWater)){
                var water = instance_place(x, y + image_yscale*4, objWater);
                var t = instance_create(x, water.bbox_top*(image_yscale &gt; 0) + water.bbox_bottom*(image_yscale &lt; 0), objOilSliderTopSolid);
            }
            /*if (instance_place(x, y, objOilSliderTopSolid)){
                var s = instance_place(x, y, objOilSliderTopSolid);
                parent.y = s.bbox_top*(image_yscale &gt; 0) + s.bbox_bottom*(image_yscale &lt; 0) - image_yscale*20;
            }*/
        }
        else{
            instance_destroy();
            exit;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT)){

    var i = fireWeapon(21, 0, objOilSlider, 2, 1, 1, 0);
    if (i){
        playSFX(sfxOil);
        i.image_xscale = image_xscale;
        i.image_yscale = image_yscale;
        i.xspeed = image_xscale*3;
        i.yspeed = image_yscale*-1;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("OIL SLIDER", global.nesPalette[12], global.nesPalette[28], sprWeaponIconsOilSlider);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.damage += extraDamage;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_index = (sprite_index == sprOilSliderSkateboard);
shiftVisible = 0;
blockCollision = false;

if (instance_exists(parent))
{
    with (parent)
    {
        if (other.oilSliderLock)
        {
            other.oilSliderLock = lockPoolRelease(other.oilSliderLock);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
