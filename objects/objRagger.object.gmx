<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRagger</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 8;
healthpoints = healthpointsStart;
contactDamage = 3;
grav = 0.15

facePlayerOnSpawn = true;

xspeed = 0
yspeed = 0

radius = 2 * 16;

// Enemy specific code
phase = 0;
image_speed = 0;
animTimer = 0
jumping = 1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // increment AI timer
    
    switch (phase)
    {
        // Spin around like a doofus
        case 0: // turn right 
            animTimer += 1
            image_index = 0 + (animTimer div 10) mod 2;
            
            if (animTimer == 35)
            {
                phase = choose(1,4)
                animTimer = 0
                calibrateDirection();
                image_index = 2
            }
          
          break;
        
        case 1: 
           animTimer += 1;
           if (animTimer == 4)
           image_index = 3
           if (animTimer == 10)
           image_index = 4
           if (animTimer == 15){
           image_index = 5
           shoot = instance_create(x, y - 10, objRaggerBoomerang);
           shoot.image_xscale = image_xscale;
           playSFX(sfxBoomerang);
           }
           if (animTimer == 20){
           phase = 2
           animTimer = 0
           }
           
           
           break;
        
        case 2: 
            animTimer += 1
            image_index = 6 + (animTimer div 10) mod 2;
            
            if (animTimer &gt;= 17 &amp;&amp; !instance_exists(objRaggerBoomerang))
            {
                phase = 3
                animTimer = 0
                image_index = 2
                playSFX(sfxClamp)
            }
          
          break;
        
        case 3:
           animTimer += 1;
           if (animTimer == 4)
           image_index = 3
           if (animTimer == 10)
           image_index = 2
           if (animTimer == 15){
           phase = 0
           animTimer = 0
           }
           
           break;
           
        case 4: 
           animTimer += 1;
           if (animTimer == 4){
           image_index = 3
           image_xscale *= -1;
           }
           if (animTimer == 10)
           image_index = 4
           if (animTimer == 15){
           image_index = 5
           shoot = instance_create(x, y - 10, objRaggerBoomerang);
           shoot.image_xscale = image_xscale;
           playSFX(sfxBoomerang);
           }
           if (animTimer == 20){
           phase = 5
           animTimer = 0
           }
           
           break;
           
        case 5: 
            animTimer += 1
            image_index = 6 + (animTimer div 10) mod 2;
            
            if (animTimer &gt;= 25 &amp;&amp; distance_to_object(objRaggerBoomerang) &lt;= radius)
            {
                phase = 6;
                image_index = 7;
                animTimer = 0
            }
          
          break;
        
        case 6: 
        animTimer += 1
            if (animTimer == 1){
            image_index = 10
            yspeed = -4
            with(objRaggerBoomerang)
            destroy = 1
            }
            
            if (animTimer &gt;= 3 &amp;&amp; yspeed == 0)
            image_index = 11
            
            if (animTimer &gt;= 3 &amp;&amp; ground)
            {
                phase = 6.5;
                animTimer = 0
            }
          
          break;
          
        case 6.5: 
            animTimer += 1
            image_index = 6 + (animTimer div 10) mod 2;
            
            if (animTimer &gt;= 3 &amp;&amp; !instance_exists(objRaggerBoomerang))
            {
                phase = 7;
                animTimer = 0
            }
          
          break;
        
        case 7:
           animTimer += 1;
           if (animTimer == 4){
           calibrateDirection();
           image_index = 3
           }
           if (animTimer == 10)
           image_index = 2
           if (animTimer == 15){
           phase = 0
           animTimer = 0
           }
           
           break;
           
    }
}
else if (dead)
{
    phase = 0;
    image_speed = 0;
    animTimer = 0
    yspeed = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

with(objRaggerBoomerang)
    destroy = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
