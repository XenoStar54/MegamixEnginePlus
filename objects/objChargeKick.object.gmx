<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskMegaman</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 2;

penetrate = 3; // obviously we don't want to destroy the control for the dash
pierces = 2;
attackDelay = 8;
killOverride = true;

visible = 0;

shiftVisible = 3;
despawnRange = -1;

flashTimer = 0;
flashOffset = 0;

animTimer = 0;
animFrame = 0;

dashTimer = 35;
dashSpeed = 2.5;

breakDashLock = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

breakDashLock = lockPoolRelease(breakDashLock);

if (instance_exists(parent))
{
    with(parent)
    {
        hitTimer = 0;
        iFrames = 50;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// check for parent
if (!instance_exists(parent))
{
    instance_destroy();
    exit;
}
else
{
    image_xscale = parent.image_xscale * 1.2;
    
    x = parent.x; // stay attached to MM
    y = parent.y;
}

if (!global.frozen)
{
    // iFrames fist/dash
    flashTimer += 1;
    if (flashTimer == 3)
    {
        flashOffset = !flashOffset;
        flashTimer = 0;
    }
    
    // real anim
    animTimer += 1;
    if (animTimer == 4)
    {
        animFrame += 1;
        if (animFrame &gt;= 6)
        {
            animFrame = 0;
        }
        animTimer = 0;
    }
    
    with (parent) // Mega Man anim + movement forcing
    {
        if (other.breakDashLock &lt;= 0 &amp;&amp; ground)
        {
            var lock = lockPoolLock(
                PL_LOCK_MOVE,
                PL_LOCK_SHOOT,
                PL_LOCK_SLIDE,
                PL_LOCK_TURN
            );
            lock.targetInstance = id
            other.breakDashLock = lock
            xspeed=0;
            yspeed=0;
        }
        {
            other.dashTimer = 0;
        }
        {
            playerHandleSprites("Break");
            xspeed = other.dashSpeed * other.image_xscale; // movement force
            iFrames = -1;
        }
    }
    with (parent)
    {
        if(playerIsLocked(PL_LOCK_MOVE) &amp;&amp; playerIsLocked(PL_LOCK_TURN))
        {
            other.dashTimer=0;
            xspeed=0;
        }
    }
    
    
    // Destroy timer
    dashTimer -= 1;
    if (dashTimer &lt;= 0)
    {
        xspeed = 0;
        instance_destroy();
    }
}
else if (global.switchingSections)
{
    with (parent)
    {
        playerHandleSprites("Break");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var chargeTime = 40; // Set charge time for this weapon
var initChargeTime = 20;

var _canSpawn = true;
with (objChargeKick)
{
    if (playerID == other.playerID)
    {
        _canSpawn = false;
    }
}

if (_canSpawn &amp;&amp; global.ammo[playerID, global.weapon[playerID]] &gt; 0)
{
    if (isSlide &amp;&amp; notDashing)
    {
        slideSpeed = 3;
        a = instance_create(x, y, objChargeKicking);
        a.image_xscale = image_xscale;
        iFrames = -1;
        
        global.ammo[playerID, global.weapon[playerID]] = max(0,
        global.ammo[playerID, global.weapon[playerID]] - 1 / (global.energySaver + 1));
        
        notDashing = false;
    }
    else if (!isSlide)
    {
        notDashing = true;
    }
}

// normal firing
scrBusterControl(false, true, _canSpawn);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue("grounded", 3);
specialDamageValue(objSpine, 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("CHARGE KICK", global.nesPalette[32], global.nesPalette[40], sprWeaponIconsChargeKick);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
