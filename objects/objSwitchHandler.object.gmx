<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSwitchTimer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/// Switch handlers are timers that go from 0 to 1, they are stored in a global array and can be used for
// triggering other objects remotely

//@cc what id to use to connect to other switches
myFlag = 0;

//@cc How many frames it takes to turn on, set to 1 for instant
flagOnLength = 30;

//@cc How many frames it takes to turn off, set to 1 for instant
flagOffLength = 30;

//@cc binary means there's no delay when turning the flag on/off. 0 = neither, 1 = instant on, 2 = instant off
binary = 0;

//@cc 0 = stays on/off, 1 = turns on, 2 = turns off
//@cc note: the object will need to keep setting active to the oposite setting of this otherwise it will immediately turn off
stayActive = 0;

//@cc
inverse = false;

active = false;
alarm[0] = 1;

stopOnFlash = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.flag[myFlag] = 0;
global.flagParent[myFlag] = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; !(-!global.timeStopped * stopOnFlash))
{
    if (active)
    {
        // On
        if (stayActive == 2)
        {
            active = false;
        }
        
        if (binary == 1)
        {
            global.flag[myFlag] = 1 - inverse;
        }
        else
        {
            if (!inverse)
            {
                if (global.flag[myFlag] &lt; 1)
                {
                    global.flag[myFlag] += 1 / flagOnLength;
                }
                else
                {
                    global.flag[myFlag] = 1;
                }
            }
            else
            {
                if (global.flag[myFlag] &gt; 0)
                {
                    global.flag[myFlag] -= 1 / flagOnLength;
                }
                else
                {
                    global.flag[myFlag] = 0;
                }
            }
        }
    }
    else
    {
        // Off
        if (stayActive == 1)
        {
            active = true;
        }
        
        if (binary == 2)
        {
            global.flag[myFlag] = inverse;
        }
        else
        {
            if (!inverse)
            {
                if (global.flag[myFlag] &gt; 0)
                {
                    global.flag[myFlag] -= 1 / flagOffLength;
                }
                else
                {
                    global.flag[myFlag] = 0;
                }
            }
            else
            {
                if (global.flag[myFlag] &lt; 1)
                {
                    global.flag[myFlag] += 1 / flagOffLength;
                }
                else
                {
                    global.flag[myFlag] = 1;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, (image_number - 1) * (1 - global.flag[myFlag]), x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
