<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJewelMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 28;
healthpoints = healthpointsStart;
introType = 0;
customPose = true;
poseImgSpeed = 0;
contactDamage = 4;
hasTriggeredFall = false;
blockCollision = true;

phase = 0;
timer = 0;
animTimer = 0;
turnCount = 0;
xSpeedStore = 0;
refillJewels = 0;
jewelPattern = 0;

// Healthbar color
manualColors = true;
healthBarPrimaryColor[1] = global.nesPalette[31]; // pink
healthBarSecondaryColor[1] = global.nesPalette[40]; // white

// Music
music = "Mega_Man_9.nsf";
musicType = "VGM";
musicTrackNumber = 16;
musicVolume = 1.4;

// Damage Table
enemyDamageValue(objBusterShot, 1);
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);

// MaGMML3
enemyDamageValue(objSparkChaser, 1);
enemyDamageValue(objLaserTrident, 1);
enemyDamageValue(objWaterShield, 1);
enemyDamageValue(objTornadoBlow, 1);
enemyDamageValue(objThunderBeam, 1);
enemyDamageValue(objBreakDash, 1);
enemyDamageValue(objMagneticShockwave, 1);
enemyDamageValue(objIceWall, 1);

// MaGMML2
enemyDamageValue(objHornetChaser, 1);
enemyDamageValue(objJewelSatellite, 2);
enemyDamageValue(objGrabBuster, 1);
enemyDamageValue(objTripleBlade, 1);
enemyDamageValue(objSlashClaw, 1);
enemyDamageValue(objWheelCutter, 1);
enemyDamageValue(objSakugarne, 1);
enemyDamageValue(objSuperArrow, 1);
enemyDamageValue(objWireAdapter, 1);

// MaGMML1
enemyDamageValue(objMetalBlade, 1);
enemyDamageValue(objGeminiLaser, 1);
enemyDamageValue(objSolarBlaze, 1);
enemyDamageValue(objTopSpin, 1);
enemyDamageValue(objThunderWool, 1);
enemyDamageValue(objPharaohShot, 1);
enemyDamageValue(objBlackHoleBomb, 5);
enemyDamageValue(objMagicCard, 1);

// MaG48HMML
enemyDamageValue(objFlameMixer, 1);
enemyDamageValue(objRainFlush, 1);
enemyDamageValue(objSparkShock, 1);
enemyDamageValue(objSearchSnake, 1);
enemyDamageValue(objTenguBlade, 1);
enemyDamageValue(objTenguDash, 1);
enemyDamageValue(objTenguDisk, 1);
enemyDamageValue(objSaltWater, 1);
enemyDamageValue(objConcreteShot, 1);
enemyDamageValue(objHomingSniper, 1);

// MaG24HMML
enemyDamageValue(objSuperArmBlockProjectile, 1);
enemyDamageValue(objSuperArmDebris, 1);
enemyDamageValue(objChillShot, 1);
enemyDamageValue(objChillSpikeLanded, 1);

// Misc.
enemyDamageValue(objPowerStone, 1);
enemyDamageValue(objPlantBarrier, 1);
enemyDamageValue(objBlockDropper, 1);
enemyDamageValue(objIceSlasher, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if(startIntro)
    {
        y -= view_hview*image_yscale;
        calibrateDirection();
        phase = 0;
        timer = -5;
        animTimer = 0;
        hasTriggeredFall = false;
        canFillHealthBar = false;
        image_index = 5;
        visible = true;
        startIntro = false;
        isIntro = true;
        grav = gravStart;
    }
    else if(isIntro)
    {
        if(y != ystart &amp;&amp; !hasTriggeredFall)
        {
            if(abs(y - ystart) &lt; abs(yspeed))
            {
                y = ystart;
                gravStart = grav;
                grav = 0;
                yspeed = 0;
                hasTriggeredFall = true;
            }
            image_index = 6;
        }
        else
        {
            if(!hasTriggeredFall) hasTriggeredFall = true;
            timer++;
            if(timer &lt; 0)
            {
                image_index = 6;
            }
            else if(timer &lt; 10)
            {
                image_index = 7;
            }
            else if(timer == 10)
            {
                image_index = 8;
                playSFX(sfxJewelSatellite);
                for(var i = 0; i &lt; 4; i++)
                {
                    var jewel = instance_create(x,y,objJewelManSattelite);
                    jewel.initAngle = i*90;
                    jewel.parent = self;
                    jewel.myID = i;
                }
            }
            else if(timer &lt; 13)
            {
                image_index = 9;
            }
            else if(timer &lt; 16)
            {
                image_index = 10;
            }
            else if(timer &lt; 19)
            {
                image_index = 11;
            }
            else if(timer &lt; 22)
            {
                image_index = 12;
            }
            else
            {
                timer = 0;
                animTimer = 0;
                phase = 0;
                xSpeedStore = 0;
                turnCount = 0;
                canFillHealthBar = true;
                isIntro = false;
                grav = gravStart;
                blockCollision = blockCollisionStart;
                setTargetStep();
            }
        }
    }
    else if(isFight)
    {
        if(phase == 0) // roam
        {
            if(ground &amp;&amp; turnCount &lt; 3)
            {
                xspeed = 1.3*image_xscale;
                xSpeedStore = xspeed;
                if(animTimer mod 6 == 0)
                {
                    if(image_index &gt;= 1 &amp;&amp; image_index &lt; 4) image_index++;
                    else image_index = 1;
                }
                animTimer++;
                if(target &amp;&amp; !target.ground)
                {
                    yspeed = -6 * image_yscale;
                    image_index = 5;
                }
                if(x &lt;= view_xview + 16 || x &gt;= view_xview + view_wview - 16)
                {
                    image_xscale = -image_xscale;
                    var jewelcheck = 1;
                    for(var i = 0; i &lt; instance_number(objJewelManSattelite); i++)
                    {
                        var checkedJewel = instance_find(objJewelManSattelite,i);
                        if(checkedJewel.parent == self)
                        {
                            jewelcheck = 0;
                            i = instance_number(objJewelManSattelite);
                        }
                    }
                    if(jewelcheck)
                    {
                        refillJewels = 1;
                        if(turnCount == 2) turnCount--;
                    }
                    turnCount++;
                    xspeed = 0;
                    if(sign(yspeed) == -image_yscale) yspeed = 0;
                }
                else if(sign(xcoll) == image_xscale)
                {
                    if(checkSolid(image_xscale,-6*16*image_yscale) &amp;&amp; checkSolid(image_xscale,-3*16*image_yscale))
                    {
                        image_xscale = -image_xscale;
                        var jewelcheck = 1;
                        for(var i = 0; i &lt; instance_number(objJewelManSattelite); i++)
                        {
                            var checkedJewel = instance_find(objJewelManSattelite,i);
                            if(checkedJewel.parent == self)
                            {
                                jewelcheck = 0;
                                i = instance_number(objJewelManSattelite);
                            }
                        }
                        if(jewelcheck)
                        {
                            refillJewels = 1;
                            if(turnCount == 2) turnCount--;
                        }
                        turnCount++;
                        xspeed = 0;
                        if(sign(yspeed) == -image_yscale) yspeed = 0;
                    }
                    else
                    {
                        yspeed = -6*image_yscale;
                        image_index = 5;
                    }
                }
            }
            else if(ground &amp;&amp; turnCount &gt;= 3)
            {
                var check = 0;
                for(var i = 0; i &lt; instance_number(objJewelManSattelite); i++)
                {
                    var checkedJewel = instance_find(objJewelManSattelite,i);
                    if(checkedJewel.parent == self)
                    {
                        checkedJewel.canTakeShots = -1;
                        if(checkedJewel.phase == 0) check = 1;
                    }
                }
                if(check)
                {
                    turnCount = 0;
                    animTimer = 0;
                    timer = -5;
                    phase = 1;
                    xspeed = 0;
                    image_index = 6;
                    jewelPattern = choose(0,1);
                }
                else
                {
                    turnCount = 2;
                }
            }
            else
            {
                image_index = 5;
                xspeed = xSpeedStore;
                animTimer = 0;
            }
        }
        else if(phase == 1) // fire jewels
        {
            timer++;
            if(timer &lt; 0)
            {
                image_index = 6;
            }
            else if(timer &lt; 10)
            {
                image_index = 7;
            }
            else if(timer == 10)
            {
                image_index = 8;
                playSFX(sfxJewelSatellite);
            }
            else if(timer &lt; 13)
            {
                image_index = 9;
            }
            else if(timer &lt; 16)
            {
                image_index = 10;
            }
            else if(timer &lt; 19)
            {
                image_index = 11;
            }
            else if(timer &lt; 22)
            {
                image_index = 12;
            }
            else if(timer &lt; 30)
            {
                image_index = 7;
            }
            else if(timer == 30)
            {
                image_index = 8;
            }
            else if(timer &lt; 33)
            {
                image_index = 9;
            }
            else if(timer &lt; 36)
            {
                image_index = 10;
            }
            else if(timer &lt; 39)
            {
                image_index = 11;
            }
            else if(timer &lt; 42)
            {
                image_index = 12;
            }
            else if(timer &lt; 50)
            {
                image_index = 7;
            }
            else if(timer == 50)
            {
                image_index = 8;
            }
            else if(timer &lt; 53)
            {
                image_index = 9;
            }
            else if(timer &lt; 56)
            {
                image_index = 10;
            }
            else if(timer &lt; 59)
            {
                image_index = 11;
            }
            else if(timer &lt; 62)
            {
                image_index = 12;
            }
            else if(timer &lt; 70)
            {
                image_index = 7;
            }
            else if(timer == 70)
            {
                image_index = 8;
            }
            else if(timer &lt; 73)
            {
                image_index = 9;
            }
            else if(timer &lt; 76)
            {
                image_index = 10;
            }
            else if(timer &lt; 79)
            {
                image_index = 11;
            }
            else if(timer &lt; 82)
            {
                image_index = 12;
            }
            else if(timer &lt; 90)
            {
                image_index = 7;
            }
            else if(timer == 90)
            {
                image_index = 8;
            }
            else if(timer &lt; 93)
            {
                image_index = 9;
            }
            else if(timer &lt; 96)
            {
                image_index = 10;
            }
            else if(timer &lt; 99)
            {
                image_index = 11;
            }
            else if(timer &lt; 100)
            {
                image_index = 12;
            }
            else
            {
                image_index = 0;
                if(timer &gt;= 141)
                {
                    timer = 0;
                    phase = 0;
                }
            }
            
            if(jewelPattern)
            {
                if(timer == 40)
                {
                    with(objJewelManSattelite)
                    {
                        if(parent == other &amp;&amp; phase == 0 &amp;&amp; myID == 0)
                        {
                            timer = 0;
                            phase = 1;
                            yDest = other.y-4*other.image_yscale;
                            image_xscale = other.image_xscale
                        }
                    }
                }
                else if(timer == 50)
                {
                    with(objJewelManSattelite)
                    {
                        if(parent == other &amp;&amp; phase == 0 &amp;&amp; myID == 1)
                        {
                            timer = 0;
                            phase = 1;
                            yDest = other.y-8*other.image_yscale;
                            image_xscale = other.image_xscale
                        }
                    }
                }
                else if(timer == 70)
                {
                    with(objJewelManSattelite)
                    {
                        if(parent == other &amp;&amp; phase == 0 &amp;&amp; myID == 2)
                        {
                            timer = 0;
                            phase = 1;
                            yDest = other.y-4*other.image_yscale;
                            image_xscale = other.image_xscale
                        }
                    }
                }
                else if(timer == 80)
                {
                    with(objJewelManSattelite)
                    {
                        if(parent == other &amp;&amp; phase == 0 &amp;&amp; myID == 3)
                        {
                            timer = 0;
                            phase = 1;
                            yDest = other.y-8*other.image_yscale;
                            image_xscale = other.image_xscale
                        }
                    }
                }
            }
            else
            {
                if(timer == 45)
                {
                    with(objJewelManSattelite)
                    {
                        if(parent == other &amp;&amp; phase == 0 &amp;&amp; myID == 0)
                        {
                            timer = 0;
                            phase = 1;
                            yDest = other.y-40*other.image_yscale;
                            image_xscale = other.image_xscale
                        }
                    }
                }
                else if(timer == 50)
                {
                    with(objJewelManSattelite)
                    {
                        if(parent == other &amp;&amp; phase == 0 &amp;&amp; myID == 1)
                        {
                            timer = 0;
                            phase = 1;
                            yDest = other.y+8*other.image_yscale;
                            image_xscale = other.image_xscale
                        }
                    }
                }
                else if(timer == 70)
                {
                    with(objJewelManSattelite)
                    {
                        if(parent == other &amp;&amp; phase == 0 &amp;&amp; myID == 2)
                        {
                            timer = 0;
                            phase = 1;
                            yDest = other.y+8*other.image_yscale;
                            image_xscale = other.image_xscale
                        }
                    }
                }
                else if(timer == 80)
                {
                    with(objJewelManSattelite)
                    {
                        if(parent == other &amp;&amp; phase == 0 &amp;&amp; myID == 3)
                        {
                            timer = 0;
                            phase = 1;
                            yDest = other.y-8*other.image_yscale;
                            image_xscale = other.image_xscale
                        }
                    }
                }
            }
        }
        
        if(refillJewels)
        {
            if(refillJewels == 1)
            {
                playSFX(sfxJewelSatellite);
                var jewel = instance_create(x,y,objJewelManSattelite);
                jewel.initAngle = 180;
                jewel.parent = self;
                jewel.myID = 0;
                refillJewels++;
            }
            else if(refillJewels == 16)
            {
                var jewel = instance_create(x,y,objJewelManSattelite);
                for(var i = 0; i &lt; instance_number(objJewelManSattelite); i++)
                {
                    var checkedJewel = instance_find(objJewelManSattelite,i);
                    if(checkedJewel.parent == self)
                    {
                        jewel.timer = checkedJewel.timer;
                        i = instance_number(objJewelManSattelite);
                    }
                }
                jewel.initAngle = 270;
                jewel.parent = self;
                jewel.myID = 1;
                refillJewels++;
            }
            else if(refillJewels == 31)
            {
                var jewel = instance_create(x,y,objJewelManSattelite);
                for(var i = 0; i &lt; instance_number(objJewelManSattelite); i++)
                {
                    var checkedJewel = instance_find(objJewelManSattelite,i);
                    if(checkedJewel.parent == self)
                    {
                        jewel.timer = checkedJewel.timer;
                        i = instance_number(objJewelManSattelite);
                    }
                }
                jewel.initAngle = 0;
                jewel.parent = self;
                jewel.myID = 2;
                refillJewels++;
            }
            else if(refillJewels == 46)
            {
                var jewel = instance_create(x,y,objJewelManSattelite);
                for(var i = 0; i &lt; instance_number(objJewelManSattelite); i++)
                {
                    var checkedJewel = instance_find(objJewelManSattelite,i);
                    if(checkedJewel.parent == self)
                    {
                        jewel.timer = checkedJewel.timer;
                        i = instance_number(objJewelManSattelite);
                    }
                }
                jewel.initAngle = 90;
                jewel.parent = self;
                jewel.myID = 3;
                refillJewels++;
            }
            else
            {
                refillJewels++;
                if(refillJewels &gt; 46) refillJewels = 0;
            }
        }
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

with (objJewelManSattelite) 
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
