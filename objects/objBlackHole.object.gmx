<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBlackHole</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 2;
attackDelay = 8;

penetrate = 3;
pierces = 2;

despawnRange = -1;

reflectable = 0;

image_speed = 0;
imgTimer = 0;
imgSpeed = 4;
imgLoopTimes = 2;

xspeed = 0;
yspeed = 0;
grav = 0;
blockCollision = 0;

summonLock = 0;

flashLength = 8;

ignoreEntities[0] = prtBoss;
ignoreEntities[1] = objSuperArmBlock;

type = 0; //0: black hole, 1: projectile

xs = 0;
ys = 0;

angle = 0;
angleSpeed = 10;

radius = 0;
radiusSpeed = 1;
radiusEnd = 256;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

with(parent){
                    
    other.summonLock = lockPoolRelease(other.summonLock);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; canDamage){
    
    if (imgTimer mod imgSpeed == 0){
    
        if (image_index &gt;= image_number) image_index = 0;
        else image_index++;
    
    }

    switch(type){
    
        case 0:
        
            if (instance_exists(parent)){
            
                if (!global.timeStopped){
                
                    global.timeStopped = true;
                    with(parent){
                    
                        other.summonLock = lockPoolLock(
                            PL_LOCK_SHOOT,
                            PL_LOCK_MOVE,
                            PL_LOCK_AERIAL,
                            PL_LOCK_SLIDE,
                            PL_LOCK_CLIMB,
                            PL_LOCK_CHARGE,
                            PL_LOCK_JUMP,
                            PL_LOCK_GRAVITY,
                            PL_LOCK_TURN,
                            PL_LOCK_PAUSE);
                        other.summonLock.targetInstance = other.parent;
                            
                        xspeed = 0;
                        yspeed = 0;
                        shootTimer = 1;
                    
                    }
                    
                    with (prtEntity){
                    
                        var check = true;
                        for (var i = 0; i &lt; array_length_1d(other.ignoreEntities); i++){
                        
                            if (object_index == other.ignoreEntities[i]){
                            
                                check = false;
                            
                            }
                        
                        }
                    
                        if (!dead &amp;&amp; canHit &amp;&amp; global.factionStance[other.faction, faction] &amp;&amp; healthpointsStart &lt;= other.contactDamage){
                        
                            var a = instance_create(x, y, objBlackHoleVictim);
                            a.image_xscale = image_xscale;
                            a.image_yscale = image_yscale;
                            a.depth = depth;
                            a.sprite_index = sprite_index;
                            a.image_index = image_index;
                            a.image_speed = 0;
                            
                            a.time = other.imgSpeed*other.image_number*other.imgLoopTimes;
                            a.xs = x;
                            a.ys = y;
                            a.xxs = other.x;
                            a.yys = other.y;
                            
                            event_user(EV_DEATH);
                        
                        }
                    
                    }
                    
                    with (prtEnemyProjectile){
                    
                        if (!dead &amp;&amp; reflectable != 0){
                        
                            var a = instance_create(x, y, objBlackHoleVictim);
                            a.image_xscale = image_xscale;
                            a.image_yscale = image_yscale;
                            a.depth = depth;
                            a.sprite_index = sprite_index;
                            a.image_index = image_index;
                            a.image_speed = 0;
                            
                            a.time = other.imgSpeed*other.image_number*other.imgLoopTimes;
                            a.xs = x;
                            a.ys = y;
                            a.xxs = other.x;
                            a.yys = other.y;
                            
                            event_user(EV_DEATH);
                        
                        }
                    
                    }
                    
                    with(prtBoss){
                    
                        if (!dead &amp;&amp; canHit &amp;&amp; global.factionStance[other.faction, faction] &amp;&amp; !iFrames){
                        
                            with(other){
                            
                                entityEntityCollision();
                            
                            }
                        
                        }
                    
                    }
                    
                    contactDamage = 0;
                
                }
                else{
                
                    imgTimer++;
                    
                    if (imgTimer &gt;= imgSpeed*image_number*imgLoopTimes){
                    
                        event_user(EV_DEATH);
                        with(parent){
                    
                            other.summonLock = lockPoolRelease(other.summonLock);
                        
                        }
                        
                        var num = 4;
                        for (var i = 0; i &lt; num; i++){
                        
                            var a = instance_create(x, y, objBlackHole);
                            a.type = 1;
                            a.xs = x;
                            a.ys = y;
                            a.radius = abs(sprite_width)/2;
                            a.angle = 360/num * i;
                            a.sprite_index = sprBlackHoleBullet;
                            a.image_index = (i mod 2 == 0)*2;
                        
                        }
                        
                        global.timeStopped = false;
                    
                    }
                
                }
                
            }
        
        break;
        
        case 1:
        
            if (entityCanStep()){
            
                x = xs + cos(degtorad(angle))*radius;
                y = ys - sin(degtorad(angle))*radius;
                
                angle += angleSpeed;
                radius += radiusSpeed;
                
                if (radius &gt; radiusEnd){
                
                    event_user(EV_DEATH);
                
                }
            
            }
        
        break;
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT)){

    var a = fireWeapon(0, 0, objBlackHole, 1, 4, 0, 0);
    if (a){
        
        a.y = y - image_yscale*32;
        a.type = 0;
        playSFX(sfxCentaurFlash);
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("BLACK HOLE", global.nesPalette[8], global.nesPalette[26], sprWeaponIconsBlackHole);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead){

    if (type == 0){
    
        if (imgTimer mod 2 == 0 &amp;&amp; imgTimer &lt;= flashLength){
        
            draw_set_blend_mode_ext(bm_inv_dest_color, bm_inv_src_color);
            draw_sprite_ext(sprDot, 0, view_xview, view_yview, view_wview, view_hview, 0, c_white, 1);
            draw_set_blend_mode(bm_normal);
            
        }
    
    }

}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
