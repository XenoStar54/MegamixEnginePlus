<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMirrorBusterGB</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Mirror Buster changed slightly between MMGBI and MM10, but implementing the MMGBI style
// for such a diverse set of projectiles present in the engine was infeasible. This variant
// instead spawns three projectiles in a spread when something is reflected to add some flavor.

contactDamage = 2;
attackDelay = 8;

canHit = false;
canDamage = false; //mirror buster doesn't actually do damage

penetrate = 1;
pierces = 2;

blockCollision = 0;
grav = 0;
xspeed = 0;
yspeed = 0;

image_speed = 0;
timer = 0;
isBullet = false;
if(!isBullet)
{
    imgSpeed = 4;
}
else
{
    imgSpeed = 0;
    image_speed = 0;
}
    
despawnRange = 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!isBullet &amp;&amp; instance_exists(parent)){
    if (!global.frozen){
        timer++;
        if (timer mod imgSpeed == 0) image_index = (image_index == 0);
        
        if (instance_place(x, y, prtEnemyProjectile)){
            with (instance_place(x, y, prtEnemyProjectile)){
                var mirrorCheck = (object_index != objHarmfulExplosion &amp;&amp; reflectable);
                with(objMirrorBusterGB){
                    if (isBullet){
                        other.mirrorCheck = false;
                    }
                }
                if (mirrorCheck){
                    event_user(EV_DEATH);
                    // straight bullet
                    a = instance_create(other.x, other.y, objMirrorBusterGB);
                    a.xspeed = other.image_xscale*6;
                    a.image_xscale = other.image_xscale;
                    a.sprite_index = sprMirrorBusterBulletGB;
                    a.image_index = 1;
                    a.image_speed = 0;
                    a.imgSpeed = 0;
                    a.isBullet = true;
                    a.canDamage = true;
                    // diagonal up
                    ab = instance_create(other.x, other.y, objMirrorBusterGB);
                    ab.xspeed = other.image_xscale*6;
                    ab.yspeed = -6;
                    ab.image_xscale = other.image_xscale;
                    ab.sprite_index = sprMirrorBusterBulletGB;
                    ab.image_index = 0;
                    ab.image_speed = 0;
                    ab.imgSpeed = 0;
                    ab.isBullet = true;
                    ab.canDamage = true;
                    // diagonal down
                    ac = instance_create(other.x, other.y, objMirrorBusterGB);
                    ac.xspeed = other.image_xscale*6;
                    ac.yspeed = 6;
                    ac.image_xscale = other.image_xscale;
                    ac.sprite_index = sprMirrorBusterBulletGB;
                    ac.image_index = 2;
                    ac.image_speed = 0;
                    ac.imgSpeed = 0;
                    ac.isBullet = true;
                    ac.canDamage = true;
                    playSFX(sfxReflectGBI);
                    with(other){
                        global.ammo[playerID, global.weapon[parent.playerID]] = max(global.ammo[playerID, global.weapon[parent.playerID]] - 2, 0);
                    }
                }
                else{
                    event_user(EV_DEATH);
                }
            }
        }
        //parent stuff
            if (parent.isShoot &amp;&amp; !parent.isHit){
                with(parent){
                    other.x = x + image_xscale*20 - image_xscale*4*(!ground);
                    other.y = y + image_yscale*4 - image_yscale*4*(!ground);
                    other.image_xscale = image_xscale;
                    other.image_yscale = image_yscale;
                }
            }
            else{
                instance_destroy();
                exit;
            }
    }
}
else if (isBullet){
    if (!global.frozen){
        imgSpeed = 0;
        image_speed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!playerIsLocked(PL_LOCK_SHOOT) &amp;&amp; global.ammo[playerID, global.weapon[playerID]] &gt; 0){
    if (!instance_exists(objMirrorBusterGB)){
        if (global.keyShootPressed[playerID]){
            a = fireWeapon(20, 0, objMirrorBusterGB, 1, 0, 2, 0);
        }
    }
    else{
        if (global.keyShoot[playerID] &amp;&amp; !isHit){
            isShoot = true;
            shootTimer = 12;
        }
        else{
            isShoot = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("MIRROR BUSTER GB", global.nesPalette[15], global.nesPalette[34], sprWeaponIconsMirrorBusterGB);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isBullet){
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead &amp;&amp; instance_exists(parent)){
    draw_sprite_ext(sprite_index, floor(image_index), x, y, image_xscale, image_yscale, image_angle, global.secondaryCol[parent.playerID], image_alpha);
    draw_sprite_ext(sprite_index, floor(image_index) + floor(image_number/2), x, y, image_xscale, image_yscale, image_angle, global.secondaryCol[parent.playerID], image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
