<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTorchManDOSWelding</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

blockCollision = false;
contactDamage = 0;
grav = 0;
timerMax = 60;
spawnTimer = 6;
despawnTimer = 6;
image_speed = 0;
weldLock = -1;
weldEscape = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(weldLock != -1 &amp;&amp; target)
{
    with(target) other.weldLock = lockPoolRelease(other.weldLock);
    weldLock = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    if(weldLock != -1 &amp;&amp; target)
    {
        target.spriteX = 13;
        if(target.iFrames &lt; 0) timerMax = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    if(spawnTimer)
    {
        spawnTimer--;
        if(spawnTimer &lt; 3) image_index = 1;
        else image_index = 0;
    }
    else if(!timerMax)
    {
        if(weldLock != -1 &amp;&amp; target)
        {
            with(target) other.weldLock = lockPoolRelease(other.weldLock);
            weldLock = -1;
        }
        despawnTimer--;
        if(despawnTimer &lt;= 0) instance_destroy();
        if(despawnTimer &lt; 3) image_index = 1;
        else image_index = 0;
    }
    else
    {
        image_index = 2;
        if(weldLock == -1)
        {
            timerMax--;
            if(target)
            {
                if(place_meeting(x,y,target))
                {
                    with(target)
                    {
                        var lock = lockPoolLock(PL_LOCK_MOVE, PL_LOCK_TURN,PL_LOCK_JUMP,PL_LOCK_CHARGE,PL_LOCK_SHOOT,PL_LOCK_SLIDE);
                        lock.targetInstance = id
                        other.weldLock = lock
                        xspeed = 0;
                    }
                }
            }
        }
        else if(!instance_exists(objTorchManDOS))
        {
            timerMax--;
        }
        
        with(objMegaman)
        {
            if(global.keyRightPressed[playerID] || global.keyLeftPressed[playerID])
            {
                with(other)
                {
                    weldEscape++;
                }
            }
        }
    
        if(weldEscape &gt;= 8)
        {
            timerMax = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
