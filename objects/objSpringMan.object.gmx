<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSpringIntro</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>sprSpringMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
pose = sprSpringPose
poseImgSpeed = 0.25
contactDamage = 6
phase = 0
timer = 0
magTimer = 420
magnatized = 0
ground = 0
startXspeed = 0

distanceFromWall = id.x
screenNumber = floor((distanceFromWall / view_wview))
roomMiddleOffset = ((screenNumber * 256) + 128)
finalXcordForMiddle = roomMiddleOffset

leftMiddle = (finalXcordForMiddle - 24)
rightMiddle = (finalXcordForMiddle + 24)
rndMiddle = 0
attempts = 0
punchID = 1203
magnetID = 1203

manualColors = true;

// Health Bar
healthBarPrimaryColor[1] = global.nesPalette[19];
healthBarSecondaryColor[1] = global.nesPalette[40];

music = "MM7Boss.nsf"
musicType = "VGM"
musicTrackNumber = 0
musicVolume = 1

// Damage Table
enemyDamageValue(objBusterShot, 1);
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);

// MM1
enemyDamageValue(objSuperArmBlockProjectile, 2);
enemyDamageValue(objSuperArmDebris, 2);
enemyDamageValue(objIceSlasher, 2);
enemyDamageValue(objThunderBeam, 0);

// MM2
enemyDamageValue(objMetalBlade, 2);

// MM3
enemyDamageValue(objNeedleCannon, 1);
enemyDamageValue(objMagnetMissile, 2);
enemyDamageValue(objGeminiLaser, 1);
enemyDamageValue(objHardKnuckle, 1);
enemyDamageValue(objTopSpin, 4);
enemyDamageValue(objSearchSnake, 1);
enemyDamageValue(objSparkShock, 0);
enemyDamageValue(objShadowBlade, 2);

// MM4
enemyDamageValue(objRainFlush, 1);
enemyDamageValue(objPharaohShot, 1); //Charge shot = 6

// MM5
enemyDamageValue(objPowerStone, 1);

// MM6
enemyDamageValue(objPlantBarrier, 1);

// MM7
enemyDamageValue(objSlashClaw, 4);

// MM8
enemyDamageValue(objHomingSniper, 1);

// MM9
enemyDamageValue(objConcreteShot, 0);
enemyDamageValue(objTornadoBlow, 1);
enemyDamageValue(objLaserTrident, 4);
enemyDamageValue(objJewelSatellite, 1);
enemyDamageValue(objHornetChaser, 1);
enemyDamageValue(objBlackHoleBomb, 1);

// MM10
enemyDamageValue(objTripleBlade, 2);
enemyDamageValue(objWaterShield, 1);
enemyDamageValue(objChillShot, 1);
enemyDamageValue(objChillSpikeLanded, 2);
enemyDamageValue(objThunderWool, 0);
enemyDamageValue(objWheelCutter, 4);
enemyDamageValue(objSolarBlaze, 1);

// MM11
enemyDamageValue(objBlockDropper, 1);

// MMI

// MMII
enemyDamageValue(objSakugarne, 1);

// MMIII

// MMIV

// MMV
enemyDamageValue(objSparkChaser, 0);
enemyDamageValue(objGrabBuster, 1);
enemyDamageValue(objBreakDash, 4);
enemyDamageValue(objSaltWater, 1);

// MM&amp;B
enemyDamageValue(objTenguBlade, 4);
enemyDamageValue(objTenguDash, 4);
enemyDamageValue(objTenguDisk, 4);
enemyDamageValue(objIceWall, 1);
enemyDamageValue(objMagicCard, 2);

// MM&amp;B2
enemyDamageValue(objFlameMixer, 1);

// Other
enemyDamageValue(objMagneticShockwave, 4);

// Utilities
enemyDamageValue(objWireAdapter, 2);
enemyDamageValue(objSuperArrow, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>magnatized = 0
alarm[0] = -1
if (!instance_exists(objSpringArm))
{
    for (var i = 0; i &lt; instance_number(objSpringArmLink); i++)
    {
        with (objSpringArmLink)
            instance_destroy()
    }
    with (objSpringArm)
        instance_destroy()
}
with (objSpringMini)
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (magnetID)
    instance_destroy()
audio_stop_sound(sfxSpringManMagnetized)
magnatized = 0
phase = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if entityCanStep()
{
    if (isFight == 1)
    {
        if(phase == 7 || phase == 8 || phase == 9 || phase == 10 || phase == 11 || phase == 12)
        grav = 0
        else
        grav = 0.25
        
        switch phase
        {
            case 0:
                sprite_index = sprSpringStanding
                image_speed = 0
                xspeed = 0
                calibrateDirection();
                timer = 0
                phase = 1
                break
            case 1:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 1
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 3
                else if (timer &gt;= 12)
                {
                    image_index = 4
                    xspeed = 0
                    timer = 0
                    phase = 2
                }
                break
            case 2:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                image_speed = 0
                if (timer == 0)
                {
                    yspeed = -8
                    playSFX(sfxSpringManJump)
                    if (x &gt;= finalXcordForMiddle)
                    {
                        if instance_exists(objMegaman)
                            startXspeed = arcCalcXspeed(yspeed, grav, x, y, rightMiddle, y)
                        else
                            startXspeed = (image_xscale * 2)
                    }
                    else if instance_exists(objMegaman)
                        startXspeed = arcCalcXspeed(yspeed, grav, x, y, leftMiddle, y)
                    else
                        startXspeed = (image_xscale * 2)
                }
                xspeed += startXspeed
                if (place_meeting((x + xspeed), y, objSolid))
                {
                    xspeed = 0
                    while (place_meeting(x, y, objSolid))
                        x -= image_xscale
                }
                timer += 1
                if (ground == 1 &amp;&amp; timer &gt;= 15)
                {
                    playSFX(sfxSpringManLand)
                    timer = 0
                    phase = 3
                }
                break
            case 3:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 3
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 1
                else if (timer &gt;= 12)
                {
                    image_index = 0
                    xspeed = 0
                    timer = 0
                    phase = 4
                }
                break
            case 4:
                sprite_index = sprSpringStanding
                image_speed = 0
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &gt;= 10)
                {
                    timer = 0
                    phase = 5
                }
                break
            case 5:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 1
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 3
                else if (timer &gt;= 12)
                {
                    image_index = 4
                    xspeed = 0
                    timer = 0
                    phase = 6
                }
                break
            case 6:
                sprite_index = sprSpringJump
                image_speed = 0
                if (timer == 0)
                {
                    yspeed = -8
                    playSFX(sfxSpringManJump)
                    if instance_exists(objMegaman)
                        startXspeed = arcCalcXspeed(yspeed, grav, x, y, finalXcordForMiddle, (y - 144))
                    else
                        startXspeed = (image_xscale * 2)
                }
                xspeed = startXspeed
                if (place_meeting((x + xspeed), y, objSolid))
                {
                    xspeed = 0
                    attempts++
                    while (place_meeting(x, y, objSolid))
                        x -= image_xscale
                }
                timer += 1
                if (x &gt; finalXcordForMiddle)
                    rndMiddle = floor(x)
                else if (x &lt; finalXcordForMiddle)
                    rndMiddle = ceil(x)
                if ((timer &gt;= 15 &amp;&amp; rndMiddle == finalXcordForMiddle) || attempts &gt; 150)
                {
                    timer = 0
                    phase = 7
                    yspeed = 0
                    xspeed = 0
                    attempts = 0
                }
                else if (timer &gt;= 15 &amp;&amp; ground == 1 &amp;&amp; rndMiddle != finalXcordForMiddle)
                {
                    timer = 0
                    phase = 3
                    yspeed = 0
                    xspeed = 0
                }
                break
            case 7:
                sprite_index = sprSpringJump
                image_index = 4
                image_speed = 0
                xspeed = 0
                yspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &gt;= 10)
                {
                    timer = 0
                    phase = 8
                }
                break
            case 8:
                sprite_index = sprSpringSpin
                image_speed = 0.25
                xspeed = 0
                yspeed = 0
                timer += 1
                if (timer &gt;= 30)
                {
                    timer = 0
                    phase = 9
                }
                break
            case 9:
                sprite_index = sprSpringArmShoot
                image_index = 0
                image_speed = 0
                xspeed = 0
                yspeed = 0
                if (timer == 0)
                {
                    playSFX(sfxSpringManShoot)
                    if (image_xscale == -1)
                    {
                        punchID = instance_create((x + 5), (y - 17), objSpringArm)
                    }
                    else
                    {
                        punchID = instance_create((x - 6), (y - 18), objSpringArm)
                    }
                }
                timer += 1
                if (!instance_exists(punchID))
                {
                    timer = 0
                    phase = 10
                }
                break
            case 10:
                sprite_index = sprSpringArmShoot
                image_index = 0
                image_speed = 0
                with (objSpringArmLink)
                instance_destroy()
                xspeed = 0
                yspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &gt;= 2)
                {
                    timer = 0
                    phase = 11
                }
                break
            case 11:
                sprite_index = sprSpringSpin
                image_speed = 0.25
                xspeed = 0
                yspeed = 0
                timer += 1
                if (timer &gt;= 30)
                {
                    timer = 0
                    phase = 12
                }
                break
            case 12:
                sprite_index = sprSpringArmShoot
                image_index = 0
                image_speed = 0
                xspeed = 0
                yspeed = 0
                if (timer == 0)
                {
                    playSFX(sfxSpringManShoot)
                    if (image_xscale == -1)
                    {
                        punchID = instance_create((x + 5), (y - 17), objSpringArm)
                    }
                    else
                    {
                        punchID = instance_create((x - 6), (y - 18), objSpringArm)
                    }
                }
                timer += 1
                if (!instance_exists(punchID))
                {
                    timer = 0
                    phase = 13
                }
                break
            case 13:
                sprite_index = sprSpringJump
                image_index = 4
                with (objSpringArmLink)
                instance_destroy()
                calibrateDirection();
                xspeed = 0
                timer += 1
                if (ground == 1 &amp;&amp; timer &gt;= 15)
                {
                    playSFX(sfxSpringManLand)
                    xspeed = 0
                    timer = 0
                    phase = 14
                }
                break
            case 14:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 3
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 1
                else if (timer &gt;= 12)
                {
                    image_index = 0
                    xspeed = 0
                    timer = 0
                    if (instance_number(objSpringMini) == 0)
                        phase = 15
                    else
                        phase = 16
                }
                break
            case 15:
                sprite_index = sprSpringSpringShoot
                calibrateDirection();
                image_speed = 0.125
                xspeed = 0
                yspeed = 0
                timer += 1
                if (timer == 20)
                {
                    var leftSpring = instance_create(x, y, objSpringMini);
                    leftSpring.dir = 1
                    var rightSpring = instance_create(x, y, objSpringMini);
                    rightSpring.dir = -1
                }
                else if (timer &gt;= 60)
                {
                    jmpCntr = 0
                    timer = 0
                    phase = 16
                }
                break
            case 16:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 1
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 3
                else if (timer &gt;= 12)
                {
                    image_index = 4
                    xspeed = 0
                    timer = 0
                    phase = 17
                }
                break
            case 17:
                sprite_index = sprSpringJump
                calibrateDirection();
                image_speed = 0
                if (timer == 0)
                {
                    yspeed = -8
                    playSFX(sfxSpringManJump)
                    if instance_exists(objMegaman)
                    {
                        if (x &gt;= objMegaman.x)
                            startXspeed = arcCalcXspeed(yspeed, grav, x, y, (objMegaman.x + 32), y)
                        else
                            startXspeed = arcCalcXspeed(yspeed, grav, x, y, (objMegaman.x - 32), y)
                    }
                    else
                        startXspeed = (image_xscale * 2)
                }
                xspeed = startXspeed
                if (place_meeting((x + xspeed), y, objSolid))
                {
                    xspeed = 0
                    while (place_meeting(x, y, objSolid))
                        x -= image_xscale
                }
                timer += 1
                if (ground == 1 &amp;&amp; timer &gt;= 15)
                {
                    playSFX(sfxSpringManLand)
                    xspeed = 0
                    timer = 0
                    phase = 18
                }
                break
            case 18:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 3
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 1
                else if (timer &gt;= 12)
                {
                    image_index = 0
                    xspeed = 0
                    timer = 0
                    phase = 19
                }
                break
            case 19:
                sprite_index = sprSpringStanding
                calibrateDirection();
                xspeed = 0
                timer += 1
                if (timer &gt;= 10)
                {
                    xspeed = 0
                    timer = 0
                    phase = 20
                }
                break
            case 20:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 1
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 3
                else if (timer &gt;= 12)
                {
                    image_index = 4
                    xspeed = 0
                    timer = 0
                    phase = 21
                }
                break
            case 21:
                sprite_index = sprSpringJump
                calibrateDirection();
                image_speed = 0
                if (timer == 0)
                {
                    yspeed = -8
                    playSFX(sfxSpringManJump)
                    if instance_exists(objMegaman)
                    {
                        if (x &gt;= objMegaman.x)
                            startXspeed = arcCalcXspeed(yspeed, grav, x, y, (objMegaman.x + 32), y)
                        else
                            startXspeed = arcCalcXspeed(yspeed, grav, x, y, (objMegaman.x - 32), y)
                    }
                    else
                        startXspeed = (image_xscale * 2)
                }
                xspeed = startXspeed
                if (place_meeting((x + xspeed), y, objSolid))
                {
                    xspeed = 0
                    while (place_meeting(x, y, objSolid))
                        x -= image_xscale
                }
                timer += 1
                if (ground == 1 &amp;&amp; timer &gt;= 15)
                {
                    playSFX(sfxSpringManLand)
                    xspeed = 0
                    timer = 0
                    phase = 22
                }
                break
            case 22:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 3
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 1
                else if (timer &gt;= 12)
                {
                    image_index = 0
                    xspeed = 0
                    timer = 0
                    phase = 23
                }
                break
            case 23:
                sprite_index = sprSpringStanding
                calibrateDirection();
                xspeed = 0
                timer += 1
                if (timer &gt;= 10)
                {
                    xspeed = 0
                    timer = 0
                    phase = 24
                }
                break
            case 24:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 1
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 3
                else if (timer &gt;= 12)
                {
                    image_index = 4
                    xspeed = 0
                    timer = 0
                    phase = 25
                }
                break
            case 25:
                sprite_index = sprSpringJump
                calibrateDirection();
                image_speed = 0
                if (timer == 0)
                {
                    yspeed = -8
                    playSFX(sfxSpringManJump)
                    if instance_exists(objMegaman)
                    {
                        if (x &gt;= objMegaman.x)
                            startXspeed = arcCalcXspeed(yspeed, grav, x, y, (objMegaman.x + 32), y)
                        else
                            startXspeed = arcCalcXspeed(yspeed, grav, x, y, (objMegaman.x - 32), y)
                    }
                    else
                        startXspeed = (image_xscale * 2)
                }
                xspeed = startXspeed
                if (place_meeting((x + xspeed), y, objSolid))
                {
                    xspeed = 0
                    while (place_meeting(x, y, objSolid))
                        x -= image_xscale
                }
                timer += 1
                if (ground == 1 &amp;&amp; timer &gt;= 15)
                {
                    playSFX(sfxSpringManLand)
                    xspeed = 0
                    timer = 0
                    phase = 26
                }
                break
            case 26:
                sprite_index = sprSpringJump
                xspeed = 0
                calibrateDirection();
                timer += 1
                if (timer &lt; 3)
                    image_index = 3
                else if (timer &lt; 6)
                    image_index = 2
                else if (timer &lt; 9)
                    image_index = 1
                else if (timer &gt;= 12)
                {
                    image_index = 0
                    xspeed = 0
                    timer = 0
                    phase = 27
                }
                break
            case 27:
                sprite_index = sprSpringStanding
                calibrateDirection();
                xspeed = 0
                timer += 1
                if (timer &gt;= 10)
                {
                    xspeed = 0
                    timer = 0
                    phase = 0
                }
                break
            case 28:
                sprite_index = sprSpringStanding
                image_index = 0
                image_speed = 0
                xspeed = 0
                timer = 0
                break
        }
        
    }
}
else
{
    image_speed = 0
    if (alarm[0] &gt;= 0)
        alarm[0] += 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objThunderBeam">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(15)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isFight == 1)
{
    phase = 28
    magnatized = 1
    if (instance_number(magnetID) &lt; 1)
    {
        magnetID = instance_create(x, y, objSpringMagnetic)
        magnetID.parentID = id
    }
    alarm[0] = magTimer
    with (objSpringArmLink)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(objMegaman))
{
    i = instance_create(objMegaman.x - 8, objMegaman.y - 8, objGravityFlipDown);
    with (i)
    {
        event_perform(ev_step, ev_step_normal);
        instance_destroy();
    }
}

with (objGravityShot)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
