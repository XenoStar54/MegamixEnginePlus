<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCompassConveyor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objMM2Conveyor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code:
// dir = 1/-1 (1 = right (default), -1 = left; optional)
// image_xscale = &lt;number&gt; - use editor for this! (the size of the conveyor belt, measured in blocks of 32x16 pixels; optional, default is 1
// spd = ; (how fast the conveyor belt pushes you)

event_inherited();

sprite_index = sprCompassConveyor;

canHit = false;

isSolid = 1;

blockCollision = 0;
grav = 0;

respawnRange = -1;
despawnRange = -1;

dir = 1;

spd = 1; // The speed the player moves at when standing on the conveyor belt

imgalarm = 0;
img = 0;

/*
if (!place_meeting(x - 4, y, object_index))
{
    while (place_meeting(x + 4, y, object_index))
    {
        with (instance_place(x + 4, y, object_index))
        {
            instance_destroy();
        }
        image_xscale += 1;
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; !dead)
{
    if (image_xscale - (floor(image_xscale)) &gt; 0)
    {
        image_xscale = ceil(image_xscale);
    }
    imgalarm += 1;
    if (imgalarm &gt;= 5)
    {
        imgalarm = 0;
        if (img == 2)
        {
            img = 0;
        }
        else
        {
            img += 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;

for (i = 0; i &lt; abs(image_xscale); i += 1)
{
    if (dir == 1)
    {
        draw_sprite(sprite_index, img, x + (i * 32), y);
    }
    else
    {
        draw_sprite(sprite_index, image_number - img mod image_number,
            x + (i * 32), y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
