<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprShadowBlade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 2;

penetrate = 0;
pierces = 0;

// Shadow Blade has a weird quirk where firing diagonally makes it go faster and the five directions form a square at the furthest points.
shadowBladeAim = 15;
shadowBladeSpeed = 5;

xspeed = 0;
yspeed = 0;
grav = 0;

original_x = x
original_y = y
boomerangTimer = 0

playSFX(sfxShadowBlade);

image_speed = 0.35;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    // boomerangTimer tells Shadow Blade to return after a certain amount of frames
    boomerangTimer++;
    
    if (canDamage)
    {
        if (boomerangTimer &lt; shadowBladeAim)
        {
            xspeed = cos(degtorad(dir)) * shadowBladeSpeed;
            yspeed = -sin(degtorad(dir)) * shadowBladeSpeed * sign(image_yscale); // The vertical speed was, for some reason, inverted, which is why I used a minus. Don't ask me what actually caused this behaviour
        }
        else
        {
            // reverse both speeds when timer is hit
            xspeed = -cos(degtorad(dir)) * shadowBladeSpeed;
            yspeed = sin(degtorad(dir)) * shadowBladeSpeed * sign(image_yscale);
         
            // when Shadow Blade reaches the position it was initially at, delete it.
            // you might be wondering why it checks for being less than and greater than rather than just equaling the original coordinates. This is to prevent glitchiness that prevents the blade from being deleted for reasons unknown
            if (x &gt; original_x - 1 and x &lt; original_x + 1 and y &gt; original_y - 1 and y &lt; original_y + 1)
            {
                instance_destroy();
            }          
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    i = fireWeapon(4, 0, objShadowBlade, 1, 0.5, 2, 1);
    if (instance_exists(i))
    {
        i.dir = 0;
        
        if (image_xscale &lt; 0)
        {
            i.dir += 180;
        }
        
        if (yDir != 0)
        {
            //there's a check for yDir here because Shadow Blade cannot be fired
            //downwards. yDir being less than zero ensures that only upwards angles
            //can be used, as negative y values are actually upwards in this engine
            if (yDir &lt; 0)
            {
                i.dir -= (yDir * 90) * image_xscale;
                if (xDir != 0)
                {
                    // this shadowbladeaim variable causes Shadow Blade to fire in a square, as in MM3.
                    i.shadowBladeAim = 15;
                    i.shadowBladeSpeed = 6.5;
                    i.dir += (yDir * 45) * image_xscale;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue("nature", 3);
specialDamageValue("flying", 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("SHADOW BLADE", global.nesPalette[17], global.nesPalette[44], sprWeaponIconsShadowBlade);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
