<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAcidSpinWheel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

canHit = 0;
canDamage = 0;
blockCollision = 0;
grav = 0;
bubbleTimer = 0;
despawnRange = -1;

spinTotal = 0;

//@cc: 0 = turns using image_angle; 1 = turns using image_index
imageMode = 0;

//@cc: spawns as many platforms as long this list is; omits entries with negative numbers
spawnPlatformAngle[0] = 0;

//@cc: decides direction and spin velocity in angles per frame; set to negative to spin clockwise
spinSpd = 4;

//@cc: how far away the platforms are from the center
radius = 28;

platformSprite = sprAcidSpinWheelPlatform;
platformDepth = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    spinTotal = (spinTotal+spinSpd+360) mod 360;
    
    if(imageMode) image_index = spinTotal*image_number/360;
    else image_angle = spinTotal;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_angle = 0;
image_index = 0;
spinTotal = 0;

with(objAcidSpinWheelPlatform) if(parent == other) instance_destroy();

for(var i = 0; i &lt; array_length_1d(spawnPlatformAngle); i++)
{
    if(spawnPlatformAngle[i] &gt;= 0)
    {
        var platform = instance_create(x+cos(degtorad(spinTotal+spawnPlatformAngle[i]))*radius,y-sin(degtorad(spinTotal+spawnPlatformAngle[i]))*radius,objAcidSpinWheelPlatform);
        platform.parent = self;
        platform.initAngle = spawnPlatformAngle[i];
        platform.depth = platformDepth;
        platform.sprite_index = platformSprite;
        platform.image_xscale = image_xscale;
        platform.image_yscale = image_yscale;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
