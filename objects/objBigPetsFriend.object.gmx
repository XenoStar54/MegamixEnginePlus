<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBigPetsFriend</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
grav = 0;
blockCollision = 0;
contactDamage = 2;
isSolid = 0;
phase = 0;
timer = 0;
itemDrop = -1;
canHit = true;
canDamage = true;
respawn = false;
despawnRange = -1;

image_speed = 1/7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    if(phase == 0) // fly upward
    {
        yspeed = -2*image_yscale;
        var nextPhaseCheck = false;
        if(image_yscale &gt; 0)
        {
            if(y &lt;= view_yview) nextPhaseCheck = true;
        }
        else
        {
            if(y &gt;= view_yview+view_hview) nextPhaseCheck = true;
        }
        if(nextPhaseCheck)
        {
            x += irandom_range(1,6)*32*image_xscale;
            y -= yspeed;
            yspeed = 0;
            phase = 1;
            timer = 0;
            var rng = choose(-1,1);
            with(instance_create(x + rng*irandom_range(1,6)*32*image_xscale,y,objBigPetsFriend))
            {
                image_xscale = other.image_xscale;
                image_yscale = other.image_yscale;
                phase = 1;
                timer = 0;
                despawnRange = 4;
                image_index = other.image_index;
            }
        }
    }
    else if(phase == 1) // fall
    {
        if(insideView()) despawnRange = 4;
        yspeed = 1.5*image_yscale;
        timer++;
        if(timer &lt;= 20) xspeed = 1.5*image_xscale;
        else
        {
            xspeed = -1.5*image_xscale;
            if(timer &gt; 40) timer = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
