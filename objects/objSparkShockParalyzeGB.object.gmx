<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSparkShockParalyze</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEffect</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

despawn = false;

image_speed = 0.5;

countdownToDestruction = 180;
plzTarget = noone;
wasReplaced = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    if (instance_exists(objSectionSwitcher))
    {
        instance_destroy();
        exit;
    }
    
    if (instance_exists(plzTarget))
    {
        // death scenarios
        
        // not in effect anymore
        if (plzTarget.dead)
        {
            instance_destroy();
            exit;
        }
        
        if (!plzTarget.canIce)
        {
            instance_destroy();
            exit;
        }
        
        // get replaced with more updated ones
        with (objSparkShockParalyzeGB)
        {
            if (other.id != id &amp;&amp; other.plzTarget == plzTarget)
            {
                if (other.countdownToDestruction &gt;= countdownToDestruction)
                {
                    instance_destroy();
                    exit;
                }
            }
        }
        
        // despawn timer
        countdownToDestruction--;
        if (countdownToDestruction &lt;= 0)
        {
            instance_destroy();
            exit;
        }
        
        // behavior
        
        // center to target
        with (plzTarget)
        {
            other.x = bboxGetXCenter();
            other.y = bboxGetYCenter();
        }
        
        // spread / replace
        if (!wasReplaced)
        {
            var og = id;
            with (plzTarget)
            {
                // check collision
                var enemyList = collisionRectangleList(bbox_left, bbox_top, bbox_right, bbox_bottom, prtEntity, false, true);
                if (enemyList &lt; 0)
                {
                    // try to collide with the paralyze sprite instead in case it's bigger
                    var preSprite = sprite_index;
                    sprite_index = og.sprite_index;
                    enemy = collisionRectangleList(bbox_left, bbox_top, bbox_right, bbox_bottom, prtEntity, false, true);
                    sprite_index = preSprite;
                }
                
                if (enemyList &gt;= 0)
                {
                    for (var q = 0; q &lt; ds_list_size(enemyList); q++)
                    {
                        var found = false;
                        
                        var enemy = ds_list_find_value(enemyList, q);
                        if (instance_exists(enemy) &amp;&amp; enemy != og.plzTarget)
                        {
                            with (other) // objSparkShockParalyzeGB
                            {
                                // check if they're already paralyzed
                                var isParalyzed = false;
                                with (objSparkShockParalyzeGB)
                                {
                                    if (instance_exists(plzTarget))
                                    {
                                        if (plzTarget == enemy)
                                        {
                                            isParalyzed = true;
                                        }
                                    }
                                }
                                
                                if (!isParalyzed)
                                {
                                    // try to apply shock
                                    var spark = instance_create(enemy.x, enemy.y, objSparkShockGB);
                                    spark.sprite_index = sprite_index;
                                    
                                    with (enemy)
                                    {
                                        // prtEntity
                                        
                                        if (!dead &amp;&amp; iFrames == 0 &amp;&amp; canHit
                                            &amp;&amp; global.factionStance[spark.faction, faction]
                                            &amp;&amp; hitTimer &gt;= spark.attackDelay
                                            &amp;&amp; place_meeting(x, y, spark))
                                        {
                                            var preHealth = healthpoints;
                                            healthpoints = 999999; // don't kill them, only stun
                                            
                                            with (spark)
                                            {
                                                entityEntityCollision(-1);
                                            }
                                            
                                            healthpoints = preHealth;
                                            iFrames = 0;
                                            stopSFX(sfxEnemyHit);
                                            stopSFX(sfxReflect);
                                        }
                                    }
                                    
                                    // customize the stun effect
                                    with (objSparkShockParalyzeGB)
                                    {
                                        if (instance_exists(plzTarget))
                                        {
                                            if (plzTarget == enemy.id)
                                            {
                                                found = true;
                                                
                                                // make the time they're stunned for matches the stun time we have left
                                                countdownToDestruction = og.countdownToDestruction;
                                                plzTarget.iceTimer = og.countdownToDestruction;
                                            }
                                        }
                                    }
                                    
                                    if (!found)
                                    {
                                        stopSFX(sfxSparkShock);
                                    }
                                    
                                    // cleanup
                                    with (spark)
                                    {
                                        instance_destroy();
                                    }
                                }
                            }
                        }
                    }
                    
                    // cleaup
                    if (ds_exists(enemyList, ds_type_list))
                    {
                        ds_list_destroy(enemyList);
                    }
                }
            }
        }
        else
        {
            // stall destruction so our target can't get re-paralyzed immediately
            visible = false;
        }
    }
    else
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
