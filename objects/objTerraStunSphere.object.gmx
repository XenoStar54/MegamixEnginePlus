<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTerraStunSphere</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

grav = 0;
blockCollision = 0;
contactDamage = 0;
itemDrop = -1;
canHit = false;
canDamage = false;

phase = 0;
timer = 0;

image_speed = 0.3;

radius = 0;
radiusSpd = 0.25;
targetRadius = 16;
initAngle = 0;
spinTimer = 0;
period = 60;
hookX = x;
hookY = y;
xs = 0;
ys = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    x = hookX + cos(degtorad(initAngle) - 2*pi*spinTimer/period)*radius*image_xscale;
    y = hookY - sin(degtorad(initAngle) - 2*pi*spinTimer/period)*radius*image_yscale;
    spinTimer++;
    if(radius &lt; targetRadius) radius += radiusSpd;
    if(phase == 0)
    {
        targetRadius = 16;
        timer++;
        xs = 0;
        ys = 0;
        if(timer &gt; 94) phase++;
    }
    else
    {
        targetRadius = 24;
        xs = 1.5*image_xscale;
        ys = 0;
    }
    hookX += xs;
    hookY += ys;
    
    if(instance_exists(target) &amp;&amp; target.object_index == objMegaman &amp;&amp; place_meeting(x,y,target) &amp;&amp; !target.isFrozen &amp;&amp; target.iFrames == 0) with(target) // no stun when invincible pls
    {
        freezeTimer = 600;
        isFrozen = 1;
        xspeed = 0;
        yspeed = 0;
        playerHandleSprites('Normal');
        frozenPalettePrimary = c_white;
        frozenPaletteSecondary = c_white;
        frozenPaletteOutline = c_black;
        playerPalette();
        playSFX(sfxTimeStopper);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
