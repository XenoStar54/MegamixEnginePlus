<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprIntruderEliminator</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 0;
contactDamage = 2;
canDamage = 0;
shiftVisible = 3;
myBullets = 0;
maxBullets = 5;
myOwner = noone;
mahLazer = noone;
latch = 0;

forceReload = 0;

grav = 0;
blockCollision = 0;

bulletTimer = 0;
reloadTimer = 0;

despawnRange = -1;
signalManuShot = 0;

laserLockout = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(parent) &amp;&amp; !canDamage &amp;&amp; myOwner == noone)
{
    parent.chargeTimer = 0;
    parent.initChargeTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(!canDamage)
{
    if(instance_exists(parent))
    {
        x = parent.x;
        y = parent.y - 40*image_yscale;
        image_xscale = parent.image_xscale;
        image_yscale = parent.image_yscale;
    }
    else
    {
        instance_destroy();
        exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    if(!canDamage)
    {
        if(!latch) latch = 1;
        if(instance_exists(parent))
        {
            x = parent.x;
            y = parent.y - 40*image_yscale;
            image_xscale = parent.image_xscale;
            image_yscale = parent.image_yscale;
        }
        else
        {
            instance_destroy();
            exit;
        }
        
        if(laserLockout)
        {
            if(!instance_exists(mahLazer))
            {
                laserLockout = 0;
            }
        }
        else
        {
            if(!forceReload)
            {
                if(myBullets &lt; maxBullets)
                {
                    if(bulletTimer == 0)
                    {
                        if(target)
                        {
                            event_user(0);
                            reloadTimer = 0;
                            bulletTimer++;
                        }
                    }
                    else
                    {
                        bulletTimer++;
                        if(bulletTimer &gt;= 3) bulletTimer = 0;
                    }
                    
                    if(myBullets &gt; 0)
                    {
                        reloadTimer++;
                        if(reloadTimer &gt; 20)
                        {
                            if(reloadTimer mod 10 == 0) myBullets--;
                        }
                    }
                    else reloadTimer = 0;
                }
                else
                {
                    forceReload = 1;
                    bulletTimer = 0;
                }
            }
            else
            {
                if(myBullets &gt; 0)
                {
                    reloadTimer++;
                    if(reloadTimer mod 5 == 0) myBullets--;
                }
                else forceReload = 0;
            }
            
            if(global.ammo[playerID,global.weapon[playerID]] &lt;= 0)
            {
                global.ammo[playerID,global.weapon[playerID]] = 0;
                instance_destroy();
            }
        }
    }
    else
    {
        if(insideView()) despawnRange = 8;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// swap to a new color every time you change weapons
if(weaponIcon &gt;= 31)
{
    var primCol = global.nesPalette[choose(33,28,36,30,20,32,18)];
    global.weaponPrimaryColor[global.weapon[playerID]] = primCol;
    global.primaryCol[playerID] = primCol;
}


var chargeTime = 57;
var initChargeTime = 20;

var storePrimaryCol = global.primaryCol[playerID];
var storeSecondaryCol = global.secondaryCol[playerID];

var mine = noone;
with(objIntruderEliminator)
{
    if(parent == other &amp;&amp; !canDamage) mine = self;
}

if(!playerIsLocked(PL_LOCK_SHOOT) &amp;&amp; global.keyShootPressed[playerID] &amp;&amp; global.ammo[playerID,global.weapon[playerID]] &gt; 0)
{
    if(!mine) // spawn the sentry
    {
        i = fireWeapon(0,0,objIntruderEliminator,99,0,2,0);
        if(i)
        {
            i.x = x;
            i.y = y-40*image_yscale;
            playSFX(sfxTimeStopper);
        }
    }
}
    if(mine &amp;&amp; mine.latch) // manu fire
    {
        // charge; normal and halfcharge shots will cause the single shots, but full charge spawns the beam
        if (1 &amp;&amp; global.keyShootPressed[playerID]
        &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT) &amp;&amp; chargeTimer == 0)
        {
            with(mine)
            {
                signalManuShot = 1;
                event_user(0);
            }
        }
        //////////////
        // Charging //
        //////////////
        if ((global.keyShoot[playerID] || (isSlide &amp;&amp; chargeTimer &gt; 0))
            &amp;&amp; !playerIsLocked(PL_LOCK_CHARGE))
        {
            if (!isShoot)
            {
                isCharge = true;
                
                if (!isSlide)
                {
                    initChargeTimer += 1;
                }
                
                if (initChargeTimer &gt;= initChargeTime)
                {
                    if (!chargeTimer)
                    {
                        playSFX(sfxCharging);
                    }
                    
                    chargeTimer++;
                    
                    if (chargeTimer &lt; chargeTime)
                    {
                        var chargeTimeDiv, chargeCol;
                        chargeTimeDiv = round(chargeTime / 3);
                        
                        if (chargeTimer &lt; chargeTimeDiv)
                        {
                            chargeCol = make_color_rgb(168, 0, 32); // Dark red
                        }
                        else if (chargeTimer &lt; chargeTimeDiv * 2)
                        {
                            chargeCol = make_color_rgb(228, 0, 88); // Red (dark pink)
                        }
                        else
                        {
                            chargeCol = make_color_rgb(248, 88, 152); // Light red (pink)
                        }
                        
                        if (chargeTimer mod 6 &gt;= 0 &amp;&amp; chargeTimer mod 6 &lt; 3)
                        {
                            global.outlineCol[playerID] = chargeCol;
                        }
                        else
                        {
                            global.outlineCol[playerID] = c_black;
                        }
                    }
                    else
                    {
                        if (chargeTimer == chargeTime)
                        {
                            audio_stop_sound(sfxCharging);
                            playSFX(sfxCharged);
                        }
                        if (!inked)
                        {
                            switch (floor(chargeTimer / 3 mod 3))
                            {
                                case 0: // Light blue helmet, black shirt, blue outline 
                                    global.primaryCol[playerID] = storeSecondaryCol;
                                    global.secondaryCol[playerID] = c_black;
                                    global.outlineCol[playerID] = storePrimaryCol;
                                    break;
                                case 1: // Black helmet, blue shirt, light blue outline 
                                    global.primaryCol[playerID] = c_black;
                                    global.secondaryCol[playerID] = storePrimaryCol;
                                    global.outlineCol[playerID] = storeSecondaryCol;
                                    break;
                                case 2: // Blue helmet, light blue shirt, blue outline 
                                    global.primaryCol[playerID] = storePrimaryCol;
                                    global.secondaryCol[playerID] = storeSecondaryCol;
                                    global.outlineCol[playerID] = c_black;
                                    break;
                            }
                        }
                    }
                }
            }
        }
        else // Release the charge shot
        {
            if (!playerIsLocked(PL_LOCK_SHOOT) &amp;&amp; chargeTimer != 0 &amp;&amp; !isSlide)
            {
                /////////////////////
                // ACTUAL SHOOTING //
                /////////////////////
                
                if (chargeTimer &lt; chargeTime) // Half charge
                {
                    with(mine)
                    {
                        signalManuShot = 1;
                        event_user(0);
                    }
                }
                else // Full charge
                {
                    with(mine)
                    {
                        event_user(1);
                    }
                }
                
                // Reset all charging stuff
                chargeTimer = 0;
                initChargeTimer = 0;
                audio_stop_sound(sfxCharged);
                audio_stop_sound(sfxCharging);
                playerPalette(); // Reset the colors
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var primCol = global.nesPalette[choose(33,28,36,30,20,32,18)];
var secCol = global.nesPalette[26];
weaponSetup("INTRUDER ELIMINATOR",primCol,secCol,sprWeaponIconsIntruderEliminator);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// when damage dealt successfully, decrement ammo
global.ammo[playerID,global.weapon[playerID]]--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
instance_create(x,y,objExplosion);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// FAIRIN MAH LAZER
if(!laserLockout &amp;&amp; !canDamage)
{
    laserLockout = 1;
    global.ammo[playerID,global.weapon[playerID]] -= 3;
    var angle = point_direction(0,0,image_xscale,0);
    if(instance_exists(target))
    {
        angle = point_direction(x,y,bboxGetXCenterObject(target),bboxGetYCenterObject(target));
    }
    if(instance_exists(parent))
    {
        if(!(parent.xDir == 0 &amp;&amp; parent.yDir == 0)) angle = point_direction(0,0,parent.xDir,parent.yDir);
    }
    var laser = instance_create(x,y,objIntruderEliminatorLaser);
    laser.image_angle = angle;
    laser.parent = parent;
    laser.playerID = playerID;
    laser.mySource = self;
    mahLazer = laser;
    myBullets = 0;
    reloadTimer = 0;
    bulletTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// fire
if(myBullets &lt; maxBullets &amp;&amp; !laserLockout &amp;&amp; !canDamage &amp;&amp; bulletTimer == 0)
{
    myBullets++;
    var bullet = instance_create(x,y,objIntruderEliminator);
    bullet.sprite_index = sprIntruderEliminatorBullet;
    bullet.canDamage = true;
    bullet.shiftVisible = 0;
    var angle = point_direction(0,0,image_xscale,0);
    if(instance_exists(target))
    {
        angle = point_direction(x,y,bboxGetXCenterObject(target),bboxGetYCenterObject(target));
    }
    if(instance_exists(parent) &amp;&amp; signalManuShot)
    {
        if(!(parent.xDir == 0 &amp;&amp; parent.yDir == 0)) angle = point_direction(0,0,parent.xDir,parent.yDir);
    }
    bullet.xspeed = cos(degtorad(angle))*8;
    bullet.yspeed = -sin(degtorad(angle))*8;
    bullet.parent = parent;
    bullet.playerID = playerID;
    bullet.myOwner = self;
    signalManuShot = 0;
    playSFX(sfxEnemyShootClassic);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _x = floor((x * global.screenScale) + .5) / global.screenScale;
var _y = floor((y * global.screenScale) + .5) / global.screenScale;
draw_sprite_ext(sprite_index,0,_x,_y,1,1,0,c_white,1);
draw_sprite_ext(sprite_index,1,_x,_y,1,1,0,global.primaryCol[playerID],1);
draw_sprite_ext(sprite_index,2,_x,_y,1,1,0,global.secondaryCol[playerID],1);
draw_sprite_ext(sprite_index,3,_x,_y,1,1,0,global.outlineCol[playerID],1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
