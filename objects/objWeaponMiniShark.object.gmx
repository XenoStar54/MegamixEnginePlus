<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWeaponMiniShark</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;
blockCollision = 1;
grav = 0;
isSolid = 2;

image_speed = 0.3;

penetrate = 1;
pierces = 0;

timer = 0;

spdShark = 1;
spdLaser = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    if(blockCollision) // is shark
    {
        xspeed = image_xscale*spdShark;
        if(ground)
        {
            if(checkSolid(image_xscale,0))
            {
                event_user(10);
            }
        }
        else
        {
            var waterCheck = instance_exists(objWater) &amp;&amp; place_meeting(x,y,objWater);
            var topWaterCheck = instance_exists(objWater) &amp;&amp; place_meeting(x,y+image_yscale,objWater) &amp;&amp; !waterCheck;
            if(waterCheck) grav = -0.4*image_yscale;
            else if(topWaterCheck) grav = 0;
            else
            {
                grav = 0.2*image_yscale;
                xspeed = 0;
            }
        }
    }
    else // is laser
    {
        xspeed = image_xscale*spdLaser;
        timer++;
        if(timer &lt; 4) image_index = 0;
        else if(timer &lt; 8) image_index = 1;
        else if(timer &lt; 12) image_index = 2;
        else
        {
            image_index = 1;
            timer = 4;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mine = noone;
with(objWeaponMiniShark)
{
    if(parent == other &amp;&amp; blockCollision) mine = self;
}

if(!playerIsLocked(PL_LOCK_SHOOT) &amp;&amp; global.keyShootPressed[playerID])
{
    if(!mine) // spawn the shark
    {
        i = fireWeapon(16,0,objWeaponMiniShark,5,1,2,0);
        if(i)
        {
            playSFX(sfxBuster);
        }
    }
    else // shoot the laser
    {
        i = fireWeapon(16,0,objWeaponMiniShark,5,1,1,0);
        if(i)
        {
            i.penetrate = 2;
            i.pierces = 2;
            i.grav = 0;
            i.blockCollision = 0;
            i.isSolid = 0;
            i.image_speed = 0;
            i.sprite_index = sprWeaponMiniSharkLaser;
            playSFX(sfxSharkLaser);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("MINI SHARK",global.nesPalette[52],global.nesPalette[40],sprWeaponIconsMiniShark);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(blockCollision)
{
    var blast = instance_create(x,y,objWeaponExplosion);
    blast.contactDamage = contactDamage;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(blockCollision) event_user(10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
