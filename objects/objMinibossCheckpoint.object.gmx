<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCheckpointField</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// checkpoint but it waits for every boss and miniboss to die before being active
// and when it is active, it will remove every boss and miniboss it sees

image_speed = 0;
activeCheck = false;
hasBeenOnScreen = false;

//@cc 0 = teleport land, 1 = teleport in, 2 = fall in, 3 = Jump in, 4 = stand there (set showDuringReady to true), 8 = Skull elevator
respawnAnimation = 0;

//@cc play the animation sequence while ready's being displayed
showDuringReady = false;

//@cc if Mega Man has to physically touch the checkpoint for it to work
isOnTouch = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hasBeenOnScreen)
{
    if(!activeCheck)
    {
        var aliveCount = 0;
        with(prtMiniBoss) if(!dead) aliveCount++;
        with(prtBoss) if(!dead) aliveCount++;
        if(aliveCount == 0)
        {
            if (instance_exists(objMegaman) &amp;&amp; (place_meeting(x,y,objMegaman) || !isOnTouch))
            {
                if (insideView())
                {
                    xx = x;
                    yy = y;
                    event_user(0);
                    instance_destroy();
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// wouldn't wanna trigger self or remove bosses when a section changes, that would break things
if(!instance_exists(objSectionSwitcher) &amp;&amp; insideView())
{
    if(!hasBeenOnScreen) hasBeenOnScreen = true;
    
    if(global.checkpointX == x &amp;&amp; global.checkpointY == y &amp;&amp; global.checkpoint == room)
    {
        activeCheck = true;
    }
    else activeCheck = false;
    
    if(activeCheck)
    {
        with(prtMiniBoss) if(insideView())
        {
            instance_destroy();
            
            if(itemDrop != -1)
            {
                if (itemDrop == objKey)
                {
                    _ex = instance_create(bboxGetXCenter() - 8, bboxGetYCenter() - 8, objKey);
                    _ex.yspeed = -4;
                    _ex.homingTimer = 90;
                    playSFX(sfxKeySpawn);
                }
                else if(itemDrop == objEnergyElement)
                {
                    _ex = instance_create(bboxGetXCenter() - 8, bboxGetYCenter() - 8, objEnergyElement);
                }
                else
                {
                    _ex = instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);
                    _ex.myItem = itemDrop;
                    _ex.code = itemCode;
                    _ex.script = itemScript;
                    _ex.disappearTime = dropDisappearTime;
                }
                if(itemDrop &amp;&amp; dropOnce)
                {
                    itemDrop = 0;
                }
            }
        }
        
        with(prtBoss) if(insideView())
        {
            instance_destroy();
            
            if(itemDrop != -1)
            {
                if (itemDrop == objKey)
                {
                    _ex = instance_create(bboxGetXCenter() - 8, bboxGetYCenter() - 8, objKey);
                    _ex.yspeed = -4;
                    _ex.homingTimer = 90;
                    playSFX(sfxKeySpawn);
                }
                else if(itemDrop == objEnergyElement)
                {
                    _ex = instance_create(bboxGetXCenter() - 8, bboxGetYCenter() - 8, objEnergyElement);
                }
                else
                {
                    _ex = instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);
                    _ex.myItem = itemDrop;
                    _ex.code = itemCode;
                    _ex.script = itemScript;
                    _ex.disappearTime = dropDisappearTime;
                }
                if(itemDrop &amp;&amp; dropOnce)
                {
                    itemDrop = 0;
                }
            }
        }
    }
    else
    {
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.checkpoint = room;
global.checkpointX = xx;
global.checkpointY = yy;

global.respawnAnimation = respawnAnimation;
if (instance_exists(objMegaman))
{
    objMegaman.showDuringReady = showDuringReady;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
