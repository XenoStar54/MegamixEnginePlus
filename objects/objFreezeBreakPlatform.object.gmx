<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFreezeBreakPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

grav = 0;
blockCollision = 0;
bubbleTimer = -1;
canHit = 0;
canDamage = 0;
isSolid = 2;

timer = 0;
timerMax = 60;
latch = 0;

itemDrop = -1;

image_xscale = ceil(abs(image_xscale));
imageWidth = sprite_width/image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(entityCanStep())
{
    if(!latch)
    {
        with(objMegaman)
        {
            if(place_meeting(x,y+gravDir,other) &amp;&amp; !place_meeting(x,y,other) &amp;&amp; ground)
            {
                other.latch = 1;
                other.timer = 0;
                playSFX(sfxChillCrack);
            }
        }
    }
    else
    {
        timer++;
        if(timer mod 4 == 1)
        {
            var crack = instance_create(random_range(bbox_left+4,bbox_right-4),random_range(bbox_top+4,bbox_bottom-4),objSlashEffect);
            crack.sprite_index = sprFreezeBreakPlatformBits;
            crack.image_index = choose(0,1);
            crack.image_speed = 0;
            crack.image_angle = choose(0,180);
            crack.image_xscale = choose(-1,1);
        }
        if(timer == timerMax)
        {
            event_user(10);
            playSFX(sfxChillBreak);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

timer = 0;
latch = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = 1;

for(var i = 0; i &lt; image_xscale; i++)
{
    var crack = instance_create(bbox_left+(i+0.5)*imageWidth,bbox_top+0.5*sprite_height,objSlashEffect);
    crack.sprite_index = sprFreezeBreakPlatformBits;
    crack.image_index = 2;
    crack.image_speed = 0;
    crack.image_angle = choose(0,180);
    crack.image_xscale = choose(-1,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!dead)
{
    var crackLevel = 0;
    if(latch)
    {
        crackLevel = ceil((timer/timerMax)*((image_number-4)/4));
    }
    
    if(image_xscale == 1)
    {
        draw_sprite(sprite_index,crackLevel*4,x,y);
    }
    else
    {
        for(var i = 0; i &lt; image_xscale; i++)
        {
            if(i == 0) draw_sprite(sprite_index,1+crackLevel*4,x+i*imageWidth,y);
            else if(i == (image_xscale - 1)) draw_sprite(sprite_index,3+crackLevel*4,x+i*imageWidth,y);
            else draw_sprite(sprite_index,2+crackLevel*4,x+i*imageWidth,y);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
