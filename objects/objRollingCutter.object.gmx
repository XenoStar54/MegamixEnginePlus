<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCutShot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 1;
attackDelay = 8;

penetrate = 3;
pierces = 2;

image_speed = 1/4;

cutterTimer = 0;

blockCollision = 0;
grav = 0;
xspeed = 0;
yspeed = 0;

spd = 2.25;
turnSpd = 1.75;
initDir = 15; //goes to -15 i guess?
dir = 0;
phase = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    
    if (phase == 0)
    {   
        xspeed = cos(degtorad(dir))*spd;
        yspeed = -sin(degtorad(dir))*spd*2;
        show_debug_message("dir: " + string(dir) + ", dirchange: " + string(abs(dir - initDir)));
        dir -= image_xscale*turnSpd;
        if (abs(dir - initDir) &gt;= abs(initDir)*2 &amp;&amp; image_xscale &gt; 0 || abs(dir - initDir) &gt;= abs(180 - initDir)*2 &amp;&amp; image_xscale &lt; 0)
        {
            phase = 1;
            show_debug_message(string((180 - abs(initDir*2))));
            dir = wrapAngle(dir - abs((180 - abs(initDir*2)))*image_xscale);
            spd += 0.25;
        }
    }
    else if (phase == 1)
    {
        if ((wrapAngle(dir) &gt; 270 &amp;&amp; image_xscale &lt; 0) || (wrapAngle(dir) &lt; 270 &amp;&amp; image_xscale &gt; 0))
        {
            xspeed = cos(degtorad(dir))*spd;
            yspeed = -sin(degtorad(dir))*spd*2;
            
            cutterTimer++;
            if cutterTimer &lt; 10
            {
                dir -= image_xscale*turnSpd;
            }
            else
            {
                phase = 2;
            }
        }
        else
        {
            xspeed = cos(degtorad(dir))*spd;
            yspeed = -sin(degtorad(dir))*spd*2;
            dir -= image_xscale*turnSpd;
        }
        if (place_meeting(x, y, parent))
        {
            event_user(EV_DEATH);
        }
        
    }
    else if (phase == 2)
    {   
        xspeed = cos(degtorad(dir))*spd;
        yspeed = -sin(degtorad(dir))*spd*2;
        if (instance_exists(parent))
        {
            if (place_meeting(x, y, parent))
            {
                event_user(EV_DEATH);
            }
            dir = point_direction(spriteGetXCenter(), spriteGetYCenter(),
            spriteGetXCenterObject(parent),
            spriteGetYCenterObject(parent));
        }
        else
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var initAngle = 30;
if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    a = fireWeapon(18, -2, objRollingCutter, 1, 1, 2, 1);
    if (a)
    {
        a.image_xscale = image_xscale;
        a.initDir = 180*(image_xscale &lt; 0) + initAngle*image_xscale;
        a.dir = a.initDir;
        playSFX(sfxRollingCutter);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("ROLLING CUTTER", global.nesPalette[0], global.nesPalette[40], sprWeaponIconsRollingCutter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//rip off correct direction
var _cor = 0;
var _dir = point_direction(x, y, spriteGetXCenterObject(parent), spriteGetYCenterObject(parent));
if (_dir &gt;= dir)
{
    if (abs(_dir - dir) &gt;= abs((360 - _dir) + dir))
    {
        _cor = -1;
    }
    else
    {
        _cor = 1;
    }
}
else
{
    if (abs(dir - _dir) &gt;= abs((360 - dir) + _dir))
    {
        _cor = 1;
    }
    else
    {
        _cor = -1;
    }
}

repeat (spd)
{
    if (_dir != dir)
    {
        dir += _cor;
    }
    else
    {
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
