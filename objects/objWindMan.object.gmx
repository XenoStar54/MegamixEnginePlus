<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWindStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>sprWindMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
pose = sprWindStand
poseImgSpeed = 0.25
contactDamage = 5
ground = 0
introType = 3;
randomize()
phase = choose(1, 3, 4)
timer = 0
fastWind = 0
maxTimer = 10
destX = 0
yOffset = 0
drawEffect = 0
effectImage = 0
effectOffset = 0
phaseCount[1] = 0
phaseCount[3] = 0
phaseCount[4] = 0
phaseCount[phase]++
spinnerID1 = 1203
spinnerID2 = 1203
drawEffect = 0
effectImage = 0
effectOffset = 0

jumprandom = 0

manualColors = true;

// creation code
suckSpeed = 1.3;
suckTimer = 224;

// Health Bar
healthBarPrimaryColor[1] = global.nesPalette[32];
healthBarSecondaryColor[1] = global.nesPalette[40];

// Music
music = "Mega_Man_6.nsf";
musicType = "VGM";
musicTrackNumber = 12;

// Damage Table
enemyDamageValue(objBusterShot, 1);
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);

enemyDamageValue(objCentaurFlashWeapon, 4);

// MaGMML3
enemyDamageValue(objSparkChaser, 1);
enemyDamageValue(objLaserTrident, 4);
enemyDamageValue(objWaterShield, 1);
enemyDamageValue(objTornadoBlow, 1);
enemyDamageValue(objThunderBeam, 2);
enemyDamageValue(objBreakDash, 2);
enemyDamageValue(objMagneticShockwave, 1);
enemyDamageValue(objIceWall, 2);

// MaGMML2
enemyDamageValue(objHornetChaser, 0);
enemyDamageValue(objJewelSatellite, 0);
enemyDamageValue(objGrabBuster, 1);
enemyDamageValue(objTripleBlade, 4);
enemyDamageValue(objWheelCutter, 1);
enemyDamageValue(objSlashClaw, 1);
enemyDamageValue(objSakugarne, 1);
enemyDamageValue(objSuperArrow, 3);
enemyDamageValue(objWireAdapter, 2);

// MaGMML1
enemyDamageValue(objMetalBlade, 4);
enemyDamageValue(objGeminiLaser, 2);
enemyDamageValue(objSolarBlaze, 1);
enemyDamageValue(objTopSpin, 1);
enemyDamageValue(objThunderWool, 1);
enemyDamageValue(objPharaohShot, 2);
enemyDamageValue(objBlackHoleBomb, 1);
enemyDamageValue(objMagicCard, 2);

// MaG48HMML
enemyDamageValue(objFlameMixer, 1);
enemyDamageValue(objRainFlush, 1);
enemyDamageValue(objSparkShock, 1);
enemyDamageValue(objSearchSnake, 2);
enemyDamageValue(objTenguBlade, 4);
enemyDamageValue(objSaltWater, 1);
enemyDamageValue(objConcreteShot, 1);
enemyDamageValue(objHomingSniper, 2);

// MaG24HMML
enemyDamageValue(objSuperArmBlockProjectile, 1);
enemyDamageValue(objSuperArmDebris, 1);
enemyDamageValue(objChillShot, 1);
enemyDamageValue(objChillSpikeLanded, 4);

// Misc.
enemyDamageValue(objPowerStone, 1);
enemyDamageValue(objPlantBarrier, 1);
enemyDamageValue(objBlockDropper, 1);
enemyDamageValue(objIceSlasher, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if entityCanStep()
{
    if (isFight == 1)
    {
        grav = 0
        switch phase
        {
            case 0:
                calibrateDirection();
                xspeed = 0
                sprite_index = sprWindStand
                timer += 1
                if (timer &gt;= 20)
                {
                    timer = 0
                    randomize()
                    phase = choose(1, 3, 4)
                    switch phase
                    {
                        case 1:
                            phaseCount[1]++
                            phaseCount[3] = 0
                            phaseCount[4] = 0
                            break
                        case 3:
                            phaseCount[1] = 0
                            phaseCount[3]++
                            phaseCount[4] = 0
                            break
                        case 4:
                            phaseCount[1] = 0
                            phaseCount[3] = 0
                            phaseCount[4]++
                            break
                    }
                    
                    if (phaseCount[phase] &gt;= 3)
                    {
                        randomize()
                        switch phase
                        {
                            case 1:
                                var nextPhase = choose(3, 4)
                                break
                            case 3:
                                nextPhase = choose(1, 4)
                                break
                            case 4:
                                nextPhase = choose(1, 3)
                                break
                        }
                        
                        phaseCount[phase] = 0
                        phase = nextPhase
                        phaseCount[phase]++
                    }
                }
                break
            case 1:
                xspeed = 0
                sprite_index = sprWindPrepare
                timer += 1
                if (timer &gt;= 5)
                {
                    timer = 0
                    phase = 2
                }
                break
            case 2:
                xspeed = 0
                sprite_index = sprWindPull
                image_speed = 0.5
                if (timer == 0)
                {
                    randomize()
                    fastWind = choose(0, 0, 1)
                }
                with (objMegaman)
                    {
                        if (id == other.id)
                            continue;
                        if (!dead)
                        {
                            if (climbing)
                            {
                                continue;
                            }
                            
                            
                            with (other)
                            {
                                if (collision_rectangle(x, view_yview, x + image_xscale * view_wview, view_yview + view_hview, other.id, false, false))
                                {
                                    with (other)
                                    {
                                        shiftObject(-other.suckSpeed * other.image_xscale, 0, 1);
                                    }
                                }
                            }
                        }
                    }
                timer += 1
                if (timer &gt;= 120)
                {
                    timer = 0
                    phase = 0
                }
                break
            case 3:
                if (timer &lt; 5)
                    sprite_index = sprWindPrepare
                else
                    sprite_index = sprWindShoot
                image_speed = 0
                xspeed = 0
                timer += 1
                if (timer &gt;= 25)
                {
                    var ID = instance_create((x + (image_xscale * ((-sprite_get_xoffset(sprite_index)) + 32))), ((y - sprite_get_yoffset(sprite_index)) + 23), objWindProjectile);
                    ID.dir = image_xscale
                    ID.yDir = 1
                    spinnerID1 = ID
                    ID = instance_create((x + (image_xscale * ((-sprite_get_xoffset(sprite_index)) + 32))), ((y - sprite_get_yoffset(sprite_index)) + 23), objWindProjectile)
                    ID.dir = image_xscale
                    ID.yDir = -1
                    spinnerID2 = ID
                    playSFX(sfxEnemyShoot)
                    phase = 0
                    timer = -20
                }
                break
            case 4:
                xspeed = 0
                yspeed = 0
                timer += 1
                if (timer == 1)
                {
                    if ((!place_meeting(x, (y - 4), objSolid)))
                        y -= 4
                    sprite_index = sprWindStand
                    drawEffect = 1
                    effectImage = 0
                    effectOffset = 8
                }
                else if (timer == 7)
                    sprite_index = sprWindFloat
                else if (timer &gt;= 30)
                {
                    phase = 5
                    timer = 0
                }
                break
            case 5:
                if (timer == 0)
                {
                    randomize()
                    maxTimer = irandom_range(8, 15)
                }
                xspeed = 0
                yspeed = -4
                timer += 1
                if (timer &gt;= maxTimer || place_meeting(x, (y + yspeed), objSolid))
                {
                    timer = 0
                    phase = 6
                    calibrateDirection();
                    if instance_exists(objMegaman)
                        destX = sprite_get_xcenter_object(objMegaman)
                    else
                        destX = (x + (image_xscale * 128))
                }
                break
            case 6:
                xspeed = (image_xscale * 4)
                yspeed = 0
                timer += 1
                if (timer &gt;= 5)
                {
                    timer = 0
                    if (yOffset == 0)
                        yOffset = 1
                    else
                        yOffset = 0
                }
                if ((image_xscale == 1 &amp;&amp; x &gt;= destX) || (image_xscale == -1 &amp;&amp; x &lt;= destX) || place_meeting((x + xspeed), y, objSolid))
                {
                    xspeed = 0
                    timer = 0
                    yOffset = 0
                    phase = 7
                }
                break
            case 7:
                xspeed = 0
                yspeed = 4
                if (ground == 1 || place_meeting(x, (y + yspeed), objSpring))
                {
                    timer = 0
                    phase = 0
                    yspeed = 0
                }
                break
        }
        
    }
    if (drawEffect == 1)
    {
        effectImage += ((0.25 - ((effectOffset != 0 * 7.5) / 60)))
        if (effectImage &gt;= (sprite_get_number(sprWindEffect) - 0.25))
        {
            drawEffect = 0
            effectImage = 0
        }
    }
    if (phase == 5 || phase == 6 || phase == 7)
    {
        if (drawEffect == 0)
        {
            drawEffect = 1
            effectImage = 0
            effectOffset = 0
        }
    }
}
else
    image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objWindProjectile)
{
    instance_destroy();
}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!dead)
{
    if (drawBoss) // actually draw itself
    {
        if ((iFrames mod 4) &lt; 2 || !iFrames)
        {
            event_user(2);
        }
        else // Hitspark
        {
            d3d_set_fog(true, c_white, 0, 0);
            event_user(2);
            d3d_set_fog(false, 0, 0, 0);
        }
    }
    if (drawEffect == 1)
    {
    draw_sprite_ext(sprWindEffect, floor(effectImage), ((bbox_left + 2) - effectOffset), (((y - sprite_get_yoffset(sprite_index)) + sprite_get_height(sprite_index)) + 4), -1, 1, 0, c_white, 1)
    draw_sprite_ext(sprWindEffect, floor(effectImage), ((bbox_right - 2) + effectOffset), (((y - sprite_get_yoffset(sprite_index)) + sprite_get_height(sprite_index)) + 4), 1, 1, 0, c_white, 1)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
