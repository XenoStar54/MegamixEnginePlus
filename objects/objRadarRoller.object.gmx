<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRadarRoller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 1;

image_speed = 0;
imgSpeedMin = 2;
imgSpeedMax = 32;

penetrate = 3;
pierces = 2;
attackDelay = 4;

xspeed = 0;
yspeed = 0;
grav = 0.2;
blockCollision = 1;

moveSpeed = 3.5;
acceleration = 0.125;

canReturn = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep()){

    var speedMagnitude = point_distance(0, 0, xspeed, yspeed);
    if (abs(speedMagnitude) &gt; 0.1){
       image_speed = 1/lerp(imgSpeedMax, imgSpeedMin, min(speedMagnitude, moveSpeed)/moveSpeed) * sign(xspeed);
    }
    else{
        image_speed = 0;
    }
    
    if (canReturn){
    
        if (instance_exists(parent)){
        
            xspeed += sign(parent.x-x)*acceleration;
            xspeed = clamp(xspeed, -moveSpeed, moveSpeed);
            
            if (instance_place(x, y, parent) &amp;&amp; canReturn){
            
                event_user(EV_DEATH);
                instance_create(x, y, objExplosion);
            
            }
        
        }
    
    }
    
    if (xcoll != 0){
    
        if (!canReturn) canReturn = true;
        if (abs(xcoll/2) &gt; 0.1) xspeed = -xcoll/2;
        yspeed = image_yscale*-moveSpeed;
    
    }
    
    if (ycoll != 0){
    
        if (!canReturn) canReturn = true;
        if (abs(ycoll/2) &gt; 0.1) yspeed = -ycoll/2;
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT)){

    var a = fireWeapon(18, -2, objRadarRoller, 1, 1, 2, 1);
    if (a){
    
        playSFX(sfxBuster);
        
        a.image_xscale = 1;
        a.image_yscale = 1;
        
        a.grav *= image_yscale;
        a.xspeed = image_xscale*a.moveSpeed;
        a.yspeed = image_yscale*a.moveSpeed*-1;
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("RADAR ROLLER", global.nesPalette[33], global.nesPalette[40], sprWeaponIconsRadarRoller);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.damage != 0)
{

    var dir = point_direction(bboxGetXCenterObject(other), bboxGetYCenterObject(other), x, y);
    
    xspeed = cos(degtorad(dir))*moveSpeed;
    xspeed = -sin(degtorad(dir))*moveSpeed;
    
    if (!canReturn) canReturn = true;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playSFX(sfxReflect);

if (abs(xspeed/2) &gt; 0.1) xspeed *= -1/2;
yspeed = image_yscale*-moveSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
