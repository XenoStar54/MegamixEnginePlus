<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRollingCutterGB</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 1;

image_speed = 0.15;

penetrate = 2;
pierces = 2;

spd = 1.8;
returnSpd = 2.6;

xspeed = 0;
yspeed = 0;
grav = 0;

rotateChange = 2.4;
rotateChangeRecoil = 14;

back = false;
sfx = noone;

animTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sfx != noone)
{
    stopSFX(sfx);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    speed = spd;
    
    if (!back &amp;&amp; !(direction &gt; 215 &amp;&amp; direction &lt; 325))
    {
        direction += rotateChange * -image_xscale * 1.2;
    }
    else if (!back &amp;&amp; (direction &gt; 215 &amp;&amp; direction &lt; 325))
    {
        back = true;
    }
    
    if (back)
    {
        var pxd = 0;
        var pyd = 0;
        var pAngle = 0;
        if (instance_exists(parent))
        {
            pxd = parent.x - x;
            pyd = parent.y - y;
            if (pxd != 0)
            {
                pAngle = loopDegrees(radtodeg(arctan2(-pyd, pxd)));
            }
            else
            {
                if (pyd &gt;= 0)
                {
                    pAngle = 270;
                }
                else
                {
                    pAngle = 90;
                }
            }
        }
    
        var change = -(loopDegrees(direction - pAngle) - 180);
        if (change &gt; rotateChangeRecoil)
        {
            change = -rotateChangeRecoil;
        }
        
        if (change &lt; -rotateChangeRecoil)
        {
            change = rotateChangeRecoil;
        }
        
        direction += change;
        speed = returnSpd;
    }
    
    if (back &amp;&amp; instance_exists(parent))
    {
        if (place_meeting(x, y, parent))
        {
            instance_destroy();
        }
    }
    else
    {
        if (sfx == noone)
        {
            sfx = playSFX(sfxDoorShutterGBI, true);
        }
    }
    
    // animation
    animTimer++;
    if (animTimer &gt;= 4)
    {
        animTimer = 0;
        image_angle += 90 * image_xscale;
    }
}
else
{
    speed = 0;
    if (sfx != noone)
    {
        stopSFX(sfx);
        sfx = noone;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xOffset, yOffset, bulletObject, bulletLimit, weaponCost, action, willStop;

xOffset = 17; // x offset from center of player
yOffset = -7; // y offset from center of player
bulletObject = objRollingCutterGB;
bulletLimit = 2;
weaponCost = 1;
action = 2; // 0 - no frame; 1 - shoot; 2 - throw
willStop = 1; // If this is 1, the player will halt on shooting ala Metal Blade.

if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    i = fireWeapon(xOffset, yOffset, bulletObject, bulletLimit, weaponCost, action, willStop);
    if (instance_exists(i))
    {
        if (image_xscale &gt; 0)
        {
            i.direction = 35;
        }
        else
        {
            i.direction = 145;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("ROLLING CUTTER GB", global.nesPalette[0], global.nesPalette[40], sprWeaponIconsRollingCutterGB);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// EV_REFLECT
canDamage = 0;
canHit = false;

speed = 0;
spd = 0;
returnSpd = 0;
back = false;
rotateChange = 0;
rotateChangeRecoil = 0;

var dir = 1 - 2 * withinDegreeRange(90, true, 270, false, direction);
yspeed = image_yscale * -4;
xspeed = 0.35 * -dir;
grav = gravAccel * image_yscale;
direction = 0;

if (sfx != noone)
{
    stopSFX(sfx);
    sfx = noone;
}

playSFX(sfxReflectGBI);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
