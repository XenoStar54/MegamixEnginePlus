<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRushSearch</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// digs up helpful items from the ground
event_inherited();

contactDamage = 0;

canHit = false;

image_speed = 0;
image_index = 4;
wiggleSpd = 7/60;
wiggleImg = 0;

blockCollision = 1;
grav = gravAccel;
bubbleTimer = 0;

timer = 0;
doLeave = 0;
canDig = 0;
myNode = noone;
item = noone;

disappearTime = 105*4;

var index = 0;
itemRollTable[index,0] = objBoltSmall;
itemRollTable[index++,1] = 20;
itemRollTable[index,0] = objLifeEnergySmall;
itemRollTable[index++,1] = 10;
itemRollTable[index,0] = objWeaponEnergySmall;
itemRollTable[index++,1] = 10;
itemRollTable[index,0] = objBoltBig;
itemRollTable[index++,1] = 10;
itemRollTable[index,0] = objLifeEnergyBig;
itemRollTable[index++,1] = 4;
itemRollTable[index,0] = objWeaponEnergyBig;
itemRollTable[index++,1] = 4;
itemRollTable[index,0] = objLife;
itemRollTable[index++,1] = 2;

itemCode = '';
itemScript = scrNoEffect;

doRollForYashichi = true; // can't see that being gamebreaking...
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if(timer == 0)
    {
        var prevMask = mask_index;
        mask_index = mskRushSearchSniffMask;
        if(checkSolid(0,0)) canDig = 1;
        if(instance_exists(objRushSearchNode))
        {
            var node = instance_place(x,y,objRushSearchNode);
            if(node) myNode = node;
        }
        mask_index = prevMask;
        timer++;
    }
    else
    {
        if(canDig) // pull out an item
        {
            if(myNode) // bark and pull out a special item specified in the node
            {
                timer++;
                if(timer &lt; 15) image_index = 0+4*(floor(wiggleImg) mod 2);
                else if(timer == 15)
                {
                    image_index = 3+4*(floor(wiggleImg) mod 2);
                    // playSFX(); // bark sfx here
                }
                else if(timer &lt; 30) image_index = 3+4*(floor(wiggleImg) mod 2);
                else if(timer &lt; 45) image_index = 0+4*(floor(wiggleImg) mod 2);
                else if(timer &lt; 50) image_index = 1+4*(floor(wiggleImg) mod 2);
                else if(timer &lt; 70) image_index = 2+4*(floor(wiggleImg) mod 2);
                else if(timer == 70)
                {
                    image_index = 1+4*(floor(wiggleImg) mod 2);
                    item = myNode.objectToSpawn;
                    itemCode = myNode.itemCode;
                    itemScript = myNode.itemScript;
                    with(myNode)
                    {
                        instance_destroy();
                        with (objGlobalControl)
                        {
                            ds_list_add(pickups, string(room) + '/' + string(other.id));
                        }
                    }
                }
                else if(timer &lt; 75) image_index = 1+4*(floor(wiggleImg) mod 2);
                else if(timer &lt; 90) image_index = 0+4*(floor(wiggleImg) mod 2);
                else doLeave = 1;
            }
            else
            {
                timer++;
                if(timer &lt; 15) image_index = 0+4*(floor(wiggleImg) mod 2);
                else if(timer &lt; 20) image_index = 1+4*(floor(wiggleImg) mod 2);
                else if(timer &lt; 40) image_index = 2+4*(floor(wiggleImg) mod 2);
                else if(timer == 40)
                {
                    image_index = 1+4*(floor(wiggleImg) mod 2);
                    
                    if(doRollForYashichi) // once again, can't see that being gamebreaking...
                    {
                        if (!irandom(4096))
                        {
                            item = objYashichi;
                        }
                    }
                    
                    if(!item)
                    {
                        var countRoll = 0;
                        for(var i = 0; i &lt; array_height_2d(itemRollTable); i++)
                        {
                            countRoll += itemRollTable[i,1];
                        }
                        var rng = random(countRoll);
                        countRoll = 0;
                        for(var i = 0; i &lt; array_height_2d(itemRollTable); i++)
                        {
                            countRoll += itemRollTable[i,1];
                            if(rng &lt; countRoll)
                            {
                                item = itemRollTable[i,0];
                                i = array_height_2d(itemRollTable);
                            }
                        }
                    }
                }
                else if(timer &lt; 45) image_index = 1+4*(floor(wiggleImg) mod 2);
                else if(timer &lt; 60) image_index = 0+4*(floor(wiggleImg) mod 2);
                else doLeave = 1;
            }
        }
        else // get sad and leave
        {
            timer++;
            if(timer &lt; 5) image_index = 4;
            else if(timer &lt; 10) image_index = 8;
            else if(timer &lt; 30) image_index = 9;
            else doLeave = 1;
        }
    }
    
    if(item)
    {
        var spawnedItem = instance_create(x+image_xscale*8,y,item);
        spawnedItem.respawn = false;
        spawnedItem.x += (bboxGetXCenter()+image_xscale*8) - bboxGetXCenterObject(spawnedItem);
        spawnedItem.y += bboxGetYCenter() - bboxGetYCenterObject(spawnedItem);
        spawnedItem.disappear = disappearTime;
        if (spawnedItem.grav != 0)
        {
            spawnedItem.yspeed = -2;
        }
        
        with (spawnedItem)
        {
            if (other.itemScript != scrNoEffect)
            {
                script_execute(other.itemScript);
            }
            
            if (other.itemCode != "")
            {
                stringExecutePartial(other.itemCode);
            }
        }
        
        item = noone;
        global.ammo[playerID, global.weapon[playerID]] = max(0, global.ammo[playerID, global.weapon[playerID]] - 2 / (global.energySaver + 1));
    }
    
    wiggleImg += wiggleSpd;
    
    if (!ground)
    {
        doLeave = 1;
    }

    if (doLeave)
    {
        // Teleport away
        var i = instance_create(x, y, objRushTeleport);
        i.upordown = 'up';
        i.parent = parent;
        i.image_yscale = image_yscale;
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _canSpawn = true;

with (objRushSearch)
{
    if (playerID == other.playerID)
    {
        _canSpawn = false;
    }
}

with (objRushTeleport)
{
    if (playerID == other.playerID)
    {
        _canSpawn = false;
    }
}

_canSpawn = _canSpawn &amp;&amp; global.ammo[playerID, global.weapon[playerID]] &gt; 0;

if (_canSpawn)
{
    if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
    {
        i = fireWeapon(26, 0, objRushTeleport, 1, 0, 0, 0);
        with (i)
        {
            type = 'search';
            y = view_yview;
            if (image_yscale &lt; 0)
            {
                y += view_hview;
            }
        }
    }
}

// normal firing
scrBusterControl(false, true, !_canSpawn);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("RUSH SEARCH", -2, -2, sprWeaponIconsRushSearch);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
